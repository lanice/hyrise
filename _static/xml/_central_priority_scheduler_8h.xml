<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_central_priority_scheduler_8h" kind="file">
    <compoundname>CentralPriorityScheduler.h</compoundname>
    <includes refid="_abstract_task_scheduler_8h" local="yes">AbstractTaskScheduler.h</includes>
    <includes refid="_hwloc_helper_8h" local="yes">helper/HwlocHelper.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">thread</includes>
    <includes local="no">queue</includes>
    <includes local="no">vector</includes>
    <includes local="no">condition_variable</includes>
    <includes refid="_shared_scheduler_8h" local="no">taskscheduler/SharedScheduler.h</includes>
    <includedby refid="_central_priority_scheduler_8cpp" local="yes">src/lib/taskscheduler/CentralPriorityScheduler.cpp</includedby>
    <incdepgraph>
      <node id="18637">
        <label>queue</label>
      </node>
      <node id="18628">
        <label>AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="18629" relation="include">
        </childnode>
        <childnode refid="18635" relation="include">
        </childnode>
        <childnode refid="18632" relation="include">
        </childnode>
        <childnode refid="18639" relation="include">
        </childnode>
        <childnode refid="18640" relation="include">
        </childnode>
        <childnode refid="18638" relation="include">
        </childnode>
        <childnode refid="18641" relation="include">
        </childnode>
      </node>
      <node id="18635">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="18632" relation="include">
        </childnode>
        <childnode refid="18631" relation="include">
        </childnode>
        <childnode refid="18636" relation="include">
        </childnode>
        <childnode refid="18637" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18638" relation="include">
        </childnode>
        <childnode refid="18629" relation="include">
        </childnode>
      </node>
      <node id="18644">
        <label>stdexcept</label>
      </node>
      <node id="18634">
        <label>string</label>
      </node>
      <node id="18639">
        <label>unordered_set</label>
      </node>
      <node id="18627">
        <label>src/lib/taskscheduler/CentralPriorityScheduler.h</label>
        <link refid="CentralPriorityScheduler.h"/>
        <childnode refid="18628" relation="include">
        </childnode>
        <childnode refid="18641" relation="include">
        </childnode>
        <childnode refid="18632" relation="include">
        </childnode>
        <childnode refid="18631" relation="include">
        </childnode>
        <childnode refid="18636" relation="include">
        </childnode>
        <childnode refid="18637" relation="include">
        </childnode>
        <childnode refid="18630" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18643" relation="include">
        </childnode>
      </node>
      <node id="18642">
        <label>hwloc.h</label>
      </node>
      <node id="18633">
        <label>condition_variable</label>
      </node>
      <node id="18630">
        <label>vector</label>
      </node>
      <node id="18640">
        <label>iostream</label>
      </node>
      <node id="18631">
        <label>mutex</label>
      </node>
      <node id="18643">
        <label>taskscheduler/SharedScheduler.h</label>
        <link refid="_shared_scheduler_8h"/>
        <childnode refid="18628" relation="include">
        </childnode>
        <childnode refid="18644" relation="include">
        </childnode>
      </node>
      <node id="18636">
        <label>thread</label>
      </node>
      <node id="18641">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="18642" relation="include">
        </childnode>
        <childnode refid="18630" relation="include">
        </childnode>
      </node>
      <node id="18638">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="18632">
        <label>memory</label>
      </node>
      <node id="18629">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="18630" relation="include">
        </childnode>
        <childnode refid="18631" relation="include">
        </childnode>
        <childnode refid="18632" relation="include">
        </childnode>
        <childnode refid="18633" relation="include">
        </childnode>
        <childnode refid="18634" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18645">
        <label>src/lib/taskscheduler/CentralPriorityScheduler.h</label>
        <link refid="CentralPriorityScheduler.h"/>
        <childnode refid="18646" relation="include">
        </childnode>
      </node>
      <node id="18646">
        <label>src/lib/taskscheduler/CentralPriorityScheduler.cpp</label>
        <link refid="_central_priority_scheduler_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_priority_worker_thread" prot="public">PriorityWorkerThread</innerclass>
    <innerclass refid="class_central_priority_scheduler" prot="public">CentralPriorityScheduler</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>CentralPriorityScheduler.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Mar<sp/>20,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jwust</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CENTRALPRIORITYSCHEDULER_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CENTRALPRIORITYSCHEDULER_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_task_scheduler_8h" kindref="compound">AbstractTaskScheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_hwloc_helper_8h" kindref="compound">helper/HwlocHelper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_shared_scheduler_8h" kindref="compound">taskscheduler/SharedScheduler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_central_priority_scheduler" kindref="compound">CentralPriorityScheduler</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>our<sp/>worker<sp/>thread<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_priority_worker_thread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_priority_worker_thread" kindref="compound">PriorityWorkerThread</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="class_priority_worker_thread_1a3646c6549141551e49ff1e47ffd38f62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_central_priority_scheduler" kindref="compound">CentralPriorityScheduler</ref><sp/>&amp;<ref refid="class_priority_worker_thread_1a3646c6549141551e49ff1e47ffd38f62" kindref="member">scheduler</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="class_priority_worker_thread_1a41116aa828458548c7b90edf632485ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_priority_worker_thread_1a41116aa828458548c7b90edf632485ed" kindref="member">PriorityWorkerThread</ref>(<ref refid="class_central_priority_scheduler" kindref="compound">CentralPriorityScheduler</ref><sp/>&amp;s)<sp/>:<sp/><ref refid="class_priority_worker_thread_1a3646c6549141551e49ff1e47ffd38f62" kindref="member">scheduler</ref>(s)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_priority_worker_thread_1ab9a12de2523dab40acbb8b8016f25a21" kindref="member">operator()</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_central_priority_scheduler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_central_priority_scheduler" kindref="compound">CentralPriorityScheduler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_abstract_task_scheduler" kindref="compound">AbstractTaskScheduler</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_task_ready_observer" kindref="compound">TaskReadyObserver</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="class_central_priority_scheduler_1a931cd49bd225ef9e0ec649c86d70a85c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_priority_worker_thread" kindref="compound">PriorityWorkerThread</ref>;</highlight></codeline>
<codeline lineno="38" refid="class_central_priority_scheduler_1abb2642b2d1c602be4fdb84b08286a2bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_set&lt;std::shared_ptr&lt;Task&gt;<sp/>&gt;<sp/><ref refid="class_central_priority_scheduler_1abb2642b2d1c602be4fdb84b08286a2bc" kindref="member">waiting_tasks_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>for<sp/>tasks<sp/>with<sp/>open<sp/>dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_central_priority_scheduler_1a8c99d5f718f20ede6e301ce25c25b0d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_central_priority_scheduler_1abb2642b2d1c602be4fdb84b08286a2bc" kindref="member">waiting_tasks_t</ref><sp/><ref refid="class_central_priority_scheduler_1a8c99d5f718f20ede6e301ce25c25b0d7" kindref="member">_waitSet</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>protect<sp/>waitset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_central_priority_scheduler_1a812f40d3aca3f290c4f3929f425de122" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_central_priority_scheduler_1a812f40d3aca3f290c4f3929f425de122" kindref="member">_setMutex</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>queue<sp/>of<sp/>tasks<sp/>that<sp/>are<sp/>ready<sp/>to<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_central_priority_scheduler_1a288bb91fbd5b94502ed292af59f26125" refkind="member"><highlight class="normal"><sp/><sp/>std::priority_queue&lt;std::shared_ptr&lt;Task&gt;,<sp/>std::vector&lt;std::shared_ptr&lt;Task&gt;&gt;,<sp/><ref refid="class_compare_task_ptr" kindref="compound">CompareTaskPtr</ref>&gt;<sp/><ref refid="class_central_priority_scheduler_1a288bb91fbd5b94502ed292af59f26125" kindref="member">_runQueue</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>protect<sp/>ready<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_central_priority_scheduler_1a5b6745845db84fb6656bd2a43164b590" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_central_priority_scheduler_1a5b6745845db84fb6656bd2a43164b590" kindref="member">_queueMutex</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>worker<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_central_priority_scheduler_1a6dd547be0a1a4ada17042b7187f59377" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::thread<sp/>*&gt;<sp/><ref refid="class_central_priority_scheduler_1a6dd547be0a1a4ada17042b7187f59377" kindref="member">_worker_threads</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>variable<sp/>to<sp/>wake<sp/>up<sp/>workers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_central_priority_scheduler_1af27c53fb7e88d1b8c9afde12e962fe0b" refkind="member"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/><ref refid="class_central_priority_scheduler_1af27c53fb7e88d1b8c9afde12e962fe0b" kindref="member">_condition</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scheduler<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_central_priority_scheduler_1a3e259b3c246b4cb0a6c36b005de99246" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_task_scheduler_1a8d6f6a94cb6592ae0113336467cee05f" kindref="member">scheduler_status_t</ref><sp/><ref refid="class_central_priority_scheduler_1a3e259b3c246b4cb0a6c36b005de99246" kindref="member">_status</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>protect<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_central_priority_scheduler_1a9a6c897d37b3cd024ce6d1698f96a0c5" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_central_priority_scheduler_1a9a6c897d37b3cd024ce6d1698f96a0c5" kindref="member">_statusMutex</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_central_priority_scheduler_1aa4267e5a5f132e654be611d5b0bbe489" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>log4cxx::LoggerPtr<sp/><ref refid="class_central_priority_scheduler_1aa4267e5a5f132e654be611d5b0bbe489" kindref="member">_logger</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="class_central_priority_scheduler_1ac2d8c0899a549e4ef2da8d036165e927" kindref="member">CentralPriorityScheduler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threads<sp/>=<sp/><ref refid="_hwloc_helper_8cpp_1a5852d7c54d41ff6c71f33e4b89a5f059" kindref="member">getNumberOfCoresOnSystem</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1a67661a7e141220b3e120a0b09d4d1131" kindref="member">~CentralPriorityScheduler</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1a5c1c6c07d172403b8e6f99a4a1ab0fa8" kindref="member">worker_loop</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/>schedule<sp/>a<sp/>task<sp/>for<sp/>execution</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1a602921c69c0ea074e686ca04e6090a20" kindref="member">schedule</ref>(std::shared_ptr&lt;Task&gt;<sp/>task);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*<sp/>shutdown<sp/>task<sp/>scheduler;<sp/>makes<sp/>sure<sp/>all<sp/>underlying<sp/>threads<sp/>are<sp/>stopped</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1a9db03b67047eb3abe9f67f893a45dde1" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1a3963ca6bad7e66ef039dbaf08f0724d8" kindref="member">getNumberOfWorker</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_central_priority_scheduler_1aa5d83a611e6ebd950bab3994263fe941" kindref="member">notifyReady</ref>(std::shared_ptr&lt;Task&gt;<sp/>task);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CENTRALPRIORITYSCHEDULER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/CentralPriorityScheduler.h"/>
  </compounddef>
</doxygen>
