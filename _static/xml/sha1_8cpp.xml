<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="sha1_8cpp" kind="file">
    <compoundname>sha1.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="sha1_8h" local="yes">sha1.h</includes>
    <incdepgraph>
      <node id="10989">
        <label>sys/types.h</label>
      </node>
      <node id="10988">
        <label>string.h</label>
      </node>
      <node id="10986">
        <label>src/lib/helper/sha1.cpp</label>
        <link refid="sha1.cpp"/>
        <childnode refid="10987" relation="include">
        </childnode>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="10989" relation="include">
        </childnode>
        <childnode refid="10990" relation="include">
        </childnode>
      </node>
      <node id="10990">
        <label>sha1.h</label>
        <link refid="sha1_8h"/>
      </node>
      <node id="10987">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sha1_8cpp_1a9e2c8862606a4549edef298248089783" prot="public" static="no">
        <name>SHA1HANDSOFF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="23" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1af1373930110e4f86cb1f4bc6d44a66ee" prot="public" static="no">
        <name>rol</name>
        <param><defname>value</defname></param>
        <param><defname>bits</defname></param>
        <initializer>(((value) &lt;&lt; (bits)) | ((value) &gt;&gt; (32 - (bits))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="34" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1a1a75de24d0277c5319098c218efaef2d" prot="public" static="no">
        <name>blk0</name>
        <param><defname>i</defname></param>
        <initializer>(block-&gt;l[i] = (<ref refid="sha1_8cpp_1af1373930110e4f86cb1f4bc6d44a66ee" kindref="member">rol</ref>(block-&gt;l[i],24)&amp;0xFF00FF00) \
                 |(rol(block-&gt;l[i],8)&amp;0x00FF00FF))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="40" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" prot="public" static="no">
        <name>blk</name>
        <param><defname>i</defname></param>
        <initializer>(block-&gt;l[i&amp;15] = <ref refid="sha1_8cpp_1af1373930110e4f86cb1f4bc6d44a66ee" kindref="member">rol</ref>(block-&gt;l[(i+13)&amp;15]^block-&gt;l[(i+8)&amp;15] \
                                     ^block-&gt;l[(i+2)&amp;15]^block-&gt;l[i&amp;15],1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="47" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" prot="public" static="no">
        <name>R0</name>
        <param><defname>v</defname></param>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>i</defname></param>
        <initializer>z+=((w&amp;(x^y))^y)+<ref refid="sha1_8cpp_1a1a75de24d0277c5319098c218efaef2d" kindref="member">blk0</ref>(i)+0x5A827999+rol(v,5);w=rol(w,30);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="50" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" prot="public" static="no">
        <name>R1</name>
        <param><defname>v</defname></param>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>i</defname></param>
        <initializer>z+=((w&amp;(x^y))^y)+<ref refid="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" kindref="member">blk</ref>(i)+0x5A827999+rol(v,5);w=rol(w,30);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="51" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" prot="public" static="no">
        <name>R2</name>
        <param><defname>v</defname></param>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>i</defname></param>
        <initializer>z+=(w^x^y)+<ref refid="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" kindref="member">blk</ref>(i)+0x6ED9EBA1+rol(v,5);w=rol(w,30);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="52" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" prot="public" static="no">
        <name>R3</name>
        <param><defname>v</defname></param>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>i</defname></param>
        <initializer>z+=(((w|x)&amp;y)|(w&amp;x))+<ref refid="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" kindref="member">blk</ref>(i)+0x8F1BBCDC+rol(v,5);w=rol(w,30);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="53" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" prot="public" static="no">
        <name>R4</name>
        <param><defname>v</defname></param>
        <param><defname>w</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <param><defname>i</defname></param>
        <initializer>z+=(w^x^y)+<ref refid="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" kindref="member">blk</ref>(i)+0xCA62C1D6+rol(v,5);w=rol(w,30);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="54" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sha1_8cpp_1ab5237a548756a92263b16e32a1edfdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SHA1Transform</definition>
        <argsstring>(u_int32_t state[5], const unsigned char buffer[64])</argsstring>
        <name>SHA1Transform</name>
        <param>
          <type>u_int32_t</type>
          <declname>state</declname>
          <array>[5]</array>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>buffer</declname>
          <array>[64]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="59" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="59" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="sha1_8cpp_1a159a97b3039391403b8d9b0d240a9640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SHA1Init</definition>
        <argsstring>(SHA1_CTX *context)</argsstring>
        <name>SHA1Init</name>
        <param>
          <type><ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="179" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="179" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SHA1Update</definition>
        <argsstring>(SHA1_CTX *context, const unsigned char *data, u_int32_t len)</argsstring>
        <name>SHA1Update</name>
        <param>
          <type><ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u_int32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="192" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="192" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="sha1_8cpp_1aa58f279c51d82e868c9b0f7b1b7d08f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SHA1Final</definition>
        <argsstring>(unsigned char digest[20], SHA1_CTX *context)</argsstring>
        <name>SHA1Final</name>
        <param>
          <type>unsigned char</type>
          <declname>digest</declname>
          <array>[20]</array>
        </param>
        <param>
          <type><ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" line="215" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp" bodystart="215" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>from<sp/>valgrind<sp/>tests<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>================<sp/>sha1.c<sp/>================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>SHA-1<sp/>in<sp/>C</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>By<sp/>Steve<sp/>Reid<sp/>&lt;steve@edmweb.com&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>100%<sp/>Public<sp/>Domain</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>Test<sp/>Vectors<sp/>(from<sp/>FIPS<sp/>PUB<sp/>180-1)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>&quot;abc&quot;</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>A9993E36<sp/>4706816A<sp/>BA3E2571<sp/>7850C26C<sp/>9CD0D89D</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>&quot;abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq&quot;</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>84983E44<sp/>1C3BD26E<sp/>BAAE4AA1<sp/>F95129E5<sp/>E54670F1</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>A<sp/>million<sp/>repetitions<sp/>of<sp/>&quot;a&quot;</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>34AA973C<sp/>D4C4DAA4<sp/>F61EEB2B<sp/>DBAD2731<sp/>6534016F</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>LITTLE_ENDIAN<sp/>*<sp/>This<sp/>should<sp/>be<sp/>#define&apos;d<sp/>already,<sp/>if<sp/>true.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SHA1HANDSOFF<sp/>*<sp/>Copies<sp/>data<sp/>before<sp/>messing<sp/>with<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="sha1_8cpp_1a9e2c8862606a4549edef298248089783" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHA1HANDSOFF</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>u_int*_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__sun)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;solarisfixes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sha1_8h" kindref="compound">sha1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="sha1_8cpp_1af1373930110e4f86cb1f4bc6d44a66ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rol(value,<sp/>bits)<sp/>(((value)<sp/>&lt;&lt;<sp/>(bits))<sp/>|<sp/>((value)<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/>(bits))))</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>blk0()<sp/>and<sp/>blk()<sp/>perform<sp/>the<sp/>initial<sp/>expand.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>I<sp/>got<sp/>the<sp/>idea<sp/>of<sp/>expanding<sp/>during<sp/>the<sp/>round<sp/>function<sp/>from<sp/>SSLeay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BYTE_ORDER<sp/>==<sp/>LITTLE_ENDIAN</highlight></codeline>
<codeline lineno="39" refid="sha1_8cpp_1a1a75de24d0277c5319098c218efaef2d" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blk0(i)<sp/>(block-&gt;l[i]<sp/>=<sp/>(rol(block-&gt;l[i],24)&amp;0xFF00FF00)<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|(rol(block-&gt;l[i],8)&amp;0x00FF00FF))</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#elif<sp/>BYTE_ORDER<sp/>==<sp/>BIG_ENDIAN</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blk0(i)<sp/>block-&gt;l[i]</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#error<sp/>&quot;Endianness<sp/>not<sp/>defined!&quot;</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="46" refid="sha1_8cpp_1abd06ff24e9f6f5f0a9c32a1cba4b0f9c" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>blk(i)<sp/>(block-&gt;l[i&amp;15]<sp/>=<sp/>rol(block-&gt;l[(i+13)&amp;15]^block-&gt;l[(i+8)&amp;15]<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^block-&gt;l[(i+2)&amp;15]^block-&gt;l[i&amp;15],1))</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(R0+R1),<sp/>R2,<sp/>R3,<sp/>R4<sp/>are<sp/>the<sp/>different<sp/>operations<sp/>used<sp/>in<sp/>SHA1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R0(v,w,x,y,z,i)<sp/>z+=((w&amp;(x^y))^y)+blk0(i)+0x5A827999+rol(v,5);w=rol(w,30);</highlight></codeline>
<codeline lineno="51" refid="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>R1(v,w,x,y,z,i)<sp/>z+=((w&amp;(x^y))^y)+blk(i)+0x5A827999+rol(v,5);w=rol(w,30);</highlight></codeline>
<codeline lineno="52" refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>R2(v,w,x,y,z,i)<sp/>z+=(w^x^y)+blk(i)+0x6ED9EBA1+rol(v,5);w=rol(w,30);</highlight></codeline>
<codeline lineno="53" refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>R3(v,w,x,y,z,i)<sp/>z+=(((w|x)&amp;y)|(w&amp;x))+blk(i)+0x8F1BBCDC+rol(v,5);w=rol(w,30);</highlight></codeline>
<codeline lineno="54" refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>R4(v,w,x,y,z,i)<sp/>z+=(w^x^y)+blk(i)+0xCA62C1D6+rol(v,5);w=rol(w,30);</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Hash<sp/>a<sp/>single<sp/>512-bit<sp/>block.<sp/>This<sp/>is<sp/>the<sp/>core<sp/>of<sp/>the<sp/>algorithm.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="sha1_8h_1ab5237a548756a92263b16e32a1edfdee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sha1_8cpp_1ab5237a548756a92263b16e32a1edfdee" kindref="member">SHA1Transform</ref>(u_int32_t<sp/>state[5],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[64])<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>u_int32_t<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>e;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c[64];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int32_t<sp/>l[16];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}<sp/>CHAR64LONG16;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SHA1HANDSOFF</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>CHAR64LONG16<sp/>block[1];<sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>array<sp/>to<sp/>appear<sp/>as<sp/>a<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>memcpy(block,<sp/>buffer,<sp/>64);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>had<sp/>better<sp/>never<sp/>be<sp/>used<sp/>because<sp/>it<sp/>causes<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*<sp/>pointer-to-const<sp/>buffer<sp/>to<sp/>be<sp/>cast<sp/>into<sp/>a<sp/>pointer<sp/>to<sp/>non-const.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*<sp/>And<sp/>the<sp/>result<sp/>is<sp/>written<sp/>through.<sp/><sp/>I<sp/>threw<sp/>a<sp/>&quot;const&quot;<sp/>in,<sp/>hoping</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>will<sp/>cause<sp/>a<sp/>diagnostic.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>CHAR64LONG16<sp/>*block<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CHAR64LONG16<sp/>*)buffer;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>context-&gt;state[]<sp/>to<sp/>working<sp/>vars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>state[0];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>b<sp/>=<sp/>state[1];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>state[2];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>state[3];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>state[4];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/>rounds<sp/>of<sp/>20<sp/>operations<sp/>each.<sp/>Loop<sp/>unrolled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>2);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>3);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>4);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>5);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>6);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>7);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>8);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>9);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>10);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>11);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>12);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>13);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>14);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a8ac24a09e1273548828d3cc9436f9bc7" kindref="member">R0</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>15);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" kindref="member">R1</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>16);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" kindref="member">R1</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>17);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" kindref="member">R1</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>18);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a2628f8af7bf67ca052200537279f855a" kindref="member">R1</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>19);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>20);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>21);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>22);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>23);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>24);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>25);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>26);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>27);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>28);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>29);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>30);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>31);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>32);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>33);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>34);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>35);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>36);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>37);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>38);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a774229b80509be0e9e0a1d9819580224" kindref="member">R2</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>39);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>40);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>41);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>42);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>43);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>44);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>45);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>46);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>47);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>48);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>49);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>50);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>51);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>52);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>53);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>54);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>55);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>56);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>57);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>58);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1ac0b8b342432d17717ff1020d10cf0eea" kindref="member">R3</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>59);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>60);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>61);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>62);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>63);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>64);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>65);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>66);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>67);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>68);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>69);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>70);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>71);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>72);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>73);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>74);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>75);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(e,<sp/>a,<sp/>b,<sp/>c,<sp/>d,<sp/>76);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(d,<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>77);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(c,<sp/>d,<sp/>e,<sp/>a,<sp/>b,<sp/>78);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1af77ddc8894422d2af2adbd4e71e55d1f" kindref="member">R4</ref>(b,<sp/>c,<sp/>d,<sp/>e,<sp/>a,<sp/>79);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>the<sp/>working<sp/>vars<sp/>back<sp/>into<sp/>context.state[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>state[0]<sp/>+=<sp/>a;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>state[1]<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>state[2]<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>state[3]<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>state[4]<sp/>+=<sp/>e;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wipe<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>a<sp/>=<sp/>b<sp/>=<sp/>c<sp/>=<sp/>d<sp/>=<sp/>e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SHA1HANDSOFF</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>memset(block,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(block));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SHA1Init<sp/>-<sp/>Initialize<sp/>new<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="sha1_8h_1a159a97b3039391403b8d9b0d240a9640" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sha1_8cpp_1a159a97b3039391403b8d9b0d240a9640" kindref="member">SHA1Init</ref>(<ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SHA1<sp/>initialization<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[0]<sp/>=<sp/>0x67452301;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[1]<sp/>=<sp/>0xEFCDAB89;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[2]<sp/>=<sp/>0x98BADCFE;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[3]<sp/>=<sp/>0x10325476;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[4]<sp/>=<sp/>0xC3D2E1F0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[0]<sp/>=<sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Run<sp/>your<sp/>data<sp/>through<sp/>this.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="sha1_8h_1a3e5bb463453e88f82345cc15cbe38c22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" kindref="member">SHA1Update</ref>(<ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref><sp/>*context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/>u_int32_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>u_int32_t<sp/>i;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>u_int32_t<sp/>j;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[0];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[0]<sp/>+=<sp/>len<sp/>&lt;&lt;<sp/>3)<sp/>&lt;<sp/>j)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[1]++;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[1]<sp/>+=<sp/>(len<sp/>&gt;&gt;<sp/>29);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>j<sp/>=<sp/>(j<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>63;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((j<sp/>+<sp/>len)<sp/>&gt;<sp/>63)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a90100b1aab0fedb1d72ded66abeeffe2" kindref="member">buffer</ref>[j],<sp/>data,<sp/>(i<sp/>=<sp/>64<sp/>-<sp/>j));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sha1_8cpp_1ab5237a548756a92263b16e32a1edfdee" kindref="member">SHA1Transform</ref>(context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>,<sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a90100b1aab0fedb1d72ded66abeeffe2" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>+<sp/>63<sp/>&lt;<sp/>len;<sp/>i<sp/>+=<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sha1_8cpp_1ab5237a548756a92263b16e32a1edfdee" kindref="member">SHA1Transform</ref>(context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>,<sp/>&amp;data[i]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>memcpy(&amp;context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a90100b1aab0fedb1d72ded66abeeffe2" kindref="member">buffer</ref>[j],<sp/>&amp;data[i],<sp/>len<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>padding<sp/>and<sp/>return<sp/>the<sp/>message<sp/>digest.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="sha1_8h_1aa58f279c51d82e868c9b0f7b1b7d08f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sha1_8cpp_1aa58f279c51d82e868c9b0f7b1b7d08f4" kindref="member">SHA1Final</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[20],<sp/><ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref><sp/>*context)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>finalcount[8];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>untested<sp/>&quot;improvement&quot;<sp/>by<sp/>DHR<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>context-&gt;count<sp/>to<sp/>a<sp/>sequence<sp/>of<sp/>bytes</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>finalcount.<sp/><sp/>Second<sp/>element<sp/>first,<sp/>but</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>*<sp/>big-endian<sp/>order<sp/>within<sp/>element.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/>*<sp/>But<sp/>we<sp/>do<sp/>it<sp/>all<sp/>backwards.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fcp<sp/>=<sp/>&amp;finalcount[8];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int32_t<sp/>t<sp/>=<sp/>context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[i];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>t<sp/>&gt;&gt;=<sp/>8,<sp/>j++)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>--fcp<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>t</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>finalcount[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)((context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[(i<sp/>&gt;=<sp/>4<sp/>?<sp/>0<sp/>:<sp/>1)]</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>((3<sp/>-<sp/>(i<sp/>&amp;<sp/>3))<sp/>*<sp/>8))<sp/>&amp;<sp/>255);<sp/></highlight><highlight class="comment">/*<sp/>Endian<sp/>independent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>c<sp/>=<sp/>0200;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" kindref="member">SHA1Update</ref>(context,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((context-&gt;<ref refid="struct_s_h_a1___c_t_x_1aa8af6356e8c9d974a51c54dd081e63a4" kindref="member">count</ref>[0]<sp/>&amp;<sp/>504)<sp/>!=<sp/>448)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0000;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" kindref="member">SHA1Update</ref>(context,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" kindref="member">SHA1Update</ref>(context,<sp/>finalcount,<sp/>8);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>cause<sp/>a<sp/>SHA1Transform()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>digest[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((context-&gt;<ref refid="struct_s_h_a1___c_t_x_1a75e92d42c5e56be2571b801486a11c69" kindref="member">state</ref>[i<sp/>&gt;&gt;<sp/>2]<sp/>&gt;&gt;<sp/>((3<sp/>-<sp/>(i<sp/>&amp;<sp/>3))<sp/>*<sp/>8))<sp/>&amp;<sp/>255);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wipe<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>memset(context,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*context));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>memset(&amp;finalcount,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(finalcount));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>================<sp/>end<sp/>of<sp/>sha1.c<sp/>================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BUFSIZE<sp/>4096</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="struct_s_h_a1___c_t_x" kindref="compound">SHA1_CTX</ref><sp/>ctx;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1a186e18305f1cfc707e738f2aa04556fa" kindref="member">hash</ref>[20],<sp/>buf[BUFSIZE];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BUFSIZE;<sp/>i++)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1a159a97b3039391403b8d9b0d240a9640" kindref="member">SHA1Init</ref>(&amp;ctx);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sha1_8cpp_1a3e5bb463453e88f82345cc15cbe38c22" kindref="member">SHA1Update</ref>(&amp;ctx,<sp/>buf,<sp/>BUFSIZE);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="sha1_8cpp_1aa58f279c51d82e868c9b0f7b1b7d08f4" kindref="member">SHA1Final</ref>(hash,<sp/>&amp;ctx);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SHA1=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>hash[i]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/helper/sha1.cpp"/>
  </compounddef>
</doxygen>
