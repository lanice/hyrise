<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="pred__expression__factory_8h" kind="file">
    <compoundname>pred_expression_factory.h</compoundname>
    <includes refid="expression__types_8h" local="yes">expression_types.h</includes>
    <includes refid="json__converters_8h" local="yes">../json_converters.h</includes>
    <includes refid="predicates_8h" local="yes">predicates.h</includes>
    <includedby refid="predicates_8h" local="yes">src/lib/access/expressions/predicates.h</includedby>
    <includedby refid="pred__build_expression_8cpp" local="yes">src/lib/access/expressions/pred_buildExpression.cpp</includedby>
    <incdepgraph>
      <node id="3475">
        <label>atomic</label>
      </node>
      <node id="3461">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
      </node>
      <node id="3502">
        <label>pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3468">
        <label>limits</label>
      </node>
      <node id="3485">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="3507">
        <label>pred_GreaterThanExpression.h</label>
        <link refid="pred___greater_than_expression_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3479">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3484" relation="include">
        </childnode>
      </node>
      <node id="3493">
        <label>assert.h</label>
      </node>
      <node id="3486">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="3467">
        <label>cstdint</label>
      </node>
      <node id="3484">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="3485" relation="include">
        </childnode>
        <childnode refid="3486" relation="include">
        </childnode>
      </node>
      <node id="3481">
        <label>stdint.h</label>
      </node>
      <node id="3495">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3497" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3479" relation="include">
        </childnode>
        <childnode refid="3484" relation="include">
        </childnode>
      </node>
      <node id="3487">
        <label>predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="3488" relation="include">
        </childnode>
        <childnode refid="3502" relation="include">
        </childnode>
        <childnode refid="3503" relation="include">
        </childnode>
        <childnode refid="3507" relation="include">
        </childnode>
        <childnode refid="3508" relation="include">
        </childnode>
        <childnode refid="3509" relation="include">
        </childnode>
        <childnode refid="3499" relation="include">
        </childnode>
        <childnode refid="3501" relation="include">
        </childnode>
        <childnode refid="3511" relation="include">
        </childnode>
        <childnode refid="3460" relation="include">
        </childnode>
      </node>
      <node id="3498">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3461" relation="include">
        </childnode>
      </node>
      <node id="3472">
        <label>stdexcept</label>
      </node>
      <node id="3489">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3491" relation="include">
        </childnode>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3498" relation="include">
        </childnode>
        <childnode refid="3499" relation="include">
        </childnode>
        <childnode refid="3501" relation="include">
        </childnode>
      </node>
      <node id="3463">
        <label>string</label>
      </node>
      <node id="3460">
        <label>src/lib/access/expressions/pred_expression_factory.h</label>
        <link refid="pred_expression_factory.h"/>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3465" relation="include">
        </childnode>
        <childnode refid="3487" relation="include">
        </childnode>
      </node>
      <node id="3462">
        <label>map</label>
      </node>
      <node id="3492">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="3493" relation="include">
        </childnode>
        <childnode refid="3494" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3479" relation="include">
        </childnode>
        <childnode refid="3485" relation="include">
        </childnode>
        <childnode refid="3484" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
      </node>
      <node id="3503">
        <label>pred_EqualsExpression.h</label>
        <link refid="pred___equals_expression_8h"/>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3504" relation="include">
        </childnode>
      </node>
      <node id="3473">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3475" relation="include">
        </childnode>
      </node>
      <node id="3511">
        <label>pred_buildExpression.h</label>
        <link refid="pred__build_expression_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3496">
        <label>exception</label>
      </node>
      <node id="3482">
        <label>ostream</label>
      </node>
      <node id="3464">
        <label>json.h</label>
      </node>
      <node id="3497">
        <label>limits.h</label>
      </node>
      <node id="3509">
        <label>pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="3510" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3502" relation="include">
        </childnode>
      </node>
      <node id="3488">
        <label>pred_BetweenOperation.h</label>
        <link refid="pred___between_operation_8h"/>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3508">
        <label>pred_LessThanExpression.h</label>
        <link refid="pred___less_than_expression_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3480">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
        <childnode refid="3481" relation="include">
        </childnode>
        <childnode refid="3482" relation="include">
        </childnode>
      </node>
      <node id="3510">
        <label>stack</label>
      </node>
      <node id="3470">
        <label>vector</label>
      </node>
      <node id="3476">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3477" relation="include">
        </childnode>
      </node>
      <node id="3477">
        <label>array</label>
      </node>
      <node id="3491">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="3492" relation="include">
        </childnode>
        <childnode refid="3495" relation="include">
        </childnode>
      </node>
      <node id="3483">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
      </node>
      <node id="3494">
        <label>iostream</label>
      </node>
      <node id="3478">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="3506">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
      </node>
      <node id="3474">
        <label>thread</label>
      </node>
      <node id="3500">
        <label>access/expressions/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
      </node>
      <node id="3499">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3500" relation="include">
        </childnode>
      </node>
      <node id="3466">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3470" relation="include">
        </childnode>
      </node>
      <node id="3471">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3473" relation="include">
        </childnode>
        <childnode refid="3476" relation="include">
        </childnode>
        <childnode refid="3478" relation="include">
        </childnode>
        <childnode refid="3479" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
      </node>
      <node id="3490">
        <label>stdio.h</label>
      </node>
      <node id="3505">
        <label>cstring</label>
      </node>
      <node id="3465">
        <label>../json_converters.h</label>
        <link refid="json__converters_8h"/>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
      </node>
      <node id="3504">
        <label>storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="3505" relation="include">
        </childnode>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3506" relation="include">
        </childnode>
      </node>
      <node id="3501">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
      </node>
      <node id="3469">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3522">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="3524">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="3514">
        <label>src/lib/access/expressions/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="3515">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="3516" relation="include">
        </childnode>
        <childnode refid="3517" relation="include">
        </childnode>
      </node>
      <node id="3523">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="3526">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="3517" relation="include">
        </childnode>
      </node>
      <node id="3513">
        <label>src/lib/access/expressions/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="3514" relation="include">
        </childnode>
        <childnode refid="3512" relation="include">
        </childnode>
        <childnode refid="3515" relation="include">
        </childnode>
        <childnode refid="3526" relation="include">
        </childnode>
        <childnode refid="3517" relation="include">
        </childnode>
      </node>
      <node id="3518">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="3512">
        <label>src/lib/access/expressions/pred_expression_factory.h</label>
        <link refid="pred_expression_factory.h"/>
        <childnode refid="3513" relation="include">
        </childnode>
        <childnode refid="3514" relation="include">
        </childnode>
      </node>
      <node id="3525">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="3516">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="3521">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="3517">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="3518" relation="include">
        </childnode>
        <childnode refid="3519" relation="include">
        </childnode>
        <childnode refid="3520" relation="include">
        </childnode>
        <childnode refid="3521" relation="include">
        </childnode>
        <childnode refid="3522" relation="include">
        </childnode>
        <childnode refid="3523" relation="include">
        </childnode>
        <childnode refid="3524" relation="include">
        </childnode>
        <childnode refid="3525" relation="include">
        </childnode>
      </node>
      <node id="3519">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="3520">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structhyrise_1_1access_1_1expression__factory" prot="public">hyrise::access::expression_factory</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" prot="public" static="no">
        <name>GENERATE_EXPRESSION</name>
        <param><defname>EXPRESSION</defname></param>
        <initializer>case PredicateType::EXPRESSION: \
  if (_field_name.size() &gt; 0)                                           \
    return new EXPRESSION&lt;ValueType&gt;(_input_index, _field_name, <ref refid="structjson__converter_1a34b81917a8da5e8b021c645a6b93fb5d" kindref="member">json_converter::convert</ref>&lt;ValueType&gt;(_value)); \
  else                                                                  \
    return new EXPRESSION&lt;ValueType&gt;(_input_index, _field, <ref refid="structjson__converter_1a34b81917a8da5e8b021c645a6b93fb5d" kindref="member">json_converter::convert</ref>&lt;ValueType&gt;(_value)); \
  break;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/pred_expression_factory.h" line="14" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/pred_expression_factory.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" prot="public" static="no">
        <name>GENERATE_GENERIC_EXPRESSION</name>
        <param><defname>NAME</defname></param>
        <param><defname>EXPRESSION</defname></param>
        <param><defname>OPERATOR</defname></param>
        <initializer>case PredicateType::NAME: \
  if (_field_name.size() &gt; 0)                                           \
    return new EXPRESSION&lt;ValueType, OPERATOR&lt;ValueType&gt; &gt;(_input_index, _field_name, <ref refid="structjson__converter_1a34b81917a8da5e8b021c645a6b93fb5d" kindref="member">json_converter::convert</ref>&lt;ValueType&gt;(_value)); \
  else                                                                  \
    return new EXPRESSION&lt;ValueType, OPERATOR&lt;ValueType&gt; &gt;(_input_index, _field, <ref refid="structjson__converter_1a34b81917a8da5e8b021c645a6b93fb5d" kindref="member">json_converter::convert</ref>&lt;ValueType&gt;(_value)); \
  break;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/pred_expression_factory.h" line="21" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/pred_expression_factory.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_EXPRESSION_FACTORY_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_EXPRESSION_FACTORY_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="expression__types_8h" kindref="compound">expression_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../json_converters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="predicates_8h" kindref="compound">predicates.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GENERATE_EXPRESSION(EXPRESSION)<sp/><sp/>case<sp/>PredicateType::EXPRESSION:<sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/>if<sp/>(_field_name.size()<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>EXPRESSION&lt;ValueType&gt;(_input_index,<sp/>_field_name,<sp/>json_converter::convert&lt;ValueType&gt;(_value));<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>EXPRESSION&lt;ValueType&gt;(_input_index,<sp/>_field,<sp/>json_converter::convert&lt;ValueType&gt;(_value));<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/>break;</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GENERATE_GENERIC_EXPRESSION(NAME,<sp/>EXPRESSION,<sp/>OPERATOR)<sp/><sp/>case<sp/>PredicateType::NAME:<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/>if<sp/>(_field_name.size()<sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>EXPRESSION&lt;ValueType,<sp/>OPERATOR&lt;ValueType&gt;<sp/>&gt;(_input_index,<sp/>_field_name,<sp/>json_converter::convert&lt;ValueType&gt;(_value));<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>EXPRESSION&lt;ValueType,<sp/>OPERATOR&lt;ValueType&gt;<sp/>&gt;(_input_index,<sp/>_field,<sp/>json_converter::convert&lt;ValueType&gt;(_value));<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/>break;</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structhyrise_1_1access_1_1expression__factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1access_1_1expression__factory" kindref="compound">expression_factory</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="structhyrise_1_1access_1_1expression__factory_1a6d7d3eed2421f630f700da5f86814561" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>*<ref refid="structhyrise_1_1access_1_1expression__factory_1a6d7d3eed2421f630f700da5f86814561" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structhyrise_1_1access_1_1expression__factory_1ad2955e8bd125e4b52ee5ef256737b75d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1ad2955e8bd125e4b52ee5ef256737b75d" kindref="member">_input_index</ref>;</highlight></codeline>
<codeline lineno="30" refid="structhyrise_1_1access_1_1expression__factory_1a7f0fd740999b5228b90b8acf3731a618" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a7f0fd740999b5228b90b8acf3731a618" kindref="member">_field</ref>;</highlight></codeline>
<codeline lineno="31" refid="structhyrise_1_1access_1_1expression__factory_1a1fa28e3fc6a2a5ca40fb624668ee3d40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a1fa28e3fc6a2a5ca40fb624668ee3d40" kindref="member">_field_name</ref>;</highlight></codeline>
<codeline lineno="32" refid="structhyrise_1_1access_1_1expression__factory_1a63bdf3e9bf24494e744c88cc31c945d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" kindref="member">PredicateType::type</ref><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a63bdf3e9bf24494e744c88cc31c945d8" kindref="member">_predicate</ref>;</highlight></codeline>
<codeline lineno="33" refid="structhyrise_1_1access_1_1expression__factory_1a4cbe585932d30a72e91feefcd446193f" refkind="member"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a4cbe585932d30a72e91feefcd446193f" kindref="member">_value</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structhyrise_1_1access_1_1expression__factory_1a40ea8e77ac4488ab67723e8b971415a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a40ea8e77ac4488ab67723e8b971415a0" kindref="member">expression_factory</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structhyrise_1_1access_1_1expression__factory_1ac01d9b2943f1aba44dec47c28d7ee953" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a40ea8e77ac4488ab67723e8b971415a0" kindref="member">expression_factory</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_index,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>field_index,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" kindref="member">PredicateType::type</ref><sp/>predicate,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1ad2955e8bd125e4b52ee5ef256737b75d" kindref="member">_input_index</ref>(input_index),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a7f0fd740999b5228b90b8acf3731a618" kindref="member">_field</ref>(field_index),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a1fa28e3fc6a2a5ca40fb624668ee3d40" kindref="member">_field_name</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a63bdf3e9bf24494e744c88cc31c945d8" kindref="member">_predicate</ref>(predicate),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a4cbe585932d30a72e91feefcd446193f" kindref="member">_value</ref>(value)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structhyrise_1_1access_1_1expression__factory_1a32f197ffc9cbc50fe6076efe05d012f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a40ea8e77ac4488ab67723e8b971415a0" kindref="member">expression_factory</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_index,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>fieldName,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" kindref="member">PredicateType::type</ref><sp/>predicate,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>value)<sp/>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1ad2955e8bd125e4b52ee5ef256737b75d" kindref="member">_input_index</ref>(input_index),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a1fa28e3fc6a2a5ca40fb624668ee3d40" kindref="member">_field_name</ref>(fieldName),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a63bdf3e9bf24494e744c88cc31c945d8" kindref="member">_predicate</ref>(predicate),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a4cbe585932d30a72e91feefcd446193f" kindref="member">_value</ref>(value)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="59" refid="structhyrise_1_1access_1_1expression__factory_1a2001c72d1d49bbb526a62ccb1c24ad77" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">value_type</ref><sp/><ref refid="structhyrise_1_1access_1_1expression__factory_1a2001c72d1d49bbb526a62ccb1c24ad77" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structhyrise_1_1access_1_1expression__factory_1a63bdf3e9bf24494e744c88cc31c945d8" kindref="member">_predicate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_equals_expression" kindref="compound">EqualsExpression</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_less_than_expression" kindref="compound">LessThanExpression</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_greater_than_expression" kindref="compound">GreaterThanExpression</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_equals_expression_raw" kindref="compound">EqualsExpressionRaw</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_less_than_expression_raw" kindref="compound">LessThanExpressionRaw</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1a6a42ba163ec1c17fed4f9cfb2b048848" kindref="member">GENERATE_EXPRESSION</ref>(<ref refid="class_greater_than_expression_raw" kindref="compound">GreaterThanExpressionRaw</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" kindref="member">GENERATE_GENERIC_EXPRESSION</ref>(EqualsExpressionValue,<sp/><ref refid="class_generic_expression_value" kindref="compound">GenericExpressionValue</ref>,<sp/>std::equal_to);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" kindref="member">GENERATE_GENERIC_EXPRESSION</ref>(LessThanExpressionValue,<sp/><ref refid="class_generic_expression_value" kindref="compound">GenericExpressionValue</ref>,<sp/>std::less);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" kindref="member">GENERATE_GENERIC_EXPRESSION</ref>(GreaterThanExpressionValue,<sp/><ref refid="class_generic_expression_value" kindref="compound">GenericExpressionValue</ref>,<sp/>std::greater);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" kindref="member">GENERATE_GENERIC_EXPRESSION</ref>(LessThanEqualsExpressionValue,<sp/><ref refid="class_generic_expression_value" kindref="compound">GenericExpressionValue</ref>,<sp/>std::less_equal);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pred__expression__factory_8h_1adeab7ed117110135574cbe474516d79e" kindref="member">GENERATE_GENERIC_EXPRESSION</ref>(GreaterThanEqualsExpressionValue,<sp/><ref refid="class_generic_expression_value" kindref="compound">GenericExpressionValue</ref>,<sp/>std::greater_equal);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Expression<sp/>Type<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*ns<sp/>access*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*ns<sp/>hyrise*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_EXPRESSION_FACTORY_H_</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/access/expressions/pred_expression_factory.h"/>
  </compounddef>
</doxygen>
