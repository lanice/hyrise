<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_route_request_handler_8cpp" kind="file">
    <compoundname>RouteRequestHandler.cpp</compoundname>
    <includes refid="_route_request_handler_8h" local="yes">net/RouteRequestHandler.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="yes">json.h</includes>
    <includes refid="_async_connection_8h" local="yes">net/AsyncConnection.h</includes>
    <incdepgraph>
      <node id="13417">
        <label>arpa/inet.h</label>
      </node>
      <node id="13410">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="13411" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13407" relation="include">
        </childnode>
        <childnode refid="13413" relation="include">
        </childnode>
        <childnode refid="13405" relation="include">
        </childnode>
      </node>
      <node id="13404">
        <label>net/RouteRequestHandler.h</label>
        <link refid="_route_request_handler_8h"/>
        <childnode refid="13405" relation="include">
        </childnode>
        <childnode refid="13406" relation="include">
        </childnode>
      </node>
      <node id="13405">
        <label>string</label>
      </node>
      <node id="13415">
        <label>json.h</label>
      </node>
      <node id="13413">
        <label>condition_variable</label>
      </node>
      <node id="13406">
        <label>net/Router.h</label>
        <link refid="_router_8h"/>
        <childnode refid="13407" relation="include">
        </childnode>
        <childnode refid="13408" relation="include">
        </childnode>
        <childnode refid="13405" relation="include">
        </childnode>
        <childnode refid="13409" relation="include">
        </childnode>
        <childnode refid="13410" relation="include">
        </childnode>
      </node>
      <node id="13409">
        <label>net/AbstractConnection.h</label>
        <link refid="_abstract_connection_8h"/>
        <childnode refid="13405" relation="include">
        </childnode>
      </node>
      <node id="13421">
        <label>ebb/ebb.h</label>
      </node>
      <node id="13411">
        <label>vector</label>
      </node>
      <node id="13416">
        <label>net/AsyncConnection.h</label>
        <link refid="_async_connection_8h"/>
        <childnode refid="13417" relation="include">
        </childnode>
        <childnode refid="13418" relation="include">
        </childnode>
        <childnode refid="13419" relation="include">
        </childnode>
        <childnode refid="13420" relation="include">
        </childnode>
        <childnode refid="13405" relation="include">
        </childnode>
        <childnode refid="13409" relation="include">
        </childnode>
        <childnode refid="13421" relation="include">
        </childnode>
      </node>
      <node id="13414">
        <label>sstream</label>
      </node>
      <node id="13403">
        <label>src/lib/net/RouteRequestHandler.cpp</label>
        <link refid="RouteRequestHandler.cpp"/>
        <childnode refid="13404" relation="include">
        </childnode>
        <childnode refid="13414" relation="include">
        </childnode>
        <childnode refid="13405" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13416" relation="include">
        </childnode>
      </node>
      <node id="13419">
        <label>cstdlib</label>
      </node>
      <node id="13418">
        <label>sys/time.h</label>
      </node>
      <node id="13420">
        <label>ev.h</label>
      </node>
      <node id="13408">
        <label>unordered_map</label>
      </node>
      <node id="13412">
        <label>mutex</label>
      </node>
      <node id="13407">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1net">hyrise::net</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_route_request_handler_8h" kindref="compound">net/RouteRequestHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;json.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_async_connection_8h" kindref="compound">net/AsyncConnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1a9f88c1ae8a41cd204fc6ba730b2410a7" kindref="member">RouteRequestHandler::registered</ref><sp/>=</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Router::registerRoute&lt;RouteRequestHandler&gt;(</highlight><highlight class="stringliteral">&quot;/urls/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classhyrise_1_1net_1_1_route_request_handler_1a15371c41736af500c779f3c3021edb52" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1net_1_1_route_request_handler_1a15371c41736af500c779f3c3021edb52" kindref="member">RouteRequestHandler::RouteRequestHandler</ref>(<ref refid="classhyrise_1_1net_1_1_abstract_connection" kindref="compound">AbstractConnection</ref><sp/>*data)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_connection_data(data)<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classhyrise_1_1net_1_1_route_request_handler_1ae9e8de13aa86980be1f159d742967cf8" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1ae9e8de13aa86980be1f159d742967cf8" kindref="member">RouteRequestHandler::name</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RouteRequestHandler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classhyrise_1_1net_1_1_route_request_handler_1adc16d5503d3c98e656f5049181f265b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1adc16d5503d3c98e656f5049181f265b7" kindref="member">RouteRequestHandler::vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RouteRequestHandler&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classhyrise_1_1net_1_1_route_request_handler_1a25c8ac74736b9db1b170ee55926af5b7" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1a25c8ac74736b9db1b170ee55926af5b7" kindref="member">RouteRequestHandler::constructResponse</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;router<sp/>=<sp/><ref refid="classhyrise_1_1net_1_1_router_1a77163aca532cddbea1edfdaec58a0926" kindref="member" tooltip="Returns global Router instance.">Router::getInstance</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>Json::Value<sp/>result;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;routes<sp/>=<sp/>result[</highlight><highlight class="stringliteral">&quot;routes&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>catch_all<sp/>=<sp/>router.getCatchAllRaw();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>route:<sp/>router.getRouters())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>routes[route.first][</highlight><highlight class="stringliteral">&quot;handler&quot;</highlight><highlight class="normal">]<sp/>=<sp/>router.getHandlerNameForRoute(route.first);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(route.second.get()<sp/>==<sp/>catch_all)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>routes[route.first][</highlight><highlight class="stringliteral">&quot;catch_all&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>Json::StyledWriter<sp/>writer;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer.write(result);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classhyrise_1_1net_1_1_route_request_handler_1a59bff938a7ad3581729628134afbfcd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1a59bff938a7ad3581729628134afbfcd2" kindref="member">RouteRequestHandler::operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>std::string<sp/>response(<ref refid="classhyrise_1_1net_1_1_route_request_handler_1a25c8ac74736b9db1b170ee55926af5b7" kindref="member">constructResponse</ref>());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1net_1_1_route_request_handler_1a98a4ca1455fa6716f7d1a562df8744f8" kindref="member">_connection_data</ref>-&gt;<ref refid="classhyrise_1_1net_1_1_abstract_connection_1a5a81423c8555d550b89758550d4c5e6f" kindref="member">respond</ref>(response);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/net/RouteRequestHandler.cpp"/>
  </compounddef>
</doxygen>
