<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_router_8cpp" kind="file">
    <compoundname>Router.cpp</compoundname>
    <includes refid="_router_8h" local="yes">net/Router.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="13373">
        <label>string</label>
      </node>
      <node id="13370">
        <label>net/Router.h</label>
        <link refid="_router_8h"/>
        <childnode refid="13371" relation="include">
        </childnode>
        <childnode refid="13372" relation="include">
        </childnode>
        <childnode refid="13373" relation="include">
        </childnode>
        <childnode refid="13374" relation="include">
        </childnode>
        <childnode refid="13375" relation="include">
        </childnode>
      </node>
      <node id="13378">
        <label>condition_variable</label>
      </node>
      <node id="13376">
        <label>vector</label>
      </node>
      <node id="13379">
        <label>iostream</label>
      </node>
      <node id="13369">
        <label>src/lib/net/Router.cpp</label>
        <link refid="Router.cpp"/>
        <childnode refid="13370" relation="include">
        </childnode>
        <childnode refid="13379" relation="include">
        </childnode>
        <childnode refid="13373" relation="include">
        </childnode>
      </node>
      <node id="13372">
        <label>unordered_map</label>
      </node>
      <node id="13377">
        <label>mutex</label>
      </node>
      <node id="13374">
        <label>net/AbstractConnection.h</label>
        <link refid="_abstract_connection_8h"/>
        <childnode refid="13373" relation="include">
        </childnode>
      </node>
      <node id="13371">
        <label>memory</label>
      </node>
      <node id="13375">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="13376" relation="include">
        </childnode>
        <childnode refid="13377" relation="include">
        </childnode>
        <childnode refid="13371" relation="include">
        </childnode>
        <childnode refid="13378" relation="include">
        </childnode>
        <childnode refid="13373" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1net">hyrise::net</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_router_8h" kindref="compound">net/Router.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">net<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classhyrise_1_1net_1_1_router_exception_1a7c31f71bc7a4a75d9c7ddfb8baedbed0" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1net_1_1_router_exception_1a7c31f71bc7a4a75d9c7ddfb8baedbed0" kindref="member">RouterException::RouterException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;message)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::runtime_error(message)<sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classhyrise_1_1net_1_1_router_1aa3c45aa14d18af25ecf86f20e28ecd97" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1net_1_1_router_1aa3c45aa14d18af25ecf86f20e28ecd97" kindref="member">Router::Router</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_catch_all(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classhyrise_1_1net_1_1_router_1a77163aca532cddbea1edfdaec58a0926" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1net_1_1_router" kindref="compound">Router</ref><sp/>&amp;<ref refid="classhyrise_1_1net_1_1_router_1a77163aca532cddbea1edfdaec58a0926" kindref="member" tooltip="Returns global Router instance.">Router::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router" kindref="compound">Router</ref><sp/>r;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classhyrise_1_1net_1_1_router_1a07ba91385f5e56f7653e9db542de37a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a7a3b8f96bf2ac38074b2a3fa8847448a" kindref="member">Router::route_map_t</ref><sp/>&amp;<ref refid="classhyrise_1_1net_1_1_router_1a07ba91385f5e56f7653e9db542de37a0" kindref="member" tooltip="Returns routing map of registered classes.">Router::getRouters</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a3b6c7b8d377fb6543b768c8c8d8d32cb" kindref="member">_route</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classhyrise_1_1net_1_1_router_1aebb5cd00102f90491f8982e5d41b9b5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1aebb5cd00102f90491f8982e5d41b9b5e" kindref="member">Router::addRoute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;url,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1ad5a7e91fa85f977fbe84b4c6a292560d" kindref="member">handler_uptr</ref><sp/>handler,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1a75e876b127a75fc4514436e264d3fd04" kindref="member">route_t</ref><sp/>route,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;handler_name)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(url<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_exception" kindref="compound" tooltip="For all routing related exceptions.">RouterException</ref>(</highlight><highlight class="stringliteral">&quot;Registering<sp/>for<sp/>&apos;/&apos;<sp/>is<sp/>not<sp/>possible,<sp/>use<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Router::route_t::CATCH_ALL<sp/>to<sp/>register<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>all<sp/>unmatched<sp/>urls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1a3b6c7b8d377fb6543b768c8c8d8d32cb" kindref="member">_route</ref>[url].swap(handler);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1a957ee18955a99a498406c27d4532ae4e" kindref="member">_route_names</ref>[url]<sp/>=<sp/>handler_name;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(route<sp/>==<sp/>route_t::CATCH_ALL)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1acc5a2fb69113bad878ce8a67eff8de61" kindref="member" tooltip="Setter for catchAll.">setCatchAll</ref>(<ref refid="classhyrise_1_1net_1_1_router_1a3b6c7b8d377fb6543b768c8c8d8d32cb" kindref="member">_route</ref>[url].</highlight><highlight class="keyword">get</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classhyrise_1_1net_1_1_router_1acc5a2fb69113bad878ce8a67eff8de61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1acc5a2fb69113bad878ce8a67eff8de61" kindref="member" tooltip="Setter for catchAll.">Router::setCatchAll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1net_1_1_abstract_request_handler_factory" kindref="compound">handler_ptr</ref><sp/>handler)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1net_1_1_router_1a122473dcb472225f3afa1506a366a83f" kindref="member">_catch_all</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_exception" kindref="compound" tooltip="For all routing related exceptions.">RouterException</ref>(</highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>set<sp/>catch<sp/>all<sp/>when<sp/>already<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1net_1_1_router_1a122473dcb472225f3afa1506a366a83f" kindref="member">_catch_all</ref><sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classhyrise_1_1net_1_1_router_1a11abfb71687be26dc81ab135e7134f93" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1net_1_1_abstract_request_handler_factory" kindref="compound">Router::handler_ptr</ref><sp/><ref refid="classhyrise_1_1net_1_1_router_1a11abfb71687be26dc81ab135e7134f93" kindref="member" tooltip="Getter for catchAll, exception when not set.">Router::getCatchAll</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1net_1_1_router_1a122473dcb472225f3afa1506a366a83f" kindref="member">_catch_all</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_exception" kindref="compound" tooltip="For all routing related exceptions.">RouterException</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>url<sp/>was<sp/>set<sp/>with<sp/>Router::route_t::CATCH_ALL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a122473dcb472225f3afa1506a366a83f" kindref="member">_catch_all</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classhyrise_1_1net_1_1_router_1a0ad2f5ee80367348350b92af6e1fa6d6" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1net_1_1_abstract_request_handler_factory" kindref="compound">Router::handler_ptr</ref><sp/><ref refid="classhyrise_1_1net_1_1_router_1a0ad2f5ee80367348350b92af6e1fa6d6" kindref="member" tooltip="Raw getter for catchAll, no exception when not set.">Router::getCatchAllRaw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a122473dcb472225f3afa1506a366a83f" kindref="member">_catch_all</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classhyrise_1_1net_1_1_router_1a12570daf895d9b475f5d7524e9c0704a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classhyrise_1_1net_1_1_router_1a12570daf895d9b475f5d7524e9c0704a" kindref="member" tooltip="Return name of handler for route.">Router::getHandlerNameForRoute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;url)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a957ee18955a99a498406c27d4532ae4e" kindref="member">_route_names</ref>.at(url);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classhyrise_1_1net_1_1_router_1a0803a7bd599f3d889e218499a90c5df2" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1net_1_1_abstract_request_handler_factory" kindref="compound">Router::handler_ptr</ref><sp/><ref refid="classhyrise_1_1net_1_1_router_1a0803a7bd599f3d889e218499a90c5df2" kindref="member">Router::getHandler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;url)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>kv:<sp/><ref refid="classhyrise_1_1net_1_1_router_1a3b6c7b8d377fb6543b768c8c8d8d32cb" kindref="member">_route</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>route_url<sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(url.find(route_url)<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kv.second.get();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1net_1_1_router_1a11abfb71687be26dc81ab135e7134f93" kindref="member" tooltip="Getter for catchAll, exception when not set.">getCatchAll</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classhyrise_1_1net_1_1_router_1ad9866a97c73b455d8f0f51f2ccd6d829" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1net_1_1_abstract_request_handler_factory" kindref="compound">Router::handler_ptr</ref><sp/><ref refid="classhyrise_1_1net_1_1_router_1ad9866a97c73b455d8f0f51f2ccd6d829" kindref="member">Router::route</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;url)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;router<sp/>=<sp/><ref refid="classhyrise_1_1net_1_1_router_1a77163aca532cddbea1edfdaec58a0926" kindref="member" tooltip="Returns global Router instance.">getInstance</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>router.getHandler(url);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/net/Router.cpp"/>
  </compounddef>
</doxygen>
