<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_value_id" kind="class" prot="public">
    <compoundname>ValueId</compoundname>
    <includes refid="storage__types_8h" local="no">storage_types.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" prot="public" static="no" mutable="no">
        <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
        <definition>value_id_t ValueId::valueId</definition>
        <argsstring></argsstring>
        <name>valueId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="59" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" prot="public" static="no" mutable="no">
        <type><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
        <definition>table_id_t ValueId::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="60" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_value_id_1ad81b9af24ffdc59123fb9785e80d4145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ValueId::ValueId</definition>
        <argsstring>()</argsstring>
        <name>ValueId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="62" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_value_id_1a867ce15f8a6bd902d6140397b13c135f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ValueId::ValueId</definition>
        <argsstring>(value_id_t _valueId, table_id_t _table)</argsstring>
        <name>ValueId</name>
        <param>
          <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
          <declname>_valueId</declname>
        </param>
        <param>
          <type><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
          <declname>_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="63" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_value_id_1a3c87633be57238753a0c89b3663d8b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValueId::operator==</definition>
        <argsstring>(ValueId &amp;o)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_value_id" kindref="compound">ValueId</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="66" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_value_id_1acb6302ce5dec8c45b053fc04db91eb4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValueId::operator!=</definition>
        <argsstring>(ValueId &amp;o)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_value_id" kindref="compound">ValueId</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="70" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_value_id_1a86a2b1888de8038dda6b6356759dc8bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValueId::operator&lt;</definition>
        <argsstring>(const ValueId &amp;o) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_value_id" kindref="compound">ValueId</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="73" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_value_id_1a1865f7a2e2069402b6dfe17afb674cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValueId::operator&gt;</definition>
        <argsstring>(const ValueId &amp;o) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_value_id" kindref="compound">ValueId</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="79" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="79" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_value_id_1a568c1c1b88501572cbd5622af8fa9bf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ValueId &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_value_id" kindref="compound">ValueId</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="85" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4004">
        <label>ValueId</label>
        <link refid="class_value_id"/>
      </node>
    </collaborationgraph>
    <location file="/home/vagrant/lanice/src/lib/storage/storage_types.h" line="57" bodyfile="/home/vagrant/lanice/src/lib/storage/storage_types.h" bodystart="57" bodyend="89"/>
    <listofallmembers>
      <member refid="class_value_id_1acb6302ce5dec8c45b053fc04db91eb4c" prot="public" virt="non-virtual"><scope>ValueId</scope><name>operator!=</name></member>
      <member refid="class_value_id_1a86a2b1888de8038dda6b6356759dc8bb" prot="public" virt="non-virtual"><scope>ValueId</scope><name>operator&lt;</name></member>
      <member refid="class_value_id_1a568c1c1b88501572cbd5622af8fa9bf4" prot="public" virt="non-virtual"><scope>ValueId</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_value_id_1a3c87633be57238753a0c89b3663d8b47" prot="public" virt="non-virtual"><scope>ValueId</scope><name>operator==</name></member>
      <member refid="class_value_id_1a1865f7a2e2069402b6dfe17afb674cb5" prot="public" virt="non-virtual"><scope>ValueId</scope><name>operator&gt;</name></member>
      <member refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" prot="public" virt="non-virtual"><scope>ValueId</scope><name>table</name></member>
      <member refid="class_value_id_1ad81b9af24ffdc59123fb9785e80d4145" prot="public" virt="non-virtual"><scope>ValueId</scope><name>ValueId</name></member>
      <member refid="class_value_id_1a867ce15f8a6bd902d6140397b13c135f" prot="public" virt="non-virtual"><scope>ValueId</scope><name>ValueId</name></member>
      <member refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" prot="public" virt="non-virtual"><scope>ValueId</scope><name>valueId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
