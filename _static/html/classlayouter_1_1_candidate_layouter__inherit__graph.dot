digraph "layouter::CandidateLayouter"
{
  edge [fontname="Helvetica",fontsize="11",labelfontname="Helvetica",labelfontsize="11"];
  node [fontname="Helvetica",fontsize="11",shape=record];
  Node1 [label="{layouter::CandidateLayouter\n|# _candidateList\l|+ CandidateLayouter()\l+ ~CandidateLayouter()\l+ layout()\l+ generateCandidateList()\l+ externalCombineCandidates()\l+ combineCandidates()\l# candidateMergePath()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="11",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{layouter::BaseLayouter\n|+ subsets\l+ nbLayouts\l+ results\l+ schema\l+ costModel\l|+ BaseLayouter()\l+ ~BaseLayouter()\l+ layout()\l+ getCost()\l+ getNewCostForBestLayout()\l+ getAttributeNames()\l+ getNBestResults()\l+ getBestResult()\l+ getResult()\l+ count()\land 11 more...\l# checkLowerBound()\l# iterateLayoutSubsets()\l# eliminateInvalidSubsets()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlayouter_1_1_base_layouter.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="11",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{layouter::DivideAndConquer\lLayouter\n|+ numCuts\l|+ DivideAndConquerLayouter()\l+ ~DivideAndConquerLayouter()\l+ layout()\l# partitionGraph()\l# createAffinityMatrix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlayouter_1_1_divide_and_conquer_layouter.html"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="11",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{layouter::FastCandidateLayouter\n|# result\l# _mapping\l|+ FastCandidateLayouter()\l+ layout()\l# costFor()\l# costFor()\l# generateResults()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlayouter_1_1_fast_candidate_layouter.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="11",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{layouter::IncrementalCandidate\lLayouter\n|- _splittedSets\l- _unusedPartitions\l- _unusedCostForPartitions\l- _query_conversion\l- _reverse_query_conversion\l|+ incrementalLayout()\l- clearState()\l- buildSchema()\l- rewriteResult()\l- detectAffectedPartitions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlayouter_1_1_incremental_candidate_layouter.html"];
}
