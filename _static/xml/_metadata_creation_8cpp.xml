<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_metadata_creation_8cpp" kind="file">
    <compoundname>MetadataCreation.cpp</compoundname>
    <includes refid="_metadata_creation_8h" local="yes">io/MetadataCreation.h</includes>
    <includes refid="stringhelpers_8h" local="yes">helper/stringhelpers.h</includes>
    <includes refid="_abstract_table_8h" local="yes">storage/AbstractTable.h</includes>
    <includes refid="_column_metadata_8h" local="yes">storage/ColumnMetadata.h</includes>
    <incdepgraph>
      <node id="12068">
        <label>atomic</label>
      </node>
      <node id="12057">
        <label>limits</label>
      </node>
      <node id="12075">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="12072">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="12060" relation="include">
        </childnode>
        <childnode refid="12073" relation="include">
        </childnode>
        <childnode refid="12074" relation="include">
        </childnode>
      </node>
      <node id="12076">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="12056">
        <label>cstdint</label>
      </node>
      <node id="12063">
        <label>helper/stringhelpers.h</label>
        <link refid="stringhelpers_8h"/>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12064" relation="include">
        </childnode>
      </node>
      <node id="12074">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="12075" relation="include">
        </childnode>
        <childnode refid="12076" relation="include">
        </childnode>
      </node>
      <node id="12061">
        <label>stdint.h</label>
      </node>
      <node id="12059">
        <label>stdexcept</label>
      </node>
      <node id="12058">
        <label>io/LoaderException.h</label>
        <link refid="_loader_exception_8h"/>
        <childnode refid="12059" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
      </node>
      <node id="12053">
        <label>string</label>
      </node>
      <node id="12066">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="12067" relation="include">
        </childnode>
        <childnode refid="12068" relation="include">
        </childnode>
      </node>
      <node id="12062">
        <label>ostream</label>
      </node>
      <node id="12051">
        <label>io/MetadataCreation.h</label>
        <link refid="_metadata_creation_8h"/>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12055" relation="include">
        </childnode>
        <childnode refid="12058" relation="include">
        </childnode>
        <childnode refid="12060" relation="include">
        </childnode>
      </node>
      <node id="12060">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12059" relation="include">
        </childnode>
        <childnode refid="12061" relation="include">
        </childnode>
        <childnode refid="12062" relation="include">
        </childnode>
      </node>
      <node id="12054">
        <label>vector</label>
      </node>
      <node id="12069">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12070" relation="include">
        </childnode>
      </node>
      <node id="12070">
        <label>array</label>
      </node>
      <node id="12064">
        <label>sstream</label>
      </node>
      <node id="12073">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12060" relation="include">
        </childnode>
      </node>
      <node id="12071">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="12077">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="12060" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12059" relation="include">
        </childnode>
      </node>
      <node id="12050">
        <label>src/lib/io/MetadataCreation.cpp</label>
        <link refid="MetadataCreation.cpp"/>
        <childnode refid="12051" relation="include">
        </childnode>
        <childnode refid="12063" relation="include">
        </childnode>
        <childnode refid="12065" relation="include">
        </childnode>
        <childnode refid="12077" relation="include">
        </childnode>
      </node>
      <node id="12067">
        <label>thread</label>
      </node>
      <node id="12055">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="12056" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
      </node>
      <node id="12065">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="12057" relation="include">
        </childnode>
        <childnode refid="12052" relation="include">
        </childnode>
        <childnode refid="12059" relation="include">
        </childnode>
        <childnode refid="12054" relation="include">
        </childnode>
        <childnode refid="12053" relation="include">
        </childnode>
        <childnode refid="12055" relation="include">
        </childnode>
        <childnode refid="12066" relation="include">
        </childnode>
        <childnode refid="12069" relation="include">
        </childnode>
        <childnode refid="12071" relation="include">
        </childnode>
        <childnode refid="12072" relation="include">
        </childnode>
        <childnode refid="12060" relation="include">
        </childnode>
      </node>
      <node id="12052">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_metadata_creation_8cpp_1a1a0c9c2af8ab084b5fde0c397a7b90ab" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; line_t</definition>
        <argsstring></argsstring>
        <name>line_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="23" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_metadata_creation_8cpp_1a4a4b256db7c85b2e8f7bfce8c427298b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string RowType</definition>
        <argsstring></argsstring>
        <name>RowType</name>
        <initializer>= &quot;R&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="9" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_metadata_creation_8cpp_1af95816aa787170b4d17b72589dbd8f39" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string ColType</definition>
        <argsstring></argsstring>
        <name>ColType</name>
        <initializer>= &quot;C&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="10" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_metadata_creation_8cpp_1a506e9bd2daa1297c390631b8a6fcead4" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string TypeSeparator</definition>
        <argsstring></argsstring>
        <name>TypeSeparator</name>
        <initializer>= &quot;_&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="11" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_metadata_creation_8cpp_1a25df9eeea823f93c1d0f1f8e05823360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkTypePartErrors</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;type_parts, const std::string &amp;original)</argsstring>
        <name>checkTypePartErrors</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>type_parts</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="13" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="13" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_metadata_creation_8cpp_1acdf24b5401cea50b331521c1ce75a873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="storage__types_8h_1ab1a41784d413aa539cdda0391757965c" kindref="member">compound_metadata_list</ref> *</type>
        <definition>compound_metadata_list* createMetadata</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;lines, hyrise::storage::c_atable_ptr_t tab)</argsstring>
        <name>createMetadata</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
          <declname>lines</declname>
        </param>
        <param>
          <type><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref></type>
          <declname>tab</declname>
          <defval>std::shared_ptr&lt; const <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transforms a nested std::vector&lt;std::vector&lt;std::string&gt; &gt; into metadata vector </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" line="26" bodyfile="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp" bodystart="25" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_metadata_creation_8h" kindref="compound">io/MetadataCreation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringhelpers_8h" kindref="compound">helper/stringhelpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_column_metadata_8h" kindref="compound">storage/ColumnMetadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_metadata_creation_8cpp_1a4a4b256db7c85b2e8f7bfce8c427298b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="_metadata_creation_8cpp_1a4a4b256db7c85b2e8f7bfce8c427298b" kindref="member">RowType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10" refid="_metadata_creation_8cpp_1af95816aa787170b4d17b72589dbd8f39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="_metadata_creation_8cpp_1af95816aa787170b4d17b72589dbd8f39" kindref="member">ColType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11" refid="_metadata_creation_8cpp_1a506e9bd2daa1297c390631b8a6fcead4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="_metadata_creation_8cpp_1a506e9bd2daa1297c390631b8a6fcead4" kindref="member">TypeSeparator</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="_metadata_creation_8cpp_1a25df9eeea823f93c1d0f1f8e05823360" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_metadata_creation_8cpp_1a25df9eeea823f93c1d0f1f8e05823360" kindref="member">checkTypePartErrors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;type_parts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;original)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_parts.size()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_metadata_creation_error" kindref="compound">MetadataCreationError</ref>(</highlight><highlight class="stringliteral">&quot;Structure<sp/>specification<sp/>does<sp/>not<sp/>match<sp/>{colnr}_{type},<sp/>but<sp/>is<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>original<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_parts[1]<sp/>!=<sp/><ref refid="_metadata_creation_8cpp_1a4a4b256db7c85b2e8f7bfce8c427298b" kindref="member">RowType</ref><sp/>&amp;&amp;<sp/>type_parts[1]<sp/>!=<sp/><ref refid="_metadata_creation_8cpp_1af95816aa787170b4d17b72589dbd8f39" kindref="member">ColType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_metadata_creation_error" kindref="compound">MetadataCreationError</ref>(</highlight><highlight class="stringliteral">&quot;Structure<sp/>column<sp/>specification<sp/>is<sp/>not<sp/>&apos;R&apos;<sp/>or<sp/>&apos;C&apos;,<sp/>but<sp/>is<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>original<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_metadata_creation_8cpp_1a1a0c9c2af8ab084b5fde0c397a7b90ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="_generic_c_s_v_8h_1a1a0c9c2af8ab084b5fde0c397a7b90ab" kindref="member">line_t</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="_metadata_creation_8h_1a51e98545087ab09c3cd169080e1ca10d" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1ab1a41784d413aa539cdda0391757965c" kindref="member">compound_metadata_list</ref><sp/>*<ref refid="_metadata_creation_8cpp_1acdf24b5401cea50b331521c1ce75a873" kindref="member">createMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;<sp/>&gt;<sp/>&amp;lines,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>tab)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="_generic_c_s_v_8h_1a1a0c9c2af8ab084b5fde0c397a7b90ab" kindref="member">line_t</ref><sp/>names(lines[0]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="_generic_c_s_v_8h_1a1a0c9c2af8ab084b5fde0c397a7b90ab" kindref="member">line_t</ref><sp/>types(lines[1]);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="_generic_c_s_v_8h_1a1a0c9c2af8ab084b5fde0c397a7b90ab" kindref="member">line_t</ref><sp/>structure(lines[2]);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names.size()<sp/>!=<sp/>types.size()</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>names.size()<sp/>!=<sp/>structure.size())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_metadata_creation_error" kindref="compound">MetadataCreationError</ref>(</highlight><highlight class="stringliteral">&quot;Names,<sp/>types<sp/>and<sp/>structure<sp/>information<sp/>do<sp/>not<sp/>match<sp/>in<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_part<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a1fdf1e5706e9554bbc2a1ca574162026" kindref="member">metadata_list</ref><sp/>*current<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a1fdf1e5706e9554bbc2a1ca574162026" kindref="member">metadata_list</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::vector&lt;metadata_list<sp/>*<sp/>&gt;<sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;metadata_list<sp/>*&gt;();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>type_parts;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="stringhelpers_8h_1a38765cc441834ea6118807d8b090d13e" kindref="member">splitString</ref>(type_parts,<sp/>structure[i],<sp/><ref refid="_metadata_creation_8cpp_1a506e9bd2daa1297c390631b8a6fcead4" kindref="member">TypeSeparator</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_metadata_creation_8cpp_1a25df9eeea823f93c1d0f1f8e05823360" kindref="member">checkTypePartErrors</ref>(type_parts,<sp/>structure[i]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part<sp/>=<sp/>fromString&lt;int&gt;(type_parts[0]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>!=<sp/>last_part<sp/>&amp;&amp;<sp/>current-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;push_back(current);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a1fdf1e5706e9554bbc2a1ca574162026" kindref="member">metadata_list</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_part<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*metadata;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/><ref refid="class_column_metadata_1a1e177822c3086d242f1ec9dc180220cc" kindref="member">ColumnMetadata::metadataFromString</ref>(types[i],<sp/>names[i]);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref>(names[i],<sp/>tab-&gt;typeOfColumn(tab-&gt;numberOfColumn(names[i])));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>current-&gt;push_back(metadata);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;push_back(current);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/io/MetadataCreation.cpp"/>
  </compounddef>
</doxygen>
