<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classhyrise_1_1access_1_1_add_exp" kind="class" prot="public">
    <compoundname>hyrise::access::AddExp</compoundname>
    <basecompoundref refid="classhyrise_1_1access_1_1_column_expression" prot="public" virt="non-virtual">hyrise::access::ColumnExpression</basecompoundref>
    <includes refid="_expression_scan_8h" local="no">ExpressionScan.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyrise_1_1access_1_1_add_exp_1a0efd24a4d453d24c21a0cad7c628f1b8" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">storage::field_t</ref></type>
        <definition>storage::field_t hyrise::access::AddExp::_field1</definition>
        <argsstring></argsstring>
        <name>_field1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="40" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyrise_1_1access_1_1_add_exp_1aebe56cb1b14017dd87480528220c4bf2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">storage::field_t</ref></type>
        <definition>storage::field_t hyrise::access::AddExp::_field2</definition>
        <argsstring></argsstring>
        <name>_field2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="41" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyrise_1_1access_1_1_add_exp_1ae71cbeca86c786a1b5aa8681b6bc93fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hyrise::access::AddExp::AddExp</definition>
        <argsstring>(const storage::atable_ptr_t &amp;t, const storage::field_t field1, const storage::field_t field2)</argsstring>
        <name>AddExp</name>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">storage::atable_ptr_t</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">storage::field_t</ref></type>
          <declname>field1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">storage::field_t</ref></type>
          <declname>field2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="28" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1access_1_1_add_exp_1aa6021a704131a0335f091f1568f66fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>hyrise::access::AddExp::~AddExp</definition>
        <argsstring>()</argsstring>
        <name>~AddExp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="31" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.cpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1access_1_1_add_exp_1a819be1364c19c0bf0885c65f576ed5c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hyrise::access::AddExp::setResult</definition>
        <argsstring>(const storage::atable_ptr_t &amp;result, const storage::field_t column, const storage::pos_t row) const </argsstring>
        <name>setResult</name>
        <reimplements refid="classhyrise_1_1access_1_1_column_expression_1a460d8e3b72477e84b9c0c7a742d19c18">setResult</reimplements>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">storage::atable_ptr_t</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">storage::field_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1adf2f7735f8bc6e8bd84d1242ae680cf0" kindref="member">storage::pos_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="33" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1access_1_1_add_exp_1ac70db88df5b7becc7ef6a24a8d9788f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string hyrise::access::AddExp::getName</definition>
        <argsstring>() const </argsstring>
        <name>getName</name>
        <reimplements refid="classhyrise_1_1access_1_1_column_expression_1aa9529859c8c40e06d100b063f837c77c">getName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="36" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1access_1_1_add_exp_1a07e16bc193b54feffc01101a86f93466" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6" kindref="member">DataType</ref></type>
        <definition>DataType hyrise::access::AddExp::getType</definition>
        <argsstring>() const </argsstring>
        <name>getType</name>
        <reimplements refid="classhyrise_1_1access_1_1_column_expression_1aed20030337524de9a769d614ba2c940c">getType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="37" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1557">
        <label>hyrise::access::AddExp</label>
        <link refid="classhyrise_1_1access_1_1_add_exp"/>
        <childnode refid="1558" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1558">
        <label>hyrise::access::ColumnExpression</label>
        <link refid="classhyrise_1_1access_1_1_column_expression"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1559">
        <label>hyrise::access::AddExp</label>
        <link refid="classhyrise_1_1access_1_1_add_exp"/>
        <childnode refid="1560" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1560">
        <label>hyrise::access::ColumnExpression</label>
        <link refid="classhyrise_1_1access_1_1_column_expression"/>
      </node>
    </collaborationgraph>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" line="26" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/ExpressionScan.h" bodystart="26" bodyend="42"/>
    <listofallmembers>
      <member refid="classhyrise_1_1access_1_1_add_exp_1a0efd24a4d453d24c21a0cad7c628f1b8" prot="private" virt="non-virtual"><scope>hyrise::access::AddExp</scope><name>_field1</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1aebe56cb1b14017dd87480528220c4bf2" prot="private" virt="non-virtual"><scope>hyrise::access::AddExp</scope><name>_field2</name></member>
      <member refid="classhyrise_1_1access_1_1_column_expression_1a1b3429d044655ac9eb36f2b944e21149" prot="protected" virt="non-virtual"><scope>hyrise::access::AddExp</scope><name>_table</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1ae71cbeca86c786a1b5aa8681b6bc93fd" prot="public" virt="non-virtual"><scope>hyrise::access::AddExp</scope><name>AddExp</name></member>
      <member refid="classhyrise_1_1access_1_1_column_expression_1afd73089b0f2a02f93a20bfd3735da9dc" prot="public" virt="non-virtual"><scope>hyrise::access::AddExp</scope><name>ColumnExpression</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1ac70db88df5b7becc7ef6a24a8d9788f5" prot="public" virt="virtual"><scope>hyrise::access::AddExp</scope><name>getName</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1a07e16bc193b54feffc01101a86f93466" prot="public" virt="virtual"><scope>hyrise::access::AddExp</scope><name>getType</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1a819be1364c19c0bf0885c65f576ed5c1" prot="public" virt="virtual"><scope>hyrise::access::AddExp</scope><name>setResult</name></member>
      <member refid="classhyrise_1_1access_1_1_add_exp_1aa6021a704131a0335f091f1568f66fa4" prot="public" virt="virtual"><scope>hyrise::access::AddExp</scope><name>~AddExp</name></member>
      <member refid="classhyrise_1_1access_1_1_column_expression_1a6f0869ed5e20b9313d848b44cdf77e55" prot="public" virt="virtual"><scope>hyrise::access::AddExp</scope><name>~ColumnExpression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
