<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_pointer_calculator_8cpp" kind="file">
    <compoundname>PointerCalculator.cpp</compoundname>
    <includes refid="_pointer_calculator_8h" local="yes">storage/PointerCalculator.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_set</includes>
    <includes refid="checked__cast_8h" local="yes">helper/checked_cast.h</includes>
    <includes refid="_pretty_printer_8h" local="yes">storage/PrettyPrinter.h</includes>
    <includes refid="_store_8h" local="yes">storage/Store.h</includes>
    <includes refid="_table_range_view_8h" local="yes">storage/TableRangeView.h</includes>
    <incdepgraph>
      <node id="16411">
        <label>helper/SharedFactory.h</label>
        <link refid="_shared_factory_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
      </node>
      <node id="16416">
        <label>atomic</label>
      </node>
      <node id="16456">
        <label>functional</label>
      </node>
      <node id="16454">
        <label>helper/vector_helpers.h</label>
        <link refid="vector__helpers_8h"/>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16456" relation="include">
        </childnode>
        <childnode refid="16457" relation="include">
        </childnode>
        <childnode refid="16458" relation="include">
        </childnode>
      </node>
      <node id="16409">
        <label>limits</label>
      </node>
      <node id="16426">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="16420">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="16421" relation="include">
        </childnode>
        <childnode refid="16424" relation="include">
        </childnode>
        <childnode refid="16425" relation="include">
        </childnode>
      </node>
      <node id="16465">
        <label>assert.h</label>
      </node>
      <node id="16458">
        <label>iterator</label>
      </node>
      <node id="16447">
        <label>helper/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
      </node>
      <node id="16428">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16429" relation="include">
        </childnode>
        <childnode refid="16445" relation="include">
        </childnode>
        <childnode refid="16430" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
      </node>
      <node id="16427">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="16407">
        <label>cstdint</label>
      </node>
      <node id="16425">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="16426" relation="include">
        </childnode>
        <childnode refid="16427" relation="include">
        </childnode>
      </node>
      <node id="16441">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="16442" relation="include">
        </childnode>
        <childnode refid="16407" relation="include">
        </childnode>
      </node>
      <node id="16431">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16432" relation="include">
        </childnode>
      </node>
      <node id="16422">
        <label>stdint.h</label>
      </node>
      <node id="16466">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="16467" relation="include">
        </childnode>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16468" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16421" relation="include">
        </childnode>
        <childnode refid="16420" relation="include">
        </childnode>
        <childnode refid="16425" relation="include">
        </childnode>
      </node>
      <node id="16451">
        <label>storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="16428" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16448" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
      </node>
      <node id="16462">
        <label>storage/SequentialHeapMerger.h</label>
        <link refid="_sequential_heap_merger_8h"/>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16461">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
      </node>
      <node id="16438">
        <label>cmath</label>
      </node>
      <node id="16444">
        <label>cassert</label>
      </node>
      <node id="16413">
        <label>stdexcept</label>
      </node>
      <node id="16457">
        <label>numeric</label>
      </node>
      <node id="16429">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16430" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16424" relation="include">
        </childnode>
        <childnode refid="16431" relation="include">
        </childnode>
        <childnode refid="16434" relation="include">
        </childnode>
      </node>
      <node id="16448">
        <label>storage/PrettyPrinter.h</label>
        <link refid="_pretty_printer_8h"/>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16449" relation="include">
        </childnode>
        <childnode refid="16450" relation="include">
        </childnode>
      </node>
      <node id="16434">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16431" relation="include">
        </childnode>
        <childnode refid="16435" relation="include">
        </childnode>
        <childnode refid="16443" relation="include">
        </childnode>
      </node>
      <node id="16408">
        <label>string</label>
      </node>
      <node id="16468">
        <label>map</label>
      </node>
      <node id="16435">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="16436" relation="include">
        </childnode>
        <childnode refid="16437" relation="include">
        </childnode>
        <childnode refid="16438" relation="include">
        </childnode>
        <childnode refid="16416" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16439" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16440" relation="include">
        </childnode>
        <childnode refid="16441" relation="include">
        </childnode>
        <childnode refid="16431" relation="include">
        </childnode>
      </node>
      <node id="16450">
        <label>helper/RangeIter.h</label>
        <link refid="_range_iter_8h"/>
      </node>
      <node id="16446">
        <label>unordered_set</label>
      </node>
      <node id="16445">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16429" relation="include">
        </childnode>
      </node>
      <node id="16464">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="16465" relation="include">
        </childnode>
        <childnode refid="16442" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16420" relation="include">
        </childnode>
        <childnode refid="16426" relation="include">
        </childnode>
        <childnode refid="16425" relation="include">
        </childnode>
        <childnode refid="16421" relation="include">
        </childnode>
      </node>
      <node id="16414">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="16415" relation="include">
        </childnode>
        <childnode refid="16416" relation="include">
        </childnode>
      </node>
      <node id="16403">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="PointerCalculator.cpp"/>
        <childnode refid="16404" relation="include">
        </childnode>
        <childnode refid="16442" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16446" relation="include">
        </childnode>
        <childnode refid="16447" relation="include">
        </childnode>
        <childnode refid="16448" relation="include">
        </childnode>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
      </node>
      <node id="16467">
        <label>exception</label>
      </node>
      <node id="16423">
        <label>ostream</label>
      </node>
      <node id="16469">
        <label>limits.h</label>
      </node>
      <node id="16452">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16459">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16461" relation="include">
        </childnode>
      </node>
      <node id="16421">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16422" relation="include">
        </childnode>
        <childnode refid="16423" relation="include">
        </childnode>
      </node>
      <node id="16405">
        <label>vector</label>
      </node>
      <node id="16417">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="16407" relation="include">
        </childnode>
        <childnode refid="16418" relation="include">
        </childnode>
      </node>
      <node id="16418">
        <label>array</label>
      </node>
      <node id="16440">
        <label>sstream</label>
      </node>
      <node id="16404">
        <label>storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16411" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16428" relation="include">
        </childnode>
      </node>
      <node id="16453">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
      </node>
      <node id="16463">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="16464" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
      </node>
      <node id="16424">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16421" relation="include">
        </childnode>
      </node>
      <node id="16436">
        <label>cerrno</label>
      </node>
      <node id="16442">
        <label>iostream</label>
      </node>
      <node id="16433">
        <label>cstddef</label>
      </node>
      <node id="16460">
        <label>unordered_map</label>
      </node>
      <node id="16419">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="16439">
        <label>mutex</label>
      </node>
      <node id="16430">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="16421" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
      </node>
      <node id="16432">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
        <childnode refid="16433" relation="include">
        </childnode>
      </node>
      <node id="16415">
        <label>thread</label>
      </node>
      <node id="16443">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="16444" relation="include">
        </childnode>
        <childnode refid="16438" relation="include">
        </childnode>
        <childnode refid="16407" relation="include">
        </childnode>
        <childnode refid="16437" relation="include">
        </childnode>
        <childnode refid="16439" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16441" relation="include">
        </childnode>
        <childnode refid="16431" relation="include">
        </childnode>
      </node>
      <node id="16455">
        <label>algorithm</label>
      </node>
      <node id="16449">
        <label>ftprinter/FTPrinter.h</label>
      </node>
      <node id="16406">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="16407" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16409" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16405" relation="include">
        </childnode>
      </node>
      <node id="16412">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="16409" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16414" relation="include">
        </childnode>
        <childnode refid="16417" relation="include">
        </childnode>
        <childnode refid="16419" relation="include">
        </childnode>
        <childnode refid="16420" relation="include">
        </childnode>
        <childnode refid="16421" relation="include">
        </childnode>
      </node>
      <node id="16470">
        <label>storage/TableRangeView.h</label>
        <link refid="_table_range_view_8h"/>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16411" relation="include">
        </childnode>
      </node>
      <node id="16437">
        <label>cstring</label>
      </node>
      <node id="16410">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* copy_vec</definition>
        <argsstring>(T *orig)</argsstring>
        <name>copy_vec</name>
        <param>
          <type>T *</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/PointerCalculator.cpp" line="17" bodyfile="/home/vagrant/lanice/src/lib/storage/PointerCalculator.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pointer_calculator_8h" kindref="compound">storage/PointerCalculator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="checked__cast_8h" kindref="compound">helper/checked_cast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pretty_printer_8h" kindref="compound">storage/PrettyPrinter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_store_8h" kindref="compound">storage/Store.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_table_range_view_8h" kindref="compound">storage/TableRangeView.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">hyrise::storage;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="17" refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" refkind="member"><highlight class="normal">T*<sp/><ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(T*<sp/>orig)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orig<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(begin(*orig),<sp/>end(*orig));</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_pointer_calculator_1a021e0ab6ecef3f167c53fa16f26b5028" refkind="member"><highlight class="normal"><ref refid="class_pointer_calculator_1a021e0ab6ecef3f167c53fa16f26b5028" kindref="member">PointerCalculator::PointerCalculator</ref>(<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>t,<sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>*pos,<sp/><ref refid="namespacehyrise_1_1storage_1aa2c4369081de5fd9f081ba05ae7531f7" kindref="member">field_list_t</ref><sp/>*f)<sp/>:<sp/>table(t),<sp/>pos_list(pos),<sp/>fields(f)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>nested<sp/>pos_list/fields:<sp/>if<sp/>the<sp/>input<sp/>table<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PointerCalculator<sp/>instance,<sp/>combine<sp/>the<sp/>old<sp/>and<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pos_list/fields<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>std::dynamic_pointer_cast&lt;const<sp/>PointerCalculator&gt;(t))<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>p-&gt;pos_list<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>(pos-&gt;size());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pos-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*pos_list)[i]<sp/>=<sp/>p-&gt;pos_list-&gt;at(pos-&gt;at(i));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref><sp/>=<sp/>p-&gt;table;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>p-&gt;fields<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref>(f-&gt;size());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>f-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*fields)[i]<sp/>=<sp/>p-&gt;fields-&gt;at(f-&gt;at(i));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref><sp/>=<sp/>p-&gt;table;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trv<sp/>=<sp/>std::dynamic_pointer_cast&lt;const<sp/>TableRangeView&gt;(t)){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><sp/>trv-&gt;getStart();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>start<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pos-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*pos_list)[i]<sp/>+=<sp/>start;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref><sp/>=<sp/>trv-&gt;getTable();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1aafe8c79a4a56ff66a813fb6a817dd47b" kindref="member">updateFieldMapping</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_pointer_calculator_1a70ba3d2ef7f8adec96a665c90fd7639f" refkind="member"><highlight class="normal"><ref refid="class_pointer_calculator_1a021e0ab6ecef3f167c53fa16f26b5028" kindref="member">PointerCalculator::PointerCalculator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&amp;<sp/>other)<sp/>:<sp/>table(other.table),<sp/>pos_list(<ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(other.pos_list)),<sp/>fields(<ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(other.fields))<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1aafe8c79a4a56ff66a813fb6a817dd47b" kindref="member">updateFieldMapping</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_pointer_calculator_1a9682236645d573e4a55fa6a25bb7b76c" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_pointer_calculator_1a9682236645d573e4a55fa6a25bb7b76c" kindref="member">PointerCalculator::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">create</ref>(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>,<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>,<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_pointer_calculator_1a582d20194dfa2ff7dbf98455bceed545" refkind="member"><highlight class="normal"><ref refid="class_pointer_calculator_1a582d20194dfa2ff7dbf98455bceed545" kindref="member">PointerCalculator::~PointerCalculator</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_pointer_calculator_1aafe8c79a4a56ff66a813fb6a817dd47b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aafe8c79a4a56ff66a813fb6a817dd47b" kindref="member">PointerCalculator::updateFieldMapping</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1ac7f1e2be36bca6fc5119fa3b46231401" kindref="member">slice_for_slice</ref>.clear();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1ab640d0f4071a2d93b6d2936b53483a9f" kindref="member">offset_in_slice</ref>.clear();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1aa095ee7598447699d7c34eaa1c7e4a8f" kindref="member">width_for_slice</ref>.clear();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1af973df64326820f2f123fd9b1fc357be" kindref="member">slice_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>0,<sp/>dst_field<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_field<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>last_field_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_slice<sp/>=<sp/>0;<sp/>src_slice<sp/>&lt;<sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;partitionCount();<sp/>src_slice++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>last_field_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_field<sp/>=<sp/>0;<sp/>src_field<sp/>&lt;<sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;partitionWidth(src_slice);<sp/>src_field++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>have<sp/>to<sp/>increase<sp/>the<sp/>fields<sp/>until<sp/>we<sp/>reach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>projected<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref><sp/>&amp;&amp;<sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;size()<sp/>&lt;=<sp/>dst_field<sp/>||<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(dst_field)<sp/>!=<sp/>field))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field++;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!last_field_set<sp/>||<sp/>field<sp/>&gt;<sp/>last_field<sp/>+<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>new<sp/>slice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1af973df64326820f2f123fd9b1fc357be" kindref="member">slice_count</ref>++;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1ac7f1e2be36bca6fc5119fa3b46231401" kindref="member">slice_for_slice</ref>.push_back(src_slice);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1ab640d0f4071a2d93b6d2936b53483a9f" kindref="member">offset_in_slice</ref>.push_back(src_field);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1aa095ee7598447699d7c34eaa1c7e4a8f" kindref="member">width_for_slice</ref>.push_back(1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1aa095ee7598447699d7c34eaa1c7e4a8f" kindref="member">width_for_slice</ref>[<ref refid="class_pointer_calculator_1af973df64326820f2f123fd9b1fc357be" kindref="member">slice_count</ref><sp/>-<sp/>1]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst_field++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_field<sp/>=<sp/>field;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!last_field_set)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_field_set<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>field++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_pointer_calculator_1a815d82d98a040d150c7040cfc07936de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a815d82d98a040d150c7040cfc07936de" kindref="member">PointerCalculator::setPositions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;pos_t&gt;(pos);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_pointer_calculator_1a41061e503e0c43feb1425a47904e5387" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a41061e503e0c43feb1425a47904e5387" kindref="member">PointerCalculator::setFields</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1aa2c4369081de5fd9f081ba05ae7531f7" kindref="member">field_list_t</ref><sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;field_t&gt;(f);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1aafe8c79a4a56ff66a813fb6a817dd47b" kindref="member">updateFieldMapping</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_pointer_calculator_1a8b02aaae5e63b1b27d518c57a308ea7b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*<ref refid="class_pointer_calculator_1a8b02aaae5e63b1b27d518c57a308ea7b" kindref="member">PointerCalculator::metadataAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a5a738eaf9cb0a700c3f988e48cfe05d3" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_column;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(column_index);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>column_index;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;metadataAt(actual_column);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_pointer_calculator_1acd845d45bae50032a1dff6209f15099d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1acd845d45bae50032a1dff6209f15099d" kindref="member">PointerCalculator::setDictionaryAt</ref>(<ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a5a738eaf9cb0a700c3f988e48cfe05d3" kindref="member">table_id_t</ref><sp/>table_id)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>set<sp/>PointerCalculator<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_pointer_calculator_1a562260e4503193f2052f6deefb0ca122" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_pointer_calculator_1a562260e4503193f2052f6deefb0ca122" kindref="member">PointerCalculator::dictionaryAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a5a738eaf9cb0a700c3f988e48cfe05d3" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_column,<sp/>actual_row;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(column);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>column;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>&amp;&amp;<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;at(row);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;dictionaryAt(actual_column,<sp/>actual_row,<sp/>table_id);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_pointer_calculator_1afec8ff877a34cb7d7dd84dcdba2c6053" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_pointer_calculator_1afec8ff877a34cb7d7dd84dcdba2c6053" kindref="member">PointerCalculator::dictionaryByTableId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a5a738eaf9cb0a700c3f988e48cfe05d3" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_column;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(column);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>column;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;dictionaryByTableId(actual_column,<sp/>table_id);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_pointer_calculator_1ac7daa76130599340823242d515b4929c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1ac7daa76130599340823242d515b4929c" kindref="member">PointerCalculator::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;size();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;size();</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_pointer_calculator_1a7701458e19eff9c9be5d510974be6905" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a7701458e19eff9c9be5d510974be6905" kindref="member">PointerCalculator::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;size();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;columnCount();</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_pointer_calculator_1a8d277cfce49eb5655569ce1d131984ef" refkind="member"><highlight class="normal"><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_pointer_calculator_1a8d277cfce49eb5655569ce1d131984ef" kindref="member">PointerCalculator::getValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_column,<sp/>actual_row;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;at(row);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(column);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>column;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;getValueId(actual_column,<sp/>actual_row);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_pointer_calculator_1a232f2adbbe75c832c399b7fad631db3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a232f2adbbe75c832c399b7fad631db3b" kindref="member">PointerCalculator::partitionCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1af973df64326820f2f123fd9b1fc357be" kindref="member">slice_count</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_pointer_calculator_1a105b02332c4d1468e278249c4652732c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a105b02332c4d1468e278249c4652732c" kindref="member">PointerCalculator::partitionWidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>this<sp/>should<sp/>return<sp/>the<sp/>width<sp/>in<sp/>bytes<sp/>for<sp/>the<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aa095ee7598447699d7c34eaa1c7e4a8f" kindref="member">width_for_slice</ref>[slice];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;partitionWidth(slice);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_pointer_calculator_1ac3e776173bb02f4b6bdfefaf91f952a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1ac3e776173bb02f4b6bdfefaf91f952a4" kindref="member">PointerCalculator::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">PrettyPrinter::print</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::cout,<sp/></highlight><highlight class="stringliteral">&quot;unnamed<sp/>pointer<sp/>calculator&quot;</highlight><highlight class="normal">,<sp/>limit);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_pointer_calculator_1a79728be6c875bba8731be2e42253571a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a79728be6c875bba8731be2e42253571a" kindref="member">PointerCalculator::getTableRowForRow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_row;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resolve<sp/>mapping<sp/>of<sp/>THIS<sp/>pointer<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;at(row);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>underlying<sp/>table<sp/>is<sp/>PointerCalculator,<sp/>resolve<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_row<sp/>=<sp/>p-&gt;<ref refid="class_pointer_calculator_1a79728be6c875bba8731be2e42253571a" kindref="member">getTableRowForRow</ref>(actual_row);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actual_row;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_pointer_calculator_1abca668c527de684e3d4df071934d1da9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1abca668c527de684e3d4df071934d1da9" kindref="member">PointerCalculator::getTableColumnForColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="236"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual_column;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resolve<sp/>field<sp/>mapping<sp/>of<sp/>THIS<sp/>pointer<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>-&gt;at(column);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>column;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>underlying<sp/>table<sp/>is<sp/>PointerCalculator,<sp/>resolve<sp/>recursively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_column<sp/>=<sp/>p-&gt;<ref refid="class_pointer_calculator_1abca668c527de684e3d4df071934d1da9" kindref="member">getTableColumnForColumn</ref>(actual_column);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actual_column;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_pointer_calculator_1aeebfa9bef9ec2989eefa2030abbb4fe3" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/><ref refid="class_pointer_calculator_1aeebfa9bef9ec2989eefa2030abbb4fe3" kindref="member">PointerCalculator::getTable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_pointer_calculator_1acbea3ac67f01befefecab60dd8a53bcd" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/><ref refid="class_pointer_calculator_1acbea3ac67f01befefecab60dd8a53bcd" kindref="member">PointerCalculator::getActualTable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;getActualTable();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_pointer_calculator_1a6f57168d74f28df50b332b47917457ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>*<ref refid="class_pointer_calculator_1a6f57168d74f28df50b332b47917457ca" kindref="member">PointerCalculator::getPositions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_pointer_calculator_1a1d3eab6e902f044fc387c43781b91862" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/><ref refid="class_pointer_calculator_1a1d3eab6e902f044fc387c43781b91862" kindref="member">PointerCalculator::getActualTablePositions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>result(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;size());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>positions<sp/>=<sp/>p-&gt;getActualTablePositions();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pos_list_t::const_iterator<sp/>it<sp/>=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;begin();<sp/>it<sp/>!=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(positions[*it]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//FIXME:<sp/>Template<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_pointer_calculator_1a60d1d6c937774a1ea6915636b8d74934" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_pointer_calculator_1a60d1d6c937774a1ea6915636b8d74934" kindref="member">PointerCalculator::copy_structure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1aa2c4369081de5fd9f081ba05ae7531f7" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuse_dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reuse_dict)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>dictionaries<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a5a47ffe4fe6daf66aeeaec19ed0ea5ec" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_pointer_calculator_1a8b02aaae5e63b1b27d518c57a308ea7b" kindref="member">metadataAt</ref>(field));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_pointer_calculator_1a562260e4503193f2052f6deefb0ca122" kindref="member">dictionaryAt</ref>(field,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_pointer_calculator_1a7701458e19eff9c9be5d510974be6905" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_pointer_calculator_1a8b02aaae5e63b1b27d518c57a308ea7b" kindref="member">metadataAt</ref>(i));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_pointer_calculator_1a562260e4503193f2052f6deefb0ca122" kindref="member">dictionaryAt</ref>(i,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::make_shared&lt;Table&gt;(&amp;<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>,<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>,<sp/>initial_size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>compressed);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_pointer_calculator_1ae09ea05b16fc99093a4c03a69442f9c9" refkind="member"><highlight class="normal">std::shared_ptr&lt;PointerCalculator&gt;<sp/><ref refid="class_pointer_calculator_1ae09ea05b16fc99093a4c03a69442f9c9" kindref="member">PointerCalculator::intersect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>PointerCalculator&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>(std::max(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;size(),<sp/>other-&gt;pos_list-&gt;size()));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>assert(std::is_sorted(begin(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>),<sp/>end(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>))<sp/>&amp;&amp;<sp/>std::is_sorted(begin(*other-&gt;pos_list),<sp/>end(*other-&gt;pos_list))<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Both<sp/>lists<sp/>have<sp/>to<sp/>be<sp/>sorted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>std::set_intersection(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;begin(),<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;end(),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;pos_list-&gt;begin(),<sp/>other-&gt;pos_list-&gt;end(),</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(*result));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>assert((other-&gt;table<sp/>==<sp/>this-&gt;table)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>point<sp/>to<sp/>same<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">create</ref>(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>,<sp/>result,<sp/><ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_pointer_calculator_1aa297910421ea0308cd6c355164cf1f14" refkind="member"><highlight class="normal">std::shared_ptr&lt;PointerCalculator&gt;<sp/><ref refid="class_pointer_calculator_1aa297910421ea0308cd6c355164cf1f14" kindref="member">PointerCalculator::unite</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>PointerCalculator&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>assert((other-&gt;table<sp/>==<sp/>this-&gt;table)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>point<sp/>to<sp/>same<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>&amp;&amp;<sp/>other-&gt;pos_list)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>(std::max(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;size(),<sp/>other-&gt;pos_list-&gt;size()));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(std::is_sorted(begin(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>),<sp/>end(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>))<sp/>&amp;&amp;<sp/>std::is_sorted(begin(*other-&gt;pos_list),<sp/>end(*other-&gt;pos_list))<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Both<sp/>lists<sp/>have<sp/>to<sp/>be<sp/>sorted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set_union(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;begin(),<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;end(),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;pos_list-&gt;begin(),<sp/>other-&gt;pos_list-&gt;end(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;begin());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">create</ref>(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>,<sp/>result,<sp/><ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref>*<sp/>positions<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>positions<sp/>=<sp/>other-&gt;pos_list;<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;pos_list<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>positions<sp/>=<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>;<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">create</ref>(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>,<sp/><ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(positions),<sp/><ref refid="_pointer_calculator_8cpp_1ac97d9e67bbd8b2d8ec3e0d2959c8fe39" kindref="member">copy_vec</ref>(<ref refid="class_pointer_calculator_1a76ce6e192192101c99ec79374eaf661c" kindref="member">fields</ref>));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_pointer_calculator_1a3b27cda2c208fbed0c7556f1f8ad8651" refkind="member"><highlight class="normal">std::shared_ptr&lt;PointerCalculator&gt;<sp/><ref refid="class_pointer_calculator_1a3b27cda2c208fbed0c7556f1f8ad8651" kindref="member">PointerCalculator::concatenate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>PointerCalculator&gt;&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>assert((other-&gt;table<sp/>==<sp/>this-&gt;table)<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>point<sp/>to<sp/>same<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>std::vector&lt;std::shared_ptr&lt;const<sp/>PointerCalculator&gt;&gt;<sp/>v<sp/>{std::static_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(shared_from_this()),<sp/>other};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a7cfb4ee455555b900213603d71980d6d" kindref="member">PointerCalculator::concatenate_many</ref>(begin(v),<sp/>end(v));</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="class_pointer_calculator_1ab6ea533aa9ab978a180e1140cd029c43" refkind="member"><highlight class="normal">std::shared_ptr&lt;const<sp/>PointerCalculator&gt;<sp/><ref refid="class_pointer_calculator_1ab6ea533aa9ab978a180e1140cd029c43" kindref="member">PointerCalculator::unite_many</ref>(pc_vector::const_iterator<sp/>it,<sp/>pc_vector::const_iterator<sp/>it_end){</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;const<sp/>PointerCalculator&gt;<sp/>base<sp/>=<sp/>*(it++);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;it<sp/>!=<sp/>it_end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>base<sp/>=<sp/>base-&gt;unite(*it);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_pointer_calculator_1a7cfb4ee455555b900213603d71980d6d" refkind="member"><highlight class="normal">std::shared_ptr&lt;PointerCalculator&gt;<sp/><ref refid="class_pointer_calculator_1a7cfb4ee455555b900213603d71980d6d" kindref="member">PointerCalculator::concatenate_many</ref>(pc_vector::const_iterator<sp/>it,<sp/>pc_vector::const_iterator<sp/>it_end)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>std::accumulate(it,<sp/>it_end,<sp/>0,<sp/>[]<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>acc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>PointerCalculator&gt;&amp;<sp/>pc)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc<sp/>+<sp/>pc-&gt;size();<sp/>});</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>result-&gt;reserve(sz);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;it<sp/>!=<sp/>it_end;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pl<sp/>=<sp/>(*it)-&gt;pos_list;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>(*it)-&gt;table;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pl<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>(*it)-&gt;size();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;resize(result-&gt;size()<sp/>+<sp/>sz);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(end(*result)-sz,<sp/>end(*result),<sp/>0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;insert(end(*result),<sp/>begin(*pl),<sp/>end(*pl));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">create</ref>(table,<sp/>result,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="class_pointer_calculator_1aa1c50ecf298b9d1843de7c8e4e6e4939" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1aa1c50ecf298b9d1843de7c8e4e6e4939" kindref="member">PointerCalculator::debugStructure</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::string(level,<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PointerCalculator<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>-&gt;debugStructure(level+1);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="class_pointer_calculator_1a9ec8c22d62384c55a4aa27770d98137a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a9ec8c22d62384c55a4aa27770d98137a" kindref="member">PointerCalculator::validate</ref>(<ref refid="namespacehyrise_1_1tx_1a3f8f9dae75e3e1872247b082f80ffd77" kindref="member">hyrise::tx::transaction_id_t</ref><sp/>tid,<sp/><ref refid="namespacehyrise_1_1tx_1a3f8f9dae75e3e1872247b082f80ffd77" kindref="member">hyrise::tx::transaction_id_t</ref><sp/>cid)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>store<sp/>=<sp/><ref refid="checked__cast_8h_1ab1a6688a6284640c3040705ab0ff138c" kindref="member">checked_pointer_cast</ref>&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1storage_1_1_store" kindref="compound">Store</ref>&gt;(<ref refid="class_pointer_calculator_1a1f408af8ac5043755573b931699876b0" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>(store-&gt;buildValidPositions(cid,<sp/>tid));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>store-&gt;validatePositions(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>,<sp/>cid,<sp/>tid);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_pointer_calculator_1a58904d5904a49f0cabb26b09b8ce0967" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator_1a58904d5904a49f0cabb26b09b8ce0967" kindref="member">PointerCalculator::remove</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">pos_list_t</ref>&amp;<sp/>pl)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;pos_t&gt;<sp/>tmp(pl.begin(),<sp/>pl.end());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>end<sp/>=<sp/>tmp.cend();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>std::remove_if(std::begin(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>),<sp/>std::end(*<ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>),[&amp;tmp,<sp/>&amp;end](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1adf2f7735f8bc6e8bd84d1242ae680cf0" kindref="member">pos_t</ref>&amp;<sp/>p){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp.count(p)<sp/>!=<sp/>0u;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>(*pos_list).erase(res,<sp/><ref refid="class_pointer_calculator_1aeefc9c692462aaa827cebde4d89c20b6" kindref="member">pos_list</ref>-&gt;end());</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/storage/PointerCalculator.cpp"/>
  </compounddef>
</doxygen>
