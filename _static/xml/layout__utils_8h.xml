<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="layout__utils_8h" kind="file">
    <compoundname>layout_utils.h</compoundname>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includedby refid="layouter_2base_8h" local="yes">src/lib/layouter/base.h</includedby>
    <includedby refid="base_8cpp" local="yes">src/lib/layouter/base.cpp</includedby>
    <includedby refid="layout__utils_8cpp" local="yes">src/lib/layouter/layout_utils.cpp</includedby>
    <incdepgraph>
      <node id="13164">
        <label>src/lib/layouter/layout_utils.h</label>
        <link refid="layout_utils.h"/>
        <childnode refid="13165" relation="include">
        </childnode>
        <childnode refid="13166" relation="include">
        </childnode>
      </node>
      <node id="13166">
        <label>vector</label>
      </node>
      <node id="13165">
        <label>set</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13179">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="13181">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="13183">
        <label>src/lib/layouter/layout_utils.cpp</label>
        <link refid="layout__utils_8cpp"/>
      </node>
      <node id="13168">
        <label>src/lib/layouter/base.h</label>
        <link refid="layouter_2base_8h"/>
        <childnode refid="13169" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
        <childnode refid="13171" relation="include">
        </childnode>
      </node>
      <node id="13180">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="13170">
        <label>src/lib/layouter/incremental.cpp</label>
        <link refid="incremental_8cpp"/>
      </node>
      <node id="13175">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="13167">
        <label>src/lib/layouter/layout_utils.h</label>
        <link refid="layout_utils.h"/>
        <childnode refid="13168" relation="include">
        </childnode>
        <childnode refid="13169" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
      </node>
      <node id="13182">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="13178">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="13172">
        <label>src/lib/access/Layouter.h</label>
        <link refid="_layouter_8h"/>
        <childnode refid="13173" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
      </node>
      <node id="13174">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="13175" relation="include">
        </childnode>
        <childnode refid="13176" relation="include">
        </childnode>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13179" relation="include">
        </childnode>
        <childnode refid="13180" relation="include">
        </childnode>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13182" relation="include">
        </childnode>
      </node>
      <node id="13176">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="13171">
        <label>src/lib/layouter/incremental.h</label>
        <link refid="incremental_8h"/>
        <childnode refid="13172" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13173">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="13169">
        <label>src/lib/layouter/base.cpp</label>
        <link refid="base_8cpp"/>
      </node>
      <node id="13177">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelayouter">layouter</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="layout__utils_8h_1a6df4680467235d1ee6d9b19610215270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
        <definition>std::vector&lt;layouter::subset_t&gt;&amp; operator+=</definition>
        <argsstring>(std::vector&lt; layouter::subset_t &gt; &amp;a, const std::vector&lt; layouter::subset_t &gt; &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="25" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1ad8d5a70f4c01a0dd59c300abc9d1bc32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt;</type>
        <definition>std::vector&lt;layouter::subset_t&gt; operator+</definition>
        <argsstring>(const std::vector&lt; layouter::subset_t &gt; &amp;a, const std::vector&lt; layouter::subset_t &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="26" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1adf47a5cd62b5e45e37cd2c7d2452ea8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const std::vector&lt; layouter::subset_t &gt; &amp;left, const std::vector&lt; layouter::subset_t &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="28" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1a8fdd99abb12879bb5576fbc48f656838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const std::vector&lt; layouter::subset_t &gt; &amp;left, const std::vector&lt; layouter::subset_t &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="29" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1a262ac7552679026b025fa256b65b95df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool subset_t_lt</definition>
        <argsstring>(const layouter::subset_t &amp;left, const layouter::subset_t &amp;right)</argsstring>
        <name>subset_t_lt</name>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="31" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="84" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1a189f883d79115f42a69959bdeab0a671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sort_subset_by_size</definition>
        <argsstring>(const layouter::subset_t &amp;left, const layouter::subset_t &amp;right)</argsstring>
        <name>sort_subset_by_size</name>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="32" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1a4f75765b29f31b5cb5178d67d4cb32c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool subset_t_content_equal</definition>
        <argsstring>(const layouter::subset_t &amp;left, const layouter::subset_t &amp;right)</argsstring>
        <name>subset_t_content_equal</name>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="34" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1a23fa58ad6255a695e28a2e649ed4d83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GCD</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>GCD</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="36" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="109" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1ac40678ad881b5323943b9e63b41e72e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LCM</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>LCM</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="37" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.cpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="layout__utils_8h_1ade2593c9a1f0314beb0796a5b32a8d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sum</definition>
        <argsstring>(InputIterator first, InputIterator last, const T &amp;value)</argsstring>
        <name>sum</name>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" line="40" bodyfile="/home/vagrant/lanice/src/lib/layouter/layout_utils.h" bodystart="40" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_LAYOUTER_LAYOUT_UTILS_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_LAYOUTER_LAYOUT_UTILS_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">layouter<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Globale<sp/>subset_t<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref>;</highlight></codeline>
<codeline lineno="11" refid="namespacelayouter_1aec12d8e69cf2bd6fc00d80094a3a0fd0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::set&lt;unsigned&gt;<sp/><ref refid="namespacelayouter_1aec12d8e69cf2bd6fc00d80094a3a0fd0" kindref="member">set_subset_t</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>methods<sp/>to<sp/>print<sp/>all<sp/>different<sp/>kind<sp/>of<sp/>subsets<sp/>and<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>layouts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">print</ref>(std::set&lt;unsigned&gt;<sp/>x);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">print</ref>(std::vector&lt;unsigned&gt;<sp/>x);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">print</ref>(std::vector&lt;std::vector&lt;unsigned&gt;<sp/>&gt;<sp/>x);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">print</ref>(std::vector&lt;double&gt;<sp/>x);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a8fe7d9ecbfd0b9a1690bca4e2a544fd0" kindref="member">print</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>Helper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">std::vector&lt;layouter::subset_t&gt;<sp/>&amp;<ref refid="layout__utils_8cpp_1a6df4680467235d1ee6d9b19610215270" kindref="member">operator += </ref>(std::vector&lt;layouter::subset_t&gt;<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;b);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::vector&lt;layouter::subset_t&gt;<sp/><sp/><sp/><ref refid="layout__utils_8cpp_1ad8d5a70f4c01a0dd59c300abc9d1bc32" kindref="member">operator + </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;b);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1adf47a5cd62b5e45e37cd2c7d2452ea8d" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;right);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1a8fdd99abb12879bb5576fbc48f656838" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;layouter::subset_t&gt;<sp/>&amp;right);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1a262ac7552679026b025fa256b65b95df" kindref="member">subset_t_lt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref><sp/>&amp;left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref><sp/>&amp;right);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1a189f883d79115f42a69959bdeab0a671" kindref="member">sort_subset_by_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref><sp/>&amp;left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref><sp/>&amp;right);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1a4f75765b29f31b5cb5178d67d4cb32c2" kindref="member">subset_t_content_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">layouter::subset_t</ref>&amp;<sp/>right);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1a23fa58ad6255a695e28a2e649ed4d83c" kindref="member">GCD</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8cpp_1ac40678ad881b5323943b9e63b41e72e9" kindref="member">LCM</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="40" refid="layout__utils_8h_1ade2593c9a1f0314beb0796a5b32a8d70" refkind="member"><highlight class="normal">T<sp/><ref refid="layout__utils_8h_1ade2593c9a1f0314beb0796a5b32a8d70" kindref="member">sum</ref>(InputIterator<sp/>first,<sp/>InputIterator<sp/>last,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>T<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>!=<sp/>last)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first++<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ret;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_LAYOUTER_LAYOUT_UTILS_H_</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/layouter/layout_utils.h"/>
  </compounddef>
</doxygen>
