<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classhyrise_1_1io_1_1_resource_manager" kind="class" prot="public">
    <compoundname>hyrise::io::ResourceManager</compoundname>
    <derivedcompoundref refid="classhyrise_1_1io_1_1_storage_manager" prot="public" virt="non-virtual">hyrise::io::StorageManager</derivedcompoundref>
    <includes refid="_resource_manager_8h" local="no">ResourceManager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhyrise_1_1io_1_1_resource_manager_1a06c0b1260dc17ba8406198bb26c427c6" prot="public" static="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_abstract_resource" kindref="compound">AbstractResource</ref> &gt; &gt;</type>
        <definition>typedef std::map&lt;std::string, std::shared_ptr&lt;AbstractResource&gt; &gt; hyrise::io::ResourceManager::resource_map</definition>
        <argsstring></argsstring>
        <name>resource_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="42" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhyrise_1_1io_1_1_resource_manager_1a55629b3cd74f80d1cea4436b577ff955" prot="private" static="no" mutable="yes">
        <type><ref refid="classhyrise_1_1io_1_1_resource_manager_1a06c0b1260dc17ba8406198bb26c427c6" kindref="member">resource_map</ref></type>
        <definition>resource_map hyrise::io::ResourceManager::_resources</definition>
        <argsstring></argsstring>
        <name>_resources</name>
        <briefdescription>
<para>The actual schema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="84" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhyrise_1_1io_1_1_resource_manager_1a631f927a64aff55d273aa222a053e800" prot="private" static="no" mutable="yes">
        <type>std::recursive_mutex</type>
        <definition>std::recursive_mutex hyrise::io::ResourceManager::_resource_mutex</definition>
        <argsstring></argsstring>
        <name>_resource_mutex</name>
        <briefdescription>
<para>Mutex protecting the _schema map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="86" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1ab22262727cf33994dffcda141fe4c58d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhyrise_1_1io_1_1_resource_manager" kindref="compound">ResourceManager</ref> &amp;</type>
        <definition>ResourceManager &amp; hyrise::io::ResourceManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
<para>Retrieve singleton <ref refid="classhyrise_1_1io_1_1_resource_manager" kindref="compound">ResourceManager</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="44" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a8aebc08f8dc76a03c5685d999d855b27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::ResourceManager::add</definition>
        <argsstring>(const std::string &amp;name, const std::shared_ptr&lt; AbstractResource &gt; &amp;resource) const </argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_abstract_resource" kindref="compound">AbstractResource</ref> &gt; &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Adds a new resource. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="47" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a1fd8fc312c5c3ee27eee7c47de7244e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_abstract_resource" kindref="compound">AbstractResource</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractResource &gt; hyrise::io::ResourceManager::getResource</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>getResource</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves a resource by name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="50" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a4768ef465eb1271b5ac65c19865a4bba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>std::shared_ptr&lt;T&gt; hyrise::io::ResourceManager::get</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieves a resource by name and assures its type T. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="54" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a59abe607c36c587f37f341d3f5db30aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::ResourceManager::remove</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>remove</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes a named resource. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="59" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a946e5b60ef5924a4129e9cd8680d03d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::ResourceManager::replace</definition>
        <argsstring>(const std::string &amp;name, const std::shared_ptr&lt; AbstractResource &gt; &amp;resource) const </argsstring>
        <name>replace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_abstract_resource" kindref="compound">AbstractResource</ref> &gt; &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Replaces an existing resource. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="62" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a7a2ce16cf1ae082a1276965c330171d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::ResourceManager::clear</definition>
        <argsstring>() const </argsstring>
        <name>clear</name>
        <briefdescription>
<para>Removes all resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="65" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a082d4f9e4abecaefff089bed21cb7584" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hyrise::io::ResourceManager::exists</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>exists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classhyrise_1_1_test" kindref="compound">Test</ref> for resource existance <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="69" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a58c0f1fe350c4b0abf7a9c2ae0b0db89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::ResourceManager::assureExists</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>assureExists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classhyrise_1_1_test" kindref="compound">Test</ref> for resource existance, throws <ref refid="classhyrise_1_1io_1_1_resource_manager_exception" kindref="compound">ResourceManagerException</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Resource name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="73" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a9875456caeb04860be3202fb7825fe4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t hyrise::io::ResourceManager::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Return number of elements in storage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="76" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a017e1c927a250a0d61902e594f8550af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhyrise_1_1io_1_1_resource_manager_1a06c0b1260dc17ba8406198bb26c427c6" kindref="member">resource_map</ref></type>
        <definition>ResourceManager::resource_map hyrise::io::ResourceManager::all</definition>
        <argsstring>() const </argsstring>
        <name>all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a copy of the full resource map, otherwise, we would need to lock the whole structure while other operations are running on top of it </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="81" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a1d84d028be2e35197eeaee0224164e4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hyrise::io::ResourceManager::ResourceManager</definition>
        <argsstring>()=default</argsstring>
        <name>ResourceManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a9e0b5cf9686713e0a8449f5986c4a30e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hyrise::io::ResourceManager::ResourceManager</definition>
        <argsstring>(const ResourceManager &amp;)=delete</argsstring>
        <name>ResourceManager</name>
        <param>
          <type>const <ref refid="classhyrise_1_1io_1_1_resource_manager" kindref="compound">ResourceManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_resource_manager_1a37a8c7e8f011bb5a61a93be09e5f3533" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhyrise_1_1io_1_1_resource_manager" kindref="compound">ResourceManager</ref> &amp;</type>
        <definition>ResourceManager&amp; hyrise::io::ResourceManager::operator=</definition>
        <argsstring>(const ResourceManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhyrise_1_1io_1_1_resource_manager" kindref="compound">ResourceManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Manages AbstractResources by name</para><para><simplesect kind="note"><para>All methods on this class are <computeroutput>const</computeroutput> in the C++11 sense of being thread-safe since all interactions with the resource manager <emphasis>need</emphasis> to be thread-safe. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3175">
        <label>hyrise::io::ResourceManager</label>
        <link refid="classhyrise_1_1io_1_1_resource_manager"/>
      </node>
      <node id="3176">
        <label>hyrise::io::StorageManager</label>
        <link refid="classhyrise_1_1io_1_1_storage_manager"/>
        <childnode refid="3175" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3177">
        <label>hyrise::io::ResourceManager</label>
        <link refid="classhyrise_1_1io_1_1_resource_manager"/>
      </node>
    </collaborationgraph>
    <location file="/home/vagrant/lanice/src/lib/io/ResourceManager.h" line="40" bodyfile="/home/vagrant/lanice/src/lib/io/ResourceManager.h" bodystart="40" bodyend="92"/>
    <listofallmembers>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a631f927a64aff55d273aa222a053e800" prot="private" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>_resource_mutex</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a55629b3cd74f80d1cea4436b577ff955" prot="private" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>_resources</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a8aebc08f8dc76a03c5685d999d855b27" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>add</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a017e1c927a250a0d61902e594f8550af" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>all</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a58c0f1fe350c4b0abf7a9c2ae0b0db89" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>assureExists</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a7a2ce16cf1ae082a1276965c330171d8" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>clear</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a082d4f9e4abecaefff089bed21cb7584" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>exists</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a4768ef465eb1271b5ac65c19865a4bba" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>get</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1ab22262727cf33994dffcda141fe4c58d" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>getInstance</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a1fd8fc312c5c3ee27eee7c47de7244e9" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>getResource</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a37a8c7e8f011bb5a61a93be09e5f3533" prot="private" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>operator=</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a59abe607c36c587f37f341d3f5db30aa" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>remove</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a946e5b60ef5924a4129e9cd8680d03d8" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>replace</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a06c0b1260dc17ba8406198bb26c427c6" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>resource_map</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a1d84d028be2e35197eeaee0224164e4a" prot="private" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>ResourceManager</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a9e0b5cf9686713e0a8449f5986c4a30e" prot="private" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>ResourceManager</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a9875456caeb04860be3202fb7825fe4a" prot="public" virt="non-virtual"><scope>hyrise::io::ResourceManager</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
