<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="test_8h" kind="file">
    <compoundname>test.h</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="base__test_8h" local="yes">testing/base_test.h</includes>
    <includes refid="_plan_operation_8h" local="yes">access/system/PlanOperation.h</includes>
    <includes refid="_storage_manager_8h" local="yes">io/StorageManager.h</includes>
    <includes refid="types_8h" local="yes">helper/types.h</includes>
    <includes refid="stringhelpers_8h" local="yes">helper/stringhelpers.h</includes>
    <includedby refid="test_8cpp" local="yes">src/lib/testing/test.cpp</includedby>
    <incdepgraph>
      <node id="19464">
        <label>atomic</label>
      </node>
      <node id="19447">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="19438" relation="include">
        </childnode>
      </node>
      <node id="19455">
        <label>limits</label>
      </node>
      <node id="19471">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="19468">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="19443" relation="include">
        </childnode>
        <childnode refid="19469" relation="include">
        </childnode>
        <childnode refid="19470" relation="include">
        </childnode>
      </node>
      <node id="19475">
        <label>helper/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
      </node>
      <node id="19472">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="19454">
        <label>cstdint</label>
      </node>
      <node id="19476">
        <label>helper/stringhelpers.h</label>
        <link refid="stringhelpers_8h"/>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19477" relation="include">
        </childnode>
      </node>
      <node id="19470">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="19471" relation="include">
        </childnode>
        <childnode refid="19472" relation="include">
        </childnode>
      </node>
      <node id="19438">
        <label>stdint.h</label>
      </node>
      <node id="19448">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19449" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19451" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
      </node>
      <node id="19436">
        <label>access/system/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="19437" relation="include">
        </childnode>
        <childnode refid="19452" relation="include">
        </childnode>
        <childnode refid="19456" relation="include">
        </childnode>
        <childnode refid="19459" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19461" relation="include">
        </childnode>
        <childnode refid="19457" relation="include">
        </childnode>
      </node>
      <node id="19445">
        <label>stdexcept</label>
      </node>
      <node id="19474">
        <label>io/ResourceManager.h</label>
        <link refid="_resource_manager_8h"/>
        <childnode refid="19441" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19449" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19475" relation="include">
        </childnode>
      </node>
      <node id="19444">
        <label>string</label>
      </node>
      <node id="19441">
        <label>map</label>
      </node>
      <node id="19462">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="19463" relation="include">
        </childnode>
        <childnode refid="19464" relation="include">
        </childnode>
      </node>
      <node id="19446">
        <label>ostream</label>
      </node>
      <node id="19457">
        <label>json.h</label>
      </node>
      <node id="19473">
        <label>io/StorageManager.h</label>
        <link refid="_storage_manager_8h"/>
        <childnode refid="19464" relation="include">
        </childnode>
        <childnode refid="19441" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19449" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19474" relation="include">
        </childnode>
      </node>
      <node id="19451">
        <label>condition_variable</label>
      </node>
      <node id="19433">
        <label>src/lib/testing/test.h</label>
        <link refid="test.h"/>
        <childnode refid="19434" relation="include">
        </childnode>
        <childnode refid="19435" relation="include">
        </childnode>
        <childnode refid="19436" relation="include">
        </childnode>
        <childnode refid="19473" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19476" relation="include">
        </childnode>
      </node>
      <node id="19443">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19438" relation="include">
        </childnode>
        <childnode refid="19446" relation="include">
        </childnode>
      </node>
      <node id="19440">
        <label>vector</label>
      </node>
      <node id="19465">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="19454" relation="include">
        </childnode>
        <childnode refid="19466" relation="include">
        </childnode>
      </node>
      <node id="19434">
        <label>gtest/gtest.h</label>
      </node>
      <node id="19442">
        <label>utility</label>
      </node>
      <node id="19466">
        <label>array</label>
      </node>
      <node id="19477">
        <label>sstream</label>
      </node>
      <node id="19437">
        <label>access/system/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="19438" relation="include">
        </childnode>
        <childnode refid="19439" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19441" relation="include">
        </childnode>
        <childnode refid="19442" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
        <childnode refid="19447" relation="include">
        </childnode>
        <childnode refid="19448" relation="include">
        </childnode>
      </node>
      <node id="19435">
        <label>testing/base_test.h</label>
        <link refid="base__test_8h"/>
        <childnode refid="19434" relation="include">
        </childnode>
      </node>
      <node id="19456">
        <label>access/system/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="19441" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19449" relation="include">
        </childnode>
        <childnode refid="19457" relation="include">
        </childnode>
        <childnode refid="19458" relation="include">
        </childnode>
      </node>
      <node id="19460">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="19439">
        <label>time.h</label>
      </node>
      <node id="19469">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
      </node>
      <node id="19459">
        <label>io/TXContext.h</label>
        <link refid="_t_x_context_8h"/>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19460" relation="include">
        </childnode>
      </node>
      <node id="19452">
        <label>access/system/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
      </node>
      <node id="19467">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="19449">
        <label>mutex</label>
      </node>
      <node id="19463">
        <label>thread</label>
      </node>
      <node id="19458">
        <label>access/system/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19457" relation="include">
        </childnode>
      </node>
      <node id="19453">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="19454" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
      </node>
      <node id="19461">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="19455" relation="include">
        </childnode>
        <childnode refid="19450" relation="include">
        </childnode>
        <childnode refid="19445" relation="include">
        </childnode>
        <childnode refid="19440" relation="include">
        </childnode>
        <childnode refid="19444" relation="include">
        </childnode>
        <childnode refid="19453" relation="include">
        </childnode>
        <childnode refid="19462" relation="include">
        </childnode>
        <childnode refid="19465" relation="include">
        </childnode>
        <childnode refid="19467" relation="include">
        </childnode>
        <childnode refid="19468" relation="include">
        </childnode>
        <childnode refid="19443" relation="include">
        </childnode>
      </node>
      <node id="19450">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19478">
        <label>src/lib/testing/test.h</label>
        <link refid="test.h"/>
        <childnode refid="19479" relation="include">
        </childnode>
      </node>
      <node id="19479">
        <label>src/lib/testing/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classhyrise_1_1_storage_manager_test" prot="public">hyrise::StorageManagerTest</innerclass>
    <innerclass refid="classhyrise_1_1access_1_1_access_test" prot="public">hyrise::access::AccessTest</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="test_8h_1ac6e446d82fdcf25e105f252b90a96dff" prot="public" static="no">
        <name>ASSERT_TABLE_EQUAL</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>EXPECT_PRED_FORMAT2(<ref refid="test_8h_1a2b1493c44d14c0125b8a536ea5df6a0b" kindref="member">AssertTableContentEquals</ref>, a, b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/testing/test.h" line="36" bodyfile="/home/vagrant/lanice/src/lib/testing/test.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test_8h_1ade43fe2c5985f24d1797d89eefa1a015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It1</type>
          </param>
          <param>
            <type>typename It2</type>
          </param>
        </templateparamlist>
        <type>::testing::AssertionResult</type>
        <definition>::testing::AssertionResult contains_all</definition>
        <argsstring>(const It1 a, const It2 b)</argsstring>
        <name>contains_all</name>
        <param>
          <type>const It1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const It2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/testing/test.h" line="15" bodyfile="/home/vagrant/lanice/src/lib/testing/test.h" bodystart="15" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="test_8h_1a2b1493c44d14c0125b8a536ea5df6a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::testing::AssertionResult</type>
        <definition>::testing::AssertionResult AssertTableContentEquals</definition>
        <argsstring>(const char *left_exp, const char *right_exp, const hyrise::storage::c_atable_ptr_t left, const hyrise::storage::c_atable_ptr_t right)</argsstring>
        <name>AssertTableContentEquals</name>
        <param>
          <type>const char *</type>
          <declname>left_exp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>right_exp</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/testing/test.h" line="34" bodyfile="/home/vagrant/lanice/src/lib/testing/test.cpp" bodystart="6" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_TESTING_TEST_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_TESTING_TEST_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base__test_8h" kindref="compound">testing/base_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plan_operation_8h" kindref="compound">access/system/PlanOperation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_storage_manager_8h" kindref="compound">io/StorageManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringhelpers_8h" kindref="compound">helper/stringhelpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>It1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>It2&gt;</highlight></codeline>
<codeline lineno="15" refid="test_8h_1ade43fe2c5985f24d1797d89eefa1a015" refkind="member"><highlight class="normal">::testing::AssertionResult<sp/><ref refid="test_8h_1ade43fe2c5985f24d1797d89eefa1a015" kindref="member">contains_all</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>It1<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>It2<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//static_assert(std::is_same&lt;typename<sp/>It1::value_type,<sp/>typename<sp/>It2::value_type&gt;::value<sp/>==<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>It1::value_type<sp/>vt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;vt&gt;<sp/>unmatched_items;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>item:<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(begin(a),<sp/>end(a),<sp/>item)<sp/>==<sp/>end(a))<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unmatched_items.push_back(item);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unmatched_items.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::testing::AssertionSuccess();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::testing::AssertionFailure()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>elements<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="stringhelpers_8h_1a9d6658fdfba931db8a145b18f63c89a3" kindref="member">joinString</ref>(unmatched_items,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">::testing::AssertionResult<sp/><ref refid="test_8cpp_1a2b1493c44d14c0125b8a536ea5df6a0b" kindref="member">AssertTableContentEquals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*left_exp,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*right_exp,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>left,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>right);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="test_8h_1ac6e446d82fdcf25e105f252b90a96dff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_TABLE_EQUAL(a,b)<sp/>EXPECT_PRED_FORMAT2(AssertTableContentEquals,<sp/>a,<sp/>b)</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classhyrise_1_1_storage_manager_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhyrise_1_1_storage_manager_test" kindref="compound">StorageManagerTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1_test" kindref="compound">Test</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classhyrise_1_1_storage_manager_test_1ab4b0e66791b16d8520ba5f30a4745ca6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1_storage_manager_test_1ab4b0e66791b16d8520ba5f30a4745ca6" kindref="member">~StorageManagerTest</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classhyrise_1_1_storage_manager_test_1a9d9d997d123397dac2fe30193da63097" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1_storage_manager_test_1a9d9d997d123397dac2fe30193da63097" kindref="member">SetUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound" tooltip="Central holder of schema information.">StorageManager</ref><sp/>*sm<sp/>=<sp/><ref refid="classhyrise_1_1io_1_1_storage_manager_1a73b12a097673a0afa604a22dd401a1bb" kindref="member" tooltip="Retrieve singleton storage-manager instance.">StorageManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sm-&gt;<ref refid="classhyrise_1_1io_1_1_storage_manager_1a8ae4677060c29dd5b6fed2871e557b5b" kindref="member">removeAll</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classhyrise_1_1_storage_manager_test_1ab2d292443cadb863d7f3f7c3917a69f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1_storage_manager_test_1ab2d292443cadb863d7f3f7c3917a69f8" kindref="member">TearDown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classhyrise_1_1access_1_1_access_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_access_test" kindref="compound">AccessTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1_test" kindref="compound">Test</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classhyrise_1_1access_1_1_access_test_1a81a90668ff4f1562891f55edc66d1037" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_access_test_1a81a90668ff4f1562891f55edc66d1037" kindref="member">SetUp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound" tooltip="Central holder of schema information.">StorageManager</ref><sp/>*sm<sp/>=<sp/><ref refid="classhyrise_1_1io_1_1_storage_manager_1a73b12a097673a0afa604a22dd401a1bb" kindref="member" tooltip="Retrieve singleton storage-manager instance.">StorageManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>sm-&gt;<ref refid="classhyrise_1_1io_1_1_storage_manager_1a8ae4677060c29dd5b6fed2871e557b5b" kindref="member">removeAll</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classhyrise_1_1access_1_1_access_test_1ad92cd9639eb78de9785bdd8495046d50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_access_test_1ad92cd9639eb78de9785bdd8495046d50" kindref="member">TearDown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_TESTING_TEST_H_</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/testing/test.h"/>
  </compounddef>
</doxygen>
