<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_radix_join_transformation_8cpp" kind="file">
    <compoundname>RadixJoinTransformation.cpp</compoundname>
    <includes refid="_radix_join_transformation_8h" local="yes">RadixJoinTransformation.h</includes>
    <includes refid="_query_transformation_engine_8h" local="yes">access/system/QueryTransformationEngine.h</includes>
    <incdepgraph>
      <node id="6629">
        <label>atomic</label>
      </node>
      <node id="6612">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="6603" relation="include">
        </childnode>
      </node>
      <node id="6620">
        <label>limits</label>
      </node>
      <node id="6636">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="6633">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6635" relation="include">
        </childnode>
      </node>
      <node id="6637">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="6619">
        <label>cstdint</label>
      </node>
      <node id="6635">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="6636" relation="include">
        </childnode>
        <childnode refid="6637" relation="include">
        </childnode>
      </node>
      <node id="6603">
        <label>stdint.h</label>
      </node>
      <node id="6613">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6614" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6616" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
      </node>
      <node id="6601">
        <label>access/system/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="6602" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6621" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
      </node>
      <node id="6610">
        <label>stdexcept</label>
      </node>
      <node id="6609">
        <label>string</label>
      </node>
      <node id="6606">
        <label>map</label>
      </node>
      <node id="6627">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="6628" relation="include">
        </childnode>
        <childnode refid="6629" relation="include">
        </childnode>
      </node>
      <node id="6611">
        <label>ostream</label>
      </node>
      <node id="6622">
        <label>json.h</label>
      </node>
      <node id="6638">
        <label>access/system/AbstractPlanOpTransformation.h</label>
        <link refid="_abstract_plan_op_transformation_8h"/>
        <childnode refid="6622" relation="include">
        </childnode>
        <childnode refid="6601" relation="include">
        </childnode>
      </node>
      <node id="6616">
        <label>condition_variable</label>
      </node>
      <node id="6608">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6603" relation="include">
        </childnode>
        <childnode refid="6611" relation="include">
        </childnode>
      </node>
      <node id="6605">
        <label>vector</label>
      </node>
      <node id="6630">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="6619" relation="include">
        </childnode>
        <childnode refid="6631" relation="include">
        </childnode>
      </node>
      <node id="6598">
        <label>src/lib/access/radixjoin/RadixJoinTransformation.cpp</label>
        <link refid="RadixJoinTransformation.cpp"/>
        <childnode refid="6599" relation="include">
        </childnode>
        <childnode refid="6639" relation="include">
        </childnode>
      </node>
      <node id="6607">
        <label>utility</label>
      </node>
      <node id="6631">
        <label>array</label>
      </node>
      <node id="6640">
        <label>sstream</label>
      </node>
      <node id="6602">
        <label>access/system/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="6603" relation="include">
        </childnode>
        <childnode refid="6604" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6606" relation="include">
        </childnode>
        <childnode refid="6607" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6612" relation="include">
        </childnode>
        <childnode refid="6613" relation="include">
        </childnode>
      </node>
      <node id="6621">
        <label>access/system/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="6606" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6614" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
        <childnode refid="6623" relation="include">
        </childnode>
      </node>
      <node id="6625">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="6604">
        <label>time.h</label>
      </node>
      <node id="6639">
        <label>access/system/QueryTransformationEngine.h</label>
        <link refid="_query_transformation_engine_8h"/>
        <childnode refid="6640" relation="include">
        </childnode>
        <childnode refid="6641" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
      </node>
      <node id="6634">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
      </node>
      <node id="6624">
        <label>io/TXContext.h</label>
        <link refid="_t_x_context_8h"/>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6625" relation="include">
        </childnode>
      </node>
      <node id="6641">
        <label>iostream</label>
      </node>
      <node id="6617">
        <label>access/system/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
      </node>
      <node id="6632">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="6614">
        <label>mutex</label>
      </node>
      <node id="6600">
        <label>access/RadixJoin.h</label>
        <link refid="_radix_join_8h"/>
        <childnode refid="6601" relation="include">
        </childnode>
      </node>
      <node id="6628">
        <label>thread</label>
      </node>
      <node id="6623">
        <label>access/system/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
      </node>
      <node id="6599">
        <label>RadixJoinTransformation.h</label>
        <link refid="_radix_join_transformation_8h"/>
        <childnode refid="6600" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
        <childnode refid="6638" relation="include">
        </childnode>
      </node>
      <node id="6618">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6619" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6620" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
      </node>
      <node id="6626">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="6620" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6627" relation="include">
        </childnode>
        <childnode refid="6630" relation="include">
        </childnode>
        <childnode refid="6632" relation="include">
        </childnode>
        <childnode refid="6633" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
      </node>
      <node id="6615">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_radix_join_transformation_8h" kindref="compound">RadixJoinTransformation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_query_transformation_engine_8h" kindref="compound">access/system/QueryTransformationEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a8b3d6f659c443b19f95e2ff1e04abe5a" kindref="member">RadixJoinTransformation::transformation_is_registered</ref><sp/>=<sp/>QueryTransformationEngine::registerTransformation&lt;RadixJoinTransformation&gt;();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">RadixJoinTransformation::appendEdge</ref>(</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;srcId,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;dstId,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>Json::Value<sp/>edge(Json::arrayValue);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>edge.append(srcId);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>edge.append(dstId);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].append(edge);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">RadixJoinTransformation::createEdge</ref>(std::string<sp/>in,<sp/>std::string<sp/>out){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>Json::Value<sp/>edge(Json::arrayValue);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>edge.append(in);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>edge.append(out);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classhyrise_1_1access_1_1_radix_join_transformation_1af436b63d1403a5baa3588d587cbafa89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1af436b63d1403a5baa3588d587cbafa89" kindref="member">RadixJoinTransformation::removeOperator</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value<sp/>&amp;operatorId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>Json::Value<sp/>remainingEdges(Json::arrayValue);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>Json::Value<sp/>jsonOperatorId(operatorId);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>currentEdge<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">][i];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[0u]<sp/>!=<sp/>jsonOperatorId</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><sp/>currentEdge[1u]<sp/>!=<sp/>jsonOperatorId)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remainingEdges.append(currentEdge);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">]<sp/>=<sp/>remainingEdges;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">].removeMember(operatorId.asString());</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classhyrise_1_1access_1_1_radix_join_transformation_1abe64f43186e1b3406dc04a89e0b432ee" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1abe64f43186e1b3406dc04a89e0b432ee" kindref="member">RadixJoinTransformation::getInputIds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value<sp/>&amp;query){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>Json::Value<sp/>currentEdge;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentEdge<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">][i];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[1u]<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(currentEdge[0u].asString());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputs;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classhyrise_1_1access_1_1_radix_join_transformation_1aa141fe56d494993ce1688bfef6be45e0" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1aa141fe56d494993ce1688bfef6be45e0" kindref="member">RadixJoinTransformation::getOutputIds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>Json::Value<sp/>&amp;query){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>outputs;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>Json::Value<sp/>currentEdge;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentEdge<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">][i];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[0u]<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.push_back(currentEdge[1u].asString());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputs;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classhyrise_1_1access_1_1_radix_join_transformation_1a77c6a6ffcf754ce0e7279fc2e1f49c0d" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a77c6a6ffcf754ce0e7279fc2e1f49c0d" kindref="member">RadixJoinTransformation::build_probe_side</ref>(std::string<sp/>prefix,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;fields,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>probe_par,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;<sp/>bits1,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;<sp/>bits2,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>in_id){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/>probe_side;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Json::Value<sp/>histogram_p1,<sp/>prefixsum_p1,<sp/>createradixtable_p1,<sp/>radixcluster_p1,<sp/>merge_prefix_sum,<sp/>barrier;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Histogram&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>prefixsum_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrefixSum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>createradixtable_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CreateRadixTable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RadixCluster&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>merge_prefix_sum[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MergePrefixSum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>barrier[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Barrier&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>barrier[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>define<sp/>the<sp/>plan<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>parallel<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probe_par;<sp/>i++){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>h<sp/>=<sp/>Json::Value(histogram_p1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>h[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>h[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>probe_par;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>p<sp/>=<sp/>Json::Value(prefixsum_p1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>p[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>p[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>probe_par;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>r<sp/>=<sp/>Json::Value(radixcluster_p1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>r[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>r[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>probe_par;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>h));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>p));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>r));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>seriable<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">,<sp/>createradixtable_p1));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_merge_prefixsum&quot;</highlight><highlight class="normal">,<sp/>merge_prefix_sum));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_barrier&quot;</highlight><highlight class="normal">,<sp/>barrier));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>define<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>an<sp/>edge<sp/>from<sp/>input<sp/>to<sp/>create<sp/>cluster<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probe_par;<sp/>i++){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>input<sp/>goes<sp/>to<sp/>all<sp/>histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//All<sp/>equal<sp/>histograms<sp/>go<sp/>to<sp/>all<sp/>prefix<sp/>sums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>probe_par;<sp/>j++){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(j)));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>from<sp/>each<sp/>input<sp/>there<sp/>is<sp/>a<sp/>link<sp/>to<sp/>radix<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>create<sp/>radix<sp/>table<sp/>to<sp/>radix<sp/>cluster<sp/>for<sp/>the<sp/>second<sp/>pass<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>each<sp/>prefix<sp/>sum<sp/>there<sp/>is<sp/>a<sp/>link<sp/>to<sp/>radix<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Merge<sp/>all<sp/>prefix<sp/>sums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_merge_prefixsum&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_barrier&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>probe_side;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classhyrise_1_1access_1_1_radix_join_transformation_1ac3e3f4553bc81dbcc6b66d64dbf160d6" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1ac3e3f4553bc81dbcc6b66d64dbf160d6" kindref="member">RadixJoinTransformation::build_hash_side</ref>(std::string<sp/>prefix,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;fields,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_par,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;<sp/>bits1,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;<sp/>bits2,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>in_id){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/>hash_side;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>Json::Value<sp/>histogram_p1,<sp/>prefixsum_p1,<sp/>createradixtable_p1,<sp/>radixcluster_p1,<sp/>histogram_p2,<sp/>prefixsum_p2,<sp/>createradixtable_p2,<sp/>radixcluster_p2,<sp/>merge_prefix_sum,<sp/>barrier;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Histogram&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>histogram_p1[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>prefixsum_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrefixSum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>createradixtable_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CreateRadixTable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RadixCluster&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>radixcluster_p1[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>histogram_p2[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Histogram2ndPass&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>histogram_p2[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>histogram_p2[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits2;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>histogram_p2[</highlight><highlight class="stringliteral">&quot;sig2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>prefixsum_p2[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrefixSum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>createradixtable_p2[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CreateRadixTable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>radixcluster_p2[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;RadixCluster2ndPass&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>radixcluster_p2[</highlight><highlight class="stringliteral">&quot;bits&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>radixcluster_p2[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits2;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>radixcluster_p2[</highlight><highlight class="stringliteral">&quot;sig2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>bits1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>merge_prefix_sum[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MergePrefixSum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>barrier[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Barrier&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>barrier[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fields;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>parallel<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hash_par;<sp/>i++){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>h<sp/>=<sp/>Json::Value(histogram_p1);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>h[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>h[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>p<sp/>=<sp/>Json::Value(prefixsum_p1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>p[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>p[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>r<sp/>=<sp/>Json::Value(radixcluster_p1);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>r[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>r[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>h2<sp/>=<sp/>Json::Value(histogram_p2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>h2[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>h2[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>p2<sp/>=<sp/>Json::Value(prefixsum_p2);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>p2[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>p2[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>r2<sp/>=<sp/>Json::Value(radixcluster_p2);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>r2[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>r2[</highlight><highlight class="stringliteral">&quot;numParts&quot;</highlight><highlight class="normal">]<sp/>=<sp/>hash_par;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>h));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>p));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>r));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>h2));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>p2));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>r2));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>seriable<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">,<sp/>createradixtable_p1));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p2&quot;</highlight><highlight class="normal">,<sp/>createradixtable_p2));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_merge_prefixsum&quot;</highlight><highlight class="normal">,<sp/>merge_prefix_sum));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.push_back(std::pair&lt;std::string,<sp/>Json::Value&gt;(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_barrier&quot;</highlight><highlight class="normal">,<sp/>barrier));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>define<sp/>the<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>an<sp/>edge<sp/>from<sp/>input<sp/>to<sp/>create<sp/>cluster<sp/>table<sp/>and<sp/>for<sp/>the<sp/>second<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hash_par;<sp/>i++){</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>input<sp/>goes<sp/>to<sp/>all<sp/>histograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//All<sp/>equal<sp/>histograms<sp/>go<sp/>to<sp/>all<sp/>prefix<sp/>sums</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>hash_par;<sp/>j++){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(j)));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>from<sp/>each<sp/>input<sp/>there<sp/>is<sp/>a<sp/>link<sp/>to<sp/>radix<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(in_id,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>create<sp/>radix<sp/>table<sp/>to<sp/>radix<sp/>cluster<sp/>for<sp/>the<sp/>second<sp/>pass<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p1&quot;</highlight><highlight class="normal">,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>each<sp/>prefix<sp/>sum<sp/>there<sp/>is<sp/>a<sp/>link<sp/>to<sp/>radix<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>comes<sp/>the<sp/>second<sp/>pass<sp/>which<sp/>is<sp/>like<sp/>the<sp/>first<sp/>only<sp/>a<sp/>litte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>complicated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>hash_par;<sp/>j++){</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>need<sp/>an<sp/>explicit<sp/>barrier<sp/>here<sp/>to<sp/>avoid<sp/>that<sp/>a<sp/>histogram<sp/>is<sp/>calculated<sp/>before<sp/>all<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//first<sp/>pass<sp/>radix<sp/>clusters<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(j)));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_histogram_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(j),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>builds<sp/>up<sp/>the<sp/>second<sp/>pass<sp/>radix<sp/>cluster,<sp/>attention<sp/>order<sp/>matters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p1_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_createradixtable_p2&quot;</highlight><highlight class="normal">,<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i)));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_prefixsum_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_merge_prefixsum&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.push_back(<ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a7e3d3e6c51df360f08cc1f3b96f87414" kindref="member">createEdge</ref>(prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_radixcluster_p2_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i),<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_barrier&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash_side;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classhyrise_1_1access_1_1_radix_join_transformation_1a15ac0fcdf0897a61086539bf2f5e9cf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a15ac0fcdf0897a61086539bf2f5e9cf9" kindref="member">RadixJoinTransformation::distributePartitions</ref>(</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partitions,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>join_count,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_join,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;first,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;last)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>partitionsPerJoin<sp/><sp/><sp/><sp/><sp/>=<sp/>partitions<sp/>/<sp/>join_count,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>remainingElements<sp/><sp/><sp/>=<sp/>partitions<sp/>-<sp/>partitionsPerJoin<sp/>*<sp/>join_count,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>extraElements<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>current_join<sp/>&lt;=<sp/>remainingElements<sp/>?<sp/>current_join<sp/>:<sp/>remainingElements,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>partsExtraElement<sp/><sp/><sp/>=<sp/>current_join<sp/>&lt;<sp/>remainingElements<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>first<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>partitionsPerJoin<sp/>*<sp/>current_join<sp/>+<sp/>extraElements;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>last<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>first<sp/>+<sp/>partitionsPerJoin<sp/>+<sp/>partsExtraElement<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classhyrise_1_1access_1_1_radix_join_transformation_1a60842d5ef9079f66731548c98d856d92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a60842d5ef9079f66731548c98d856d92" kindref="member">RadixJoinTransformation::transform</ref>(Json::Value<sp/>&amp;op,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,<sp/>Json::Value<sp/>&amp;query){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>probe_par<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;probe_par&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_par<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;hash_par&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>join_par<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;join_par&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>Json::Value<sp/>bits1<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits1&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>Json::Value<sp/>bits2<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>Json::Value<sp/>fields<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;fields&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>Json::Value<sp/>probe_field,<sp/>hash_field;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>probe_field.append(fields[0]);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>hash_field.append(fields[1]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>input_edges<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1abe64f43186e1b3406dc04a89e0b432ee" kindref="member">getInputIds</ref>(operatorId,<sp/>query);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>output_edges<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1aa141fe56d494993ce1688bfef6be45e0" kindref="member">getOutputIds</ref>(operatorId,<sp/>query);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>op<sp/>and<sp/>all<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1af436b63d1403a5baa3588d587cbafa89" kindref="member">removeOperator</ref>(query,<sp/>operatorId);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>ops<sp/>and<sp/>edges<sp/>for<sp/>probe<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/>probe_side<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a77c6a6ffcf754ce0e7279fc2e1f49c0d" kindref="member">build_probe_side</ref>(operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_probe&quot;</highlight><highlight class="normal">,<sp/>probe_field,<sp/>probe_par,<sp/>bits1,<sp/>bits2,<sp/>input_edges[0]);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>ops<sp/>from<sp/>probe<sp/>side<sp/>to<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(i).first]<sp/>=<sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(i).second;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>edges<sp/>from<sp/>probe<sp/>side<sp/>to<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].append(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.at(i));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>ops<sp/>and<sp/>edges<sp/>for<sp/>hash<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1ops__and__edges" kindref="compound">ops_and_edges_t</ref><sp/>hash_side<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1ac3e3f4553bc81dbcc6b66d64dbf160d6" kindref="member">build_hash_side</ref>(operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_hash&quot;</highlight><highlight class="normal">,<sp/>hash_field,<sp/>hash_par,<sp/>bits1,<sp/>bits2,<sp/>input_edges[1]);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>ops<sp/>from<sp/>hash<sp/>side<sp/>to<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(i).first]<sp/>=<sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(i).second;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>edges<sp/>from<sp/>hash<sp/>side<sp/>to<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].append(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a9176b4d1a77a8c66a02b98906aad9a47" kindref="member">edges</ref>.at(i));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>as<sp/>many<sp/>partitions<sp/>as<sp/>we<sp/>bits<sp/>in<sp/>the<sp/>first<sp/>pass<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partitions<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>bits1.asInt();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>join<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>0,<sp/>last<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>std::string<sp/>join_name;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>indexes<sp/>into<sp/>hash_ops<sp/>and<sp/>probe_ops<sp/>to<sp/>connect<sp/>edges<sp/>to<sp/>join<sp/>ops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>probe_barrier<sp/>=<sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>probe_prefix<sp/>=<sp/>probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_barrier<sp/>=<sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash_prefix<sp/>=<sp/>hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>1:<sp/>no<sp/>parallel<sp/>join<sp/>-&gt;<sp/>we<sp/>do<sp/>not<sp/>need<sp/>a<sp/>union<sp/>and<sp/>have<sp/>to<sp/>connect<sp/>the<sp/>output<sp/>edges<sp/>to<sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(join_par<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>join_name<sp/>=<sp/>operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_join&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>join(Json::objectValue);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NestedLoopEquiJoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;bits1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits1&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>parts;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>partitions;<sp/>i++){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.append(i);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;partitions&quot;</highlight><highlight class="normal">]<sp/>=<sp/>parts;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][join_name]<sp/>=<sp/>join;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output_edges.size();<sp/>i++)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(join_name,<sp/>output_edges[i],<sp/>query);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>input<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(input_edges[0],<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()-1).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>merge<sp/>prefix<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()-2).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>input<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(input_edges[1],<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()-1).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>merge<sp/>prefix<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.size()-2).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>2:<sp/>parallel<sp/>join<sp/>-&gt;<sp/>we<sp/>do<sp/>need<sp/>a<sp/>union<sp/>and<sp/>have<sp/>to<sp/>connect<sp/>the<sp/>output<sp/>edges<sp/>to<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>unionOperator(Json::objectValue);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>unionOperator[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UnionAll&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unionId<sp/>=<sp/>operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_union&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][unionId]<sp/>=<sp/>unionOperator;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>output<sp/>edges<sp/>for<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output_edges.size();<sp/>i++)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(unionId,<sp/>output_edges[i],<sp/>query);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>partitions<sp/>that<sp/>need<sp/>to<sp/>be<sp/>worked<sp/>by<sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>join_par<sp/>&gt;<sp/>partitions,<sp/>set<sp/>join_par<sp/>to<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(join_par<sp/>&gt;<sp/>partitions)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join_par<sp/>=<sp/>partitions;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>join_par;<sp/><sp/>i++){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join_name<sp/>=<sp/>operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_join_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(i);</highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>(partitions<sp/>/<sp/>join_par)<sp/>*<sp/>i;</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(i<sp/>+<sp/>1<sp/>&lt;<sp/>join_par)</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>((partitions<sp/>/<sp/>join_par)<sp/>*<sp/>(i<sp/>+<sp/>1))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>partitions<sp/>-<sp/>1;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a15ac0fcdf0897a61086539bf2f5e9cf9" kindref="member">distributePartitions</ref>(partitions,<sp/>join_par,<sp/>i,<sp/>first,<sp/>last);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>join(Json::objectValue);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NestedLoopEquiJoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;bits1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits1&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">]<sp/>=<sp/>op[</highlight><highlight class="stringliteral">&quot;bits2&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>partitions;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>first;<sp/>i<sp/>&lt;=<sp/>last;<sp/>i++){</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitions.append(i);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>join[</highlight><highlight class="stringliteral">&quot;partitions&quot;</highlight><highlight class="normal">]<sp/>=<sp/>partitions;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][join_name]<sp/>=<sp/>join;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unionId<sp/>=<sp/>operatorId<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_union&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>input<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(input_edges[0],<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(probe_barrier).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>merge<sp/>prefix<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(probe_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(probe_prefix).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>input<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(input_edges[1],<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(hash_barrier).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hash<sp/>merge<sp/>prefix<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(hash_side.<ref refid="structhyrise_1_1access_1_1ops__and__edges_1a1ca163de58a4613755a968d2137d1e1c" kindref="member">ops</ref>.at(hash_prefix).first,<sp/>join_name,<sp/>query);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_radix_join_transformation_1a96af34ded202dd50a0a6bf93244917e2" kindref="member">appendEdge</ref>(join_name,<sp/>unionId,<sp/>query);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/access/radixjoin/RadixJoinTransformation.cpp"/>
  </compounddef>
</doxygen>
