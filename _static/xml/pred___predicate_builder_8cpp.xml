<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="pred___predicate_builder_8cpp" kind="file">
    <compoundname>pred_PredicateBuilder.cpp</compoundname>
    <includes refid="pred___predicate_builder_8h" local="yes">pred_PredicateBuilder.h</includes>
    <incdepgraph>
      <node id="3665">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="3666" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
      </node>
      <node id="3655">
        <label>atomic</label>
      </node>
      <node id="3659">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3647">
        <label>limits</label>
      </node>
      <node id="3674">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3672" relation="include">
        </childnode>
      </node>
      <node id="3653">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="3654" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
      </node>
      <node id="3666">
        <label>assert.h</label>
      </node>
      <node id="3675">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3676" relation="include">
        </childnode>
      </node>
      <node id="3668">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3663">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="3645">
        <label>cstdint</label>
      </node>
      <node id="3664">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
      <node id="3650">
        <label>stdint.h</label>
      </node>
      <node id="3642">
        <label>stdexcept</label>
      </node>
      <node id="3637">
        <label>src/lib/access/expressions/pred_PredicateBuilder.cpp</label>
        <link refid="pred_PredicateBuilder.cpp"/>
        <childnode refid="3638" relation="include">
        </childnode>
      </node>
      <node id="3656">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3657" relation="include">
        </childnode>
      </node>
      <node id="3646">
        <label>string</label>
      </node>
      <node id="3670">
        <label>map</label>
      </node>
      <node id="3669">
        <label>exception</label>
      </node>
      <node id="3651">
        <label>ostream</label>
      </node>
      <node id="3673">
        <label>json.h</label>
      </node>
      <node id="3671">
        <label>limits.h</label>
      </node>
      <node id="3640">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3672" relation="include">
        </childnode>
        <childnode refid="3674" relation="include">
        </childnode>
        <childnode refid="3675" relation="include">
        </childnode>
        <childnode refid="3677" relation="include">
        </childnode>
      </node>
      <node id="3649">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
      </node>
      <node id="3661">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
      </node>
      <node id="3662">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="3641">
        <label>vector</label>
      </node>
      <node id="3639">
        <label>stack</label>
      </node>
      <node id="3638">
        <label>pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
      </node>
      <node id="3678">
        <label>pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="3640" relation="include">
        </childnode>
      </node>
      <node id="3657">
        <label>array</label>
      </node>
      <node id="3677">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
      </node>
      <node id="3667">
        <label>iostream</label>
      </node>
      <node id="3672">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3673" relation="include">
        </childnode>
      </node>
      <node id="3658">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="3660">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
      </node>
      <node id="3652">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
      </node>
      <node id="3654">
        <label>thread</label>
      </node>
      <node id="3644">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
      </node>
      <node id="3676">
        <label>access/expressions/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
      </node>
      <node id="3643">
        <label>stdio.h</label>
      </node>
      <node id="3648">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred___predicate_builder_8h" kindref="compound">pred_PredicateBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_predicate_builder_1ab28f367d90f0edb3e624d3f980061112" refkind="member"><highlight class="normal"><ref refid="class_predicate_builder_1ab28f367d90f0edb3e624d3f980061112" kindref="member">PredicateBuilder::PredicateBuilder</ref>():<sp/><ref refid="namespaceut_1aa1bc633f5abd3833ba737260860f0594" kindref="member">root</ref>(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_predicate_builder_1a8642e80d6945743fb76b635ee7742caf" refkind="member"><highlight class="normal"><ref refid="class_predicate_builder_1a8642e80d6945743fb76b635ee7742caf" kindref="member">PredicateBuilder::~PredicateBuilder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" kindref="member">PredicateBuilder::add</ref>(<ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;add(e);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;isSetup())<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.pop();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_predicate_builder_1a90372f7acd76bef19b5a9ae6c7d38c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" kindref="member">PredicateBuilder::add</ref>(<ref refid="class_compound_expression" kindref="compound">CompoundExpression</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;add(e);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.push(e);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_predicate_builder_1a79a44caefa8c4c6abaa717dfe29126dc" refkind="member"><highlight class="normal"><ref refid="class_simple_expression" kindref="compound">SimpleExpression</ref><sp/>*<ref refid="class_predicate_builder_1a79a44caefa8c4c6abaa717dfe29126dc" kindref="member">PredicateBuilder::build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_PredicateBuilder.cpp"/>
  </compounddef>
</doxygen>
