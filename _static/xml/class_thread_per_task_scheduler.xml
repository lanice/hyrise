<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_thread_per_task_scheduler" kind="class" prot="public">
    <compoundname>ThreadPerTaskScheduler</compoundname>
    <basecompoundref refid="class_abstract_task_scheduler" prot="public" virt="non-virtual">AbstractTaskScheduler</basecompoundref>
    <basecompoundref refid="class_task_ready_observer" prot="public" virt="non-virtual">TaskReadyObserver</basecompoundref>
    <includes refid="_thread_per_task_scheduler_8h" local="no">ThreadPerTaskScheduler.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_thread_per_task_scheduler_1aad6caecfc9d077b0311c76e44813b630" prot="private" static="no">
        <type>std::unordered_set&lt; std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt; &gt;</type>
        <definition>typedef std::unordered_set&lt;std::shared_ptr&lt;Task&gt; &gt; ThreadPerTaskScheduler::waiting_tasks_t</definition>
        <argsstring></argsstring>
        <name>waiting_tasks_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="31" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_thread_per_task_scheduler_1a44f506c63e605616c35d232b92cdf735" prot="private" static="no" mutable="no">
        <type><ref refid="class_thread_per_task_scheduler_1aad6caecfc9d077b0311c76e44813b630" kindref="member">waiting_tasks_t</ref></type>
        <definition>waiting_tasks_t ThreadPerTaskScheduler::_waitSet</definition>
        <argsstring></argsstring>
        <name>_waitSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="33" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_thread_per_task_scheduler_1af8ff10c404e9064f38337a296a364152" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex ThreadPerTaskScheduler::_setMutex</definition>
        <argsstring></argsstring>
        <name>_setMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="35" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_thread_per_task_scheduler_1a92ea15f894a365f361943be225b4f557" prot="private" static="no" mutable="no">
        <type><ref refid="class_abstract_task_scheduler_1a8d6f6a94cb6592ae0113336467cee05f" kindref="member">scheduler_status_t</ref></type>
        <definition>scheduler_status_t ThreadPerTaskScheduler::_status</definition>
        <argsstring></argsstring>
        <name>_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="37" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_thread_per_task_scheduler_1a56510fa8c1fc40f55d2f40d38c963b4e" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex ThreadPerTaskScheduler::_statusMutex</definition>
        <argsstring></argsstring>
        <name>_statusMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="39" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_thread_per_task_scheduler_1a318614a9f40cfb544507115970cca7df" prot="private" static="yes" mutable="no">
        <type>log4cxx::LoggerPtr</type>
        <definition>log4cxx::LoggerPtr ThreadPerTaskScheduler::_logger</definition>
        <argsstring></argsstring>
        <name>_logger</name>
        <initializer>= log4cxx::Logger::getLogger(&quot;taskscheduler.ThreadPerTaskScheduler&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="41" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_thread_per_task_scheduler_1ab02040ac6063818284d59b7501666d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ThreadPerTaskScheduler::ThreadPerTaskScheduler</definition>
        <argsstring>()</argsstring>
        <name>ThreadPerTaskScheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="43" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1a91194a7f55c6707a14d65b7892989164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ThreadPerTaskScheduler::ThreadPerTaskScheduler</definition>
        <argsstring>(int i)</argsstring>
        <name>ThreadPerTaskScheduler</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="44" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1a890acdd03eb6961106969bb84aa7676f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ThreadPerTaskScheduler::~ThreadPerTaskScheduler</definition>
        <argsstring>()</argsstring>
        <name>~ThreadPerTaskScheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="45" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1a3f4d8059aa5d1ed2f544616ea32d60f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ThreadPerTaskScheduler::schedule</definition>
        <argsstring>(std::shared_ptr&lt; Task &gt; task)</argsstring>
        <name>schedule</name>
        <reimplements refid="class_abstract_task_scheduler_1a5302dc48bb09b4ec0caddf22101cfadf">schedule</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="49" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="33" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1ac4b075112110a106af152c1029bd56e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ThreadPerTaskScheduler::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <reimplements refid="class_abstract_task_scheduler_1a2be53dd1c0676d50f2fd4cc97bce4406">shutdown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="53" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1a5ecf42eed627cf97a0377487cd02f6db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t ThreadPerTaskScheduler::getNumberOfWorker</definition>
        <argsstring>() const </argsstring>
        <name>getNumberOfWorker</name>
        <reimplements refid="class_abstract_task_scheduler_1ab444b0fed6674af950078b6a06ab2487">getNumberOfWorker</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get number of worker </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="58" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_thread_per_task_scheduler_1a556a0ae2cf51269358cda74b5bb94f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ThreadPerTaskScheduler::notifyReady</definition>
        <argsstring>(std::shared_ptr&lt; Task &gt; task)</argsstring>
        <name>notifyReady</name>
        <reimplements refid="class_task_ready_observer_1a8085f01f504ee10a83e95b5af3838980">notifyReady</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="62" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.cpp" bodystart="63" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3847">
        <label>AbstractTaskScheduler</label>
        <link refid="class_abstract_task_scheduler"/>
      </node>
      <node id="3846">
        <label>ThreadPerTaskScheduler</label>
        <link refid="class_thread_per_task_scheduler"/>
        <childnode refid="3847" relation="public-inheritance">
        </childnode>
        <childnode refid="3848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3848">
        <label>TaskReadyObserver</label>
        <link refid="class_task_ready_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3850">
        <label>AbstractTaskScheduler</label>
        <link refid="class_abstract_task_scheduler"/>
      </node>
      <node id="3849">
        <label>ThreadPerTaskScheduler</label>
        <link refid="class_thread_per_task_scheduler"/>
        <childnode refid="3850" relation="public-inheritance">
        </childnode>
        <childnode refid="3851" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3851">
        <label>TaskReadyObserver</label>
        <link refid="class_task_ready_observer"/>
      </node>
    </collaborationgraph>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" line="30" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/ThreadPerTaskScheduler.h" bodystart="30" bodyend="63"/>
    <listofallmembers>
      <member refid="class_thread_per_task_scheduler_1a318614a9f40cfb544507115970cca7df" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>_logger</name></member>
      <member refid="class_thread_per_task_scheduler_1af8ff10c404e9064f38337a296a364152" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>_setMutex</name></member>
      <member refid="class_thread_per_task_scheduler_1a92ea15f894a365f361943be225b4f557" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>_status</name></member>
      <member refid="class_thread_per_task_scheduler_1a56510fa8c1fc40f55d2f40d38c963b4e" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>_statusMutex</name></member>
      <member refid="class_thread_per_task_scheduler_1a44f506c63e605616c35d232b92cdf735" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>_waitSet</name></member>
      <member refid="class_thread_per_task_scheduler_1a5ecf42eed627cf97a0377487cd02f6db" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>getNumberOfWorker</name></member>
      <member refid="class_thread_per_task_scheduler_1a556a0ae2cf51269358cda74b5bb94f03" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>notifyReady</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cead388263b6602dd95e1103f91c31d1ca0" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>RESIZING</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575ceaea3b5199c163f0f07b405316ab54a8f1" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>RUN</name></member>
      <member refid="class_thread_per_task_scheduler_1a3f4d8059aa5d1ed2f544616ea32d60f8" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>schedule</name></member>
      <member refid="class_abstract_task_scheduler_1a008b53e58434001807b129d68dad7c6a" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>scheduleQuery</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575ce" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>scheduler_state</name></member>
      <member refid="class_abstract_task_scheduler_1a8d6f6a94cb6592ae0113336467cee05f" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>scheduler_status_t</name></member>
      <member refid="class_thread_per_task_scheduler_1ac4b075112110a106af152c1029bd56e3" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>shutdown</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575ceab354aeccc361021b0cd6f83128272195" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>START_UP</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cea5f5af486bf8b0c99d4906d1bf159ff43" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>STOPPED</name></member>
      <member refid="class_thread_per_task_scheduler_1ab02040ac6063818284d59b7501666d47" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>ThreadPerTaskScheduler</name></member>
      <member refid="class_thread_per_task_scheduler_1a91194a7f55c6707a14d65b7892989164" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>ThreadPerTaskScheduler</name></member>
      <member refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cea4f8b67680c71fec19412d8ab89ac503a" prot="public" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>TO_STOP</name></member>
      <member refid="class_thread_per_task_scheduler_1aad6caecfc9d077b0311c76e44813b630" prot="private" virt="non-virtual"><scope>ThreadPerTaskScheduler</scope><name>waiting_tasks_t</name></member>
      <member refid="class_abstract_task_scheduler_1a3fccfec8db07f7306dd0d3efae36283e" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>~AbstractTaskScheduler</name></member>
      <member refid="class_task_ready_observer_1afbeb3e41e0e022c9d11edcc1916ab577" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>~TaskReadyObserver</name></member>
      <member refid="class_thread_per_task_scheduler_1a890acdd03eb6961106969bb84aa7676f" prot="public" virt="virtual"><scope>ThreadPerTaskScheduler</scope><name>~ThreadPerTaskScheduler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
