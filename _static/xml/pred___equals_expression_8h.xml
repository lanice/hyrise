<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="pred___equals_expression_8h" kind="file">
    <compoundname>pred_EqualsExpression.h</compoundname>
    <includes refid="types_8h" local="yes">helper/types.h</includes>
    <includes refid="pred__common_8h" local="yes">pred_common.h</includes>
    <includes refid="_raw_table_8h" local="no">storage/RawTable.h</includes>
    <includedby refid="scan__performance_8cpp" local="yes">src/bin/perf_regression/scan_performance.cpp</includedby>
    <includedby refid="predicates_8h" local="yes">src/lib/access/expressions/predicates.h</includedby>
    <incdepgraph>
      <node id="3417">
        <label>atomic</label>
      </node>
      <node id="3434">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3435" relation="include">
        </childnode>
      </node>
      <node id="3405">
        <label>limits</label>
      </node>
      <node id="3424">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="3421">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3428">
        <label>assert.h</label>
      </node>
      <node id="3425">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="3403">
        <label>cstdint</label>
      </node>
      <node id="3423">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3425" relation="include">
        </childnode>
      </node>
      <node id="3412">
        <label>stdint.h</label>
      </node>
      <node id="3430">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3433" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
      </node>
      <node id="3436">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
      </node>
      <node id="3409">
        <label>stdexcept</label>
      </node>
      <node id="3408">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
        <childnode refid="3436" relation="include">
        </childnode>
        <childnode refid="3437" relation="include">
        </childnode>
        <childnode refid="3439" relation="include">
        </childnode>
      </node>
      <node id="3404">
        <label>string</label>
      </node>
      <node id="3432">
        <label>map</label>
      </node>
      <node id="3427">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="3428" relation="include">
        </childnode>
        <childnode refid="3429" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3401">
        <label>src/lib/access/expressions/pred_EqualsExpression.h</label>
        <link refid="pred_EqualsExpression.h"/>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3440" relation="include">
        </childnode>
      </node>
      <node id="3415">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="3416" relation="include">
        </childnode>
        <childnode refid="3417" relation="include">
        </childnode>
      </node>
      <node id="3431">
        <label>exception</label>
      </node>
      <node id="3413">
        <label>ostream</label>
      </node>
      <node id="3435">
        <label>json.h</label>
      </node>
      <node id="3433">
        <label>limits.h</label>
      </node>
      <node id="3411">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
        <childnode refid="3413" relation="include">
        </childnode>
      </node>
      <node id="3407">
        <label>vector</label>
      </node>
      <node id="3418">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="3403" relation="include">
        </childnode>
        <childnode refid="3419" relation="include">
        </childnode>
      </node>
      <node id="3419">
        <label>array</label>
      </node>
      <node id="3426">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="3427" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
      </node>
      <node id="3422">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3429">
        <label>iostream</label>
      </node>
      <node id="3420">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="3442">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
      </node>
      <node id="3416">
        <label>thread</label>
      </node>
      <node id="3438">
        <label>access/expressions/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
      </node>
      <node id="3437">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3438" relation="include">
        </childnode>
      </node>
      <node id="3402">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3403" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
      </node>
      <node id="3414">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3418" relation="include">
        </childnode>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3410">
        <label>stdio.h</label>
      </node>
      <node id="3441">
        <label>cstring</label>
      </node>
      <node id="3440">
        <label>storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="3441" relation="include">
        </childnode>
        <childnode refid="3403" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
        <childnode refid="3442" relation="include">
        </childnode>
      </node>
      <node id="3439">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
      </node>
      <node id="3406">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3455">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="3457">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="3446">
        <label>src/lib/access/expressions/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="3448">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="3449" relation="include">
        </childnode>
        <childnode refid="3450" relation="include">
        </childnode>
      </node>
      <node id="3456">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="3459">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="3450" relation="include">
        </childnode>
      </node>
      <node id="3445">
        <label>src/lib/access/expressions/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="3446" relation="include">
        </childnode>
        <childnode refid="3447" relation="include">
        </childnode>
        <childnode refid="3448" relation="include">
        </childnode>
        <childnode refid="3459" relation="include">
        </childnode>
        <childnode refid="3450" relation="include">
        </childnode>
      </node>
      <node id="3451">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="3447">
        <label>src/lib/access/expressions/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="3445" relation="include">
        </childnode>
        <childnode refid="3446" relation="include">
        </childnode>
      </node>
      <node id="3443">
        <label>src/lib/access/expressions/pred_EqualsExpression.h</label>
        <link refid="pred_EqualsExpression.h"/>
        <childnode refid="3444" relation="include">
        </childnode>
        <childnode refid="3445" relation="include">
        </childnode>
      </node>
      <node id="3444">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="3458">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="3449">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="3454">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="3450">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="3451" relation="include">
        </childnode>
        <childnode refid="3452" relation="include">
        </childnode>
        <childnode refid="3453" relation="include">
        </childnode>
        <childnode refid="3454" relation="include">
        </childnode>
        <childnode refid="3455" relation="include">
        </childnode>
        <childnode refid="3456" relation="include">
        </childnode>
        <childnode refid="3457" relation="include">
        </childnode>
        <childnode refid="3458" relation="include">
        </childnode>
      </node>
      <node id="3452">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="3453">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_equals_expression" prot="public">EqualsExpression</innerclass>
    <innerclass refid="class_equals_expression_raw" prot="public">EqualsExpressionRaw</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_EQUALSEXPRESSION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_EQUALSEXPRESSION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred__common_8h" kindref="compound">pred_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Required<sp/>for<sp/>Raw<sp/>Table<sp/>Scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_raw_table_8h" kindref="compound">storage/RawTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="13" refid="class_equals_expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_equals_expression" kindref="compound">EqualsExpression</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_equals_expression_1ac7bf3a82a5e00079a92a293459d8de95" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_equals_expression_1ac7bf3a82a5e00079a92a293459d8de95" kindref="member">lower_bound</ref>;</highlight></codeline>
<codeline lineno="16" refid="class_equals_expression_1a788a0204fd8c22e93f08d95b90220929" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;BaseDictionary&lt;T&gt;&gt;<sp/><ref refid="class_equals_expression_1a788a0204fd8c22e93f08d95b90220929" kindref="member">valueIdMap</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_equals_expression_1a48c98d4721c71487c375c056d71250fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_1a48c98d4721c71487c375c056d71250fb" kindref="member">value_exists</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_equals_expression_1a38186a5fd067bc68300e827e9ddd27f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_1a38186a5fd067bc68300e827e9ddd27f7" kindref="member">EqualsExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_equals_expression_1a094a69305516613735bc3217eeaa8d1f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_1a38186a5fd067bc68300e827e9ddd27f7" kindref="member">EqualsExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_equals_expression_1a005a0dd2cecb943ba34f30b5d220c256" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_1a38186a5fd067bc68300e827e9ddd27f7" kindref="member">EqualsExpression</ref>(<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>_table,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value)<sp/>:<sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_table,<sp/>_field),<sp/><ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_equals_expression_1a9c70374044137e9f4b9756ec3c14052b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_1a9c70374044137e9f4b9756ec3c14052b" kindref="member">walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;l)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression_1a2b9be48219459a784de03b6298b56966" kindref="member">SimpleFieldExpression::walk</ref>(l);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_equals_expression_1a788a0204fd8c22e93f08d95b90220929" kindref="member">valueIdMap</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;dictionaryAt(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_equals_expression_1a48c98d4721c71487c375c056d71250fb" kindref="member">value_exists</ref><sp/>=<sp/><ref refid="class_equals_expression_1a788a0204fd8c22e93f08d95b90220929" kindref="member">valueIdMap</ref>-&gt;valueExists(<ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_exists)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_equals_expression_1ac7bf3a82a5e00079a92a293459d8de95" kindref="member">lower_bound</ref><sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueIdForValue(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_equals_expression_1a7427007c661564edef6c504dd9d1cdc0" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_equals_expression_1a5a2a0b5213e78532da7eeeb03f800822" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_1a5a2a0b5213e78532da7eeeb03f800822" kindref="member">~EqualsExpression</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_equals_expression_1a725c4448ce2207ddb3b23b2758275b4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_1a725c4448ce2207ddb3b23b2758275b4d" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_1a48c98d4721c71487c375c056d71250fb" kindref="member">value_exists</ref><sp/>&amp;&amp;<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row)<sp/>==<sp/><ref refid="class_equals_expression_1ac7bf3a82a5e00079a92a293459d8de95" kindref="member">lower_bound</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="59" refid="class_equals_expression_raw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_equals_expression_raw" kindref="compound">EqualsExpressionRaw</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_equals_expression_raw_1a35f4a0b7dfc813303799b8fe5688e15d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_raw_1a35f4a0b7dfc813303799b8fe5688e15d" kindref="member">EqualsExpressionRaw</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_equals_expression_raw_1a7ee2583db91426a65fd9c9a38d36f898" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_raw_1a35f4a0b7dfc813303799b8fe5688e15d" kindref="member">EqualsExpressionRaw</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_equals_expression_raw_1a820a750a68dfadf312e28ed11cec8571" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_equals_expression_raw_1a35f4a0b7dfc813303799b8fe5688e15d" kindref="member">EqualsExpressionRaw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>_table,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value)<sp/>:<sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_table,<sp/>_field),<sp/><ref refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_equals_expression_raw_1a8db781412ad0fdc41b00f6b43c5b6af9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_raw_1a8db781412ad0fdc41b00f6b43c5b6af9" kindref="member">~EqualsExpressionRaw</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_equals_expression_raw_1a6370cbdc46ba91ff0bc368d43f88b777" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_equals_expression_raw_1a6370cbdc46ba91ff0bc368d43f88b777" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::dynamic_pointer_cast&lt;const<sp/>RawTable&gt;(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>))-&gt;template<sp/>getValue&lt;T&gt;(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row)<sp/>==<sp/><ref refid="class_equals_expression_raw_1a5efa32ce8344b64dccfce106747bbaf9" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_EQUALSEXPRESSION_H_</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/access/expressions/pred_EqualsExpression.h"/>
  </compounddef>
</doxygen>
