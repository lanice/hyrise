<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="hash__functor_8h" kind="file">
    <compoundname>hash_functor.h</compoundname>
    <includes local="no">functional</includes>
    <includes refid="storage__types_8h" local="yes">storage/storage_types.h</includes>
    <includes refid="_abstract_table_8h" local="yes">storage/AbstractTable.h</includes>
    <includedby refid="_group_value_8cpp" local="yes">src/lib/storage/GroupValue.cpp</includedby>
    <includedby refid="_hash_table_8cpp" local="yes">src/lib/storage/HashTable.cpp</includedby>
    <incdepgraph>
      <node id="15874">
        <label>atomic</label>
      </node>
      <node id="15878">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
      </node>
      <node id="15860">
        <label>functional</label>
      </node>
      <node id="15868">
        <label>limits</label>
      </node>
      <node id="15872">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="15873" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
      </node>
      <node id="15882">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="15871">
        <label>cstdint</label>
      </node>
      <node id="15865">
        <label>stdint.h</label>
      </node>
      <node id="15864">
        <label>stdexcept</label>
      </node>
      <node id="15875">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15876" relation="include">
        </childnode>
      </node>
      <node id="15863">
        <label>string</label>
      </node>
      <node id="15866">
        <label>ostream</label>
      </node>
      <node id="15861">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="15865" relation="include">
        </childnode>
        <childnode refid="15866" relation="include">
        </childnode>
      </node>
      <node id="15880">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="15881" relation="include">
        </childnode>
        <childnode refid="15882" relation="include">
        </childnode>
      </node>
      <node id="15881">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="15862">
        <label>vector</label>
      </node>
      <node id="15876">
        <label>array</label>
      </node>
      <node id="15877">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="15879">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
      </node>
      <node id="15867">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="15868" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15870" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="15875" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
      </node>
      <node id="15859">
        <label>src/lib/storage/hash_functor.h</label>
        <link refid="hash_functor.h"/>
        <childnode refid="15860" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15867" relation="include">
        </childnode>
      </node>
      <node id="15873">
        <label>thread</label>
      </node>
      <node id="15870">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15868" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
      </node>
      <node id="15869">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15884">
        <label>src/lib/storage/GroupValue.cpp</label>
        <link refid="_group_value_8cpp"/>
      </node>
      <node id="15885">
        <label>src/lib/storage/HashTable.cpp</label>
        <link refid="_hash_table_8cpp"/>
      </node>
      <node id="15883">
        <label>src/lib/storage/hash_functor.h</label>
        <link refid="hash_functor.h"/>
        <childnode refid="15884" relation="include">
        </childnode>
        <childnode refid="15885" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhyrise_1_1storage_1_1hash__functor" prot="public">hyrise::storage::hash_functor</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1storage">hyrise::storage</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_STORAGE_HASH_FUNCTOR_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_STORAGE_HASH_FUNCTOR_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">storage<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="14" refid="structhyrise_1_1storage_1_1hash__functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1storage_1_1hash__functor" kindref="compound">hash_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="15" refid="structhyrise_1_1storage_1_1hash__functor_1a7c8e8ac1de31bf9d7feae9a05fb7c08e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a7c8e8ac1de31bf9d7feae9a05fb7c08e" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="16" refid="structhyrise_1_1storage_1_1hash__functor_1a1ddb71a0c0a5d2b3ae0f2d3cc565dfe3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref><sp/>*<ref refid="structhyrise_1_1storage_1_1hash__functor_1a1ddb71a0c0a5d2b3ae0f2d3cc565dfe3" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="17" refid="structhyrise_1_1storage_1_1hash__functor_1ae52c6a9f4b31015a9301903ec906e57e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1ae52c6a9f4b31015a9301903ec906e57e" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="18" refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" kindref="member">vid</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structhyrise_1_1storage_1_1hash__functor_1a4babd81ff294cdef9a8e69ddbe9b92c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a4babd81ff294cdef9a8e69ddbe9b92c9" kindref="member">hash_functor</ref>():<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a1ddb71a0c0a5d2b3ae0f2d3cc565dfe3" kindref="member">table</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structhyrise_1_1storage_1_1hash__functor_1a96f6bb04683b1b4d17e0f0e78dc5d487" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a96f6bb04683b1b4d17e0f0e78dc5d487" kindref="member">setValueId</ref>(<ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" kindref="member">vid</ref><sp/>=<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" kindref="member">vid</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structhyrise_1_1storage_1_1hash__functor_1a941bbc4541d6799f0e4f11d1029f717f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a941bbc4541d6799f0e4f11d1029f717f" kindref="member">hash_functor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref><sp/>*t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1ae52c6a9f4b31015a9301903ec906e57e" kindref="member">f</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v=<ref refid="class_value_id" kindref="compound">ValueId</ref>()):<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1a1ddb71a0c0a5d2b3ae0f2d3cc565dfe3" kindref="member">table</ref>(t),<sp/>f(f),<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" kindref="member">vid</ref>(v)<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="29" refid="structhyrise_1_1storage_1_1hash__functor_1ac7f5f2fc4f400cec88187ece43ff5fd2" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1ac7f5f2fc4f400cec88187ece43ff5fd2" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;R&gt;()(<ref refid="structhyrise_1_1storage_1_1hash__functor_1a1ddb71a0c0a5d2b3ae0f2d3cc565dfe3" kindref="member">table</ref>-&gt;<ref refid="class_abstract_table_1af380b8fd7715abe5988f53b885920e0c" kindref="member">getValueForValueId</ref>&lt;R&gt;(f,<sp/><ref refid="structhyrise_1_1storage_1_1hash__functor_1aa9ceb36f3db82c1cbc9a9c31eb6818d7" kindref="member">vid</ref>));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/storage/hash_functor.h"/>
  </compounddef>
</doxygen>
