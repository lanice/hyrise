<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_abstract_hash_table" kind="class" prot="public" abstract="yes">
    <compoundname>AbstractHashTable</compoundname>
    <basecompoundref refid="class_abstract_resource" prot="public" virt="non-virtual">AbstractResource</basecompoundref>
    <derivedcompoundref refid="class_hash_table" prot="public" virt="non-virtual">HashTable&lt; MAP, KEY &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_hash_table_view" prot="public" virt="non-virtual">HashTableView&lt; MAP, KEY &gt;</derivedcompoundref>
    <includes refid="_abstract_hash_table_8h" local="no">AbstractHashTable.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_abstract_hash_table_1adb93bf241dfec8ea49da3ae71fd2a48b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AbstractHashTable::AbstractHashTable</definition>
        <argsstring>()</argsstring>
        <name>AbstractHashTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="18" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a53f1b06964770253eb5cc89ee900a0fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual AbstractHashTable::~AbstractHashTable</definition>
        <argsstring>()</argsstring>
        <name>~AbstractHashTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="20" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a2471ef406179e248fb6c8aab0ddccb31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t AbstractHashTable::size</definition>
        <argsstring>() const =0</argsstring>
        <name>size</name>
        <reimplementedby refid="class_hash_table_1a789cc85d0fd1dbe33e1ba1004cef1861">size</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1acacbdda6b09ed83a400f1426d5308264">size</reimplementedby>
        <briefdescription>
<para>Returns the number of key value pairs of underlying hash map structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a776a8d2944780e89f4622c08ff9453b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref></type>
        <definition>virtual pos_list_t AbstractHashTable::get</definition>
        <argsstring>(const hyrise::storage::c_atable_ptr_t &amp;table, const field_list_t &amp;columns, const pos_t row) const =0</argsstring>
        <name>get</name>
        <reimplementedby refid="class_hash_table_1a1013d1003d3ca319c35b50b69348b4db">get</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1a1247a1c80f97cd0dfc43b768c4cc2388">get</reimplementedby>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1a866dd5ae291f599db49986f6aa5ba77a" kindref="member">pos_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Get positions for values in the table cells of given row and columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1afb9c101f896b539b13ffb12d30c4a5b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref></type>
        <definition>virtual hyrise::storage::c_atable_ptr_t AbstractHashTable::getTable</definition>
        <argsstring>() const =0</argsstring>
        <name>getTable</name>
        <reimplementedby refid="class_hash_table_1aa2da956e6578c5d4803ef650ed285e34">getTable</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1afc9c195c10bb0945e01b32bb9b082b7d">getTable</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a32bc7efd002483e9e24444f318f95fef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref></type>
        <definition>virtual field_list_t AbstractHashTable::getFields</definition>
        <argsstring>() const =0</argsstring>
        <name>getFields</name>
        <reimplementedby refid="class_hash_table_1a1f2680e15591d1c3a225095aded3f771">getFields</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1a2f9443d1f52dacaf270159d156ff2a4d">getFields</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a18b22788f88b9c0c93e626b61b2f560a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t AbstractHashTable::getFieldCount</definition>
        <argsstring>() const =0</argsstring>
        <name>getFieldCount</name>
        <reimplementedby refid="class_hash_table_1aafcd0c51583ec85d75e038cd51933679">getFieldCount</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1a583ae5cdd214967a654d703d6ac50545">getFieldCount</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_abstract_hash_table_1a73f98f60a9f403db71d8b47911d1a49d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t AbstractHashTable::numKeys</definition>
        <argsstring>() const =0</argsstring>
        <name>numKeys</name>
        <reimplementedby refid="class_hash_table_1a95083fe63df1590a5e37852ad232b71c">numKeys</reimplementedby>
        <reimplementedby refid="class_hash_table_view_1a93731ab4b2d7bd0b2c2dcc5f94cea2d5">numKeys</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_hash_table" kindref="compound">HashTable</ref> that maps table cells&apos; hashed values of arbitrary columns to their rows. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1436">
        <label>AbstractHashTable</label>
        <link refid="class_abstract_hash_table"/>
        <childnode refid="1437" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1439">
        <label>HashTableView&lt; MAP, KEY &gt;</label>
        <link refid="class_hash_table_view"/>
        <childnode refid="1436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1438">
        <label>HashTable&lt; MAP, KEY &gt;</label>
        <link refid="class_hash_table"/>
        <childnode refid="1436" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1437">
        <label>AbstractResource</label>
        <link refid="class_abstract_resource"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1440">
        <label>AbstractHashTable</label>
        <link refid="class_abstract_hash_table"/>
        <childnode refid="1441" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1441">
        <label>AbstractResource</label>
        <link refid="class_abstract_resource"/>
      </node>
    </collaborationgraph>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" line="16" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/storage/AbstractHashTable.h" bodystart="16" bodyend="37"/>
    <listofallmembers>
      <member refid="class_abstract_hash_table_1adb93bf241dfec8ea49da3ae71fd2a48b" prot="public" virt="non-virtual"><scope>AbstractHashTable</scope><name>AbstractHashTable</name></member>
      <member refid="class_abstract_hash_table_1a776a8d2944780e89f4622c08ff9453b3" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>get</name></member>
      <member refid="class_abstract_hash_table_1a18b22788f88b9c0c93e626b61b2f560a" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>getFieldCount</name></member>
      <member refid="class_abstract_hash_table_1a32bc7efd002483e9e24444f318f95fef" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>getFields</name></member>
      <member refid="class_abstract_hash_table_1afb9c101f896b539b13ffb12d30c4a5b4" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>getTable</name></member>
      <member refid="class_abstract_hash_table_1a73f98f60a9f403db71d8b47911d1a49d" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>numKeys</name></member>
      <member refid="class_abstract_hash_table_1a2471ef406179e248fb6c8aab0ddccb31" prot="public" virt="pure-virtual"><scope>AbstractHashTable</scope><name>size</name></member>
      <member refid="class_abstract_hash_table_1a53f1b06964770253eb5cc89ee900a0fd" prot="public" virt="virtual"><scope>AbstractHashTable</scope><name>~AbstractHashTable</name></member>
      <member refid="class_abstract_resource_1acbf6801fec7bf1acf0d90a4fb5d5c706" prot="public" virt="virtual"><scope>AbstractHashTable</scope><name>~AbstractResource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
