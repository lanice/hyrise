<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_empty_input" kind="class" prot="public">
    <compoundname>EmptyInput</compoundname>
    <basecompoundref refid="class_abstract_input" prot="public" virt="non-virtual">AbstractInput</basecompoundref>
    <includes refid="_empty_loader_8h" local="no">EmptyLoader.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_empty_input_1a2e0e62676a42d7150f384a6ab2c7a904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EmptyInput::EmptyInput</definition>
        <argsstring>()</argsstring>
        <name>EmptyInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" line="11" bodyfile="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_empty_input_1aa65432e58e1495b59266c9c4934c1441" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_empty_input" kindref="compound">EmptyInput</ref> *</type>
        <definition>EmptyInput * EmptyInput::clone</definition>
        <argsstring>() const </argsstring>
        <name>clone</name>
        <reimplements refid="class_abstract_input_1ae24e23d7100a832b9bd67b161ceb7215">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" line="13" bodyfile="/home/vagrant/lanice/src/lib/io/EmptyLoader.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_empty_input_1a7d0391c1f2a3189ee29ac39ca97978e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractTable &gt; EmptyInput::load</definition>
        <argsstring>(std::shared_ptr&lt; AbstractTable &gt;, const compound_metadata_list *, const Loader::params &amp;args)</argsstring>
        <name>load</name>
        <reimplements refid="class_abstract_input_1a9d31015659ecff402c529df0f5339b60">load</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;</type>
          <declname>intable</declname>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1ab1a41784d413aa539cdda0391757965c" kindref="member">compound_metadata_list</ref> *</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>const <ref refid="class_loader_1_1params" kindref="compound">Loader::params</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads data.<itemizedlist>
<listitem><para>Load data into a table</para></listitem><listitem><para>Creates and returns an AbstractTable*</para></listitem><listitem><para>Has to release intable in case it isn&apos;t used.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intable</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_loader_1a371700be700b02ac0f08306734213028" kindref="member">Loader::load</ref> interface creates an initial MutableVerticalTable, loader may choose to use it or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>The original metadata </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespace_loader" kindref="compound">Loader</ref> arguments that may influence loading </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" line="14" bodyfile="/home/vagrant/lanice/src/lib/io/EmptyLoader.cpp" bodystart="4" bodyend="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1958">
        <label>EmptyInput</label>
        <link refid="class_empty_input"/>
        <childnode refid="1959" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1959">
        <label>AbstractInput</label>
        <link refid="class_abstract_input"/>
        <childnode refid="1960" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1960">
        <label>cloneable</label>
        <link refid="classcloneable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1961">
        <label>EmptyInput</label>
        <link refid="class_empty_input"/>
        <childnode refid="1962" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1962">
        <label>AbstractInput</label>
        <link refid="class_abstract_input"/>
        <childnode refid="1963" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1963">
        <label>cloneable</label>
        <link refid="classcloneable"/>
      </node>
    </collaborationgraph>
    <location file="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" line="9" bodyfile="/home/vagrant/lanice/src/lib/io/EmptyLoader.h" bodystart="9" bodyend="15"/>
    <listofallmembers>
      <member refid="class_empty_input_1aa65432e58e1495b59266c9c4934c1441" prot="public" virt="virtual"><scope>EmptyInput</scope><name>clone</name></member>
      <member refid="class_empty_input_1a2e0e62676a42d7150f384a6ab2c7a904" prot="public" virt="non-virtual"><scope>EmptyInput</scope><name>EmptyInput</name></member>
      <member refid="class_empty_input_1a7d0391c1f2a3189ee29ac39ca97978e1" prot="public" virt="virtual"><scope>EmptyInput</scope><name>load</name></member>
      <member refid="class_abstract_input_1a58bee53c3e07a02dace728ba96daa81f" prot="public" virt="virtual"><scope>EmptyInput</scope><name>needs_store_wrap</name></member>
      <member refid="class_abstract_input_1a24438a83d3e56183859bc5f04394b7d1" prot="public" virt="virtual"><scope>EmptyInput</scope><name>~AbstractInput</name></member>
      <member refid="classcloneable_1a31ff0906763d17093098d05207e2184c" prot="public" virt="virtual"><scope>EmptyInput</scope><name>~cloneable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
