<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_abstract_merge_strategy_8h" kind="file">
    <compoundname>AbstractMergeStrategy.h</compoundname>
    <includes local="no">vector</includes>
    <includes refid="_abstract_table_8h" local="no">storage/AbstractTable.h</includes>
    <includes refid="vector__helpers_8h" local="no">helper/vector_helpers.h</includes>
    <includedby refid="_loader_8cpp" local="yes">src/lib/io/Loader.cpp</includedby>
    <includedby refid="_table_merger_8h" local="no">src/lib/storage/TableMerger.h</includedby>
    <includedby refid="_simple_store_8cpp" local="yes">src/lib/storage/SimpleStore.cpp</includedby>
    <includedby refid="_store_8h" local="no">src/lib/storage/Store.h</includedby>
    <includedby refid="_table_generator_8cpp" local="no">src/lib/storage/TableGenerator.cpp</includedby>
    <includedby refid="storage_8h" local="no">src/lib/storage.h</includedby>
    <incdepgraph>
      <node id="14019">
        <label>atomic</label>
      </node>
      <node id="14033">
        <label>functional</label>
      </node>
      <node id="14031">
        <label>helper/vector_helpers.h</label>
        <link refid="vector__helpers_8h"/>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14034" relation="include">
        </childnode>
        <childnode refid="14035" relation="include">
        </childnode>
      </node>
      <node id="14011">
        <label>limits</label>
      </node>
      <node id="14029">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="14023">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="14024" relation="include">
        </childnode>
        <childnode refid="14027" relation="include">
        </childnode>
        <childnode refid="14028" relation="include">
        </childnode>
      </node>
      <node id="14035">
        <label>iterator</label>
      </node>
      <node id="14030">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="14016">
        <label>cstdint</label>
      </node>
      <node id="14028">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="14029" relation="include">
        </childnode>
        <childnode refid="14030" relation="include">
        </childnode>
      </node>
      <node id="14025">
        <label>stdint.h</label>
      </node>
      <node id="14013">
        <label>stdexcept</label>
      </node>
      <node id="14034">
        <label>numeric</label>
      </node>
      <node id="14014">
        <label>string</label>
      </node>
      <node id="14017">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="14018" relation="include">
        </childnode>
        <childnode refid="14019" relation="include">
        </childnode>
      </node>
      <node id="14026">
        <label>ostream</label>
      </node>
      <node id="14024">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="14009" relation="include">
        </childnode>
        <childnode refid="14014" relation="include">
        </childnode>
        <childnode refid="14013" relation="include">
        </childnode>
        <childnode refid="14025" relation="include">
        </childnode>
        <childnode refid="14026" relation="include">
        </childnode>
      </node>
      <node id="14009">
        <label>vector</label>
      </node>
      <node id="14020">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="14016" relation="include">
        </childnode>
        <childnode refid="14021" relation="include">
        </childnode>
      </node>
      <node id="14021">
        <label>array</label>
      </node>
      <node id="14008">
        <label>src/lib/storage/AbstractMergeStrategy.h</label>
        <link refid="AbstractMergeStrategy.h"/>
        <childnode refid="14009" relation="include">
        </childnode>
        <childnode refid="14010" relation="include">
        </childnode>
        <childnode refid="14031" relation="include">
        </childnode>
      </node>
      <node id="14027">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="14009" relation="include">
        </childnode>
        <childnode refid="14014" relation="include">
        </childnode>
        <childnode refid="14012" relation="include">
        </childnode>
        <childnode refid="14024" relation="include">
        </childnode>
      </node>
      <node id="14022">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="14018">
        <label>thread</label>
      </node>
      <node id="14032">
        <label>algorithm</label>
      </node>
      <node id="14015">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="14016" relation="include">
        </childnode>
        <childnode refid="14014" relation="include">
        </childnode>
        <childnode refid="14011" relation="include">
        </childnode>
        <childnode refid="14012" relation="include">
        </childnode>
        <childnode refid="14009" relation="include">
        </childnode>
      </node>
      <node id="14010">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="14011" relation="include">
        </childnode>
        <childnode refid="14012" relation="include">
        </childnode>
        <childnode refid="14013" relation="include">
        </childnode>
        <childnode refid="14009" relation="include">
        </childnode>
        <childnode refid="14014" relation="include">
        </childnode>
        <childnode refid="14015" relation="include">
        </childnode>
        <childnode refid="14017" relation="include">
        </childnode>
        <childnode refid="14020" relation="include">
        </childnode>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14023" relation="include">
        </childnode>
        <childnode refid="14024" relation="include">
        </childnode>
      </node>
      <node id="14012">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14048">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="14055">
        <label>src/lib/access/expressions/GenericExpressions.h</label>
        <link refid="_generic_expressions_8h"/>
        <childnode refid="14056" relation="include">
        </childnode>
      </node>
      <node id="14050">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="14058">
        <label>src/lib/access/LayoutTable.cpp</label>
        <link refid="_layout_table_8cpp"/>
      </node>
      <node id="14049">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="14052">
        <label>src/lib/storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="14053" relation="include">
        </childnode>
        <childnode refid="14054" relation="include">
        </childnode>
        <childnode refid="14055" relation="include">
        </childnode>
        <childnode refid="14057" relation="include">
        </childnode>
        <childnode refid="14058" relation="include">
        </childnode>
        <childnode refid="14059" relation="include">
        </childnode>
        <childnode refid="14060" relation="include">
        </childnode>
        <childnode refid="14061" relation="include">
        </childnode>
        <childnode refid="14062" relation="include">
        </childnode>
        <childnode refid="14063" relation="include">
        </childnode>
        <childnode refid="14064" relation="include">
        </childnode>
        <childnode refid="14065" relation="include">
        </childnode>
        <childnode refid="14037" relation="include">
        </childnode>
        <childnode refid="14066" relation="include">
        </childnode>
        <childnode refid="14067" relation="include">
        </childnode>
        <childnode refid="14068" relation="include">
        </childnode>
        <childnode refid="14069" relation="include">
        </childnode>
        <childnode refid="14070" relation="include">
        </childnode>
        <childnode refid="14071" relation="include">
        </childnode>
        <childnode refid="14072" relation="include">
        </childnode>
        <childnode refid="14073" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
      </node>
      <node id="14062">
        <label>src/lib/access/storage/JsonTable.cpp</label>
        <link refid="_json_table_8cpp"/>
      </node>
      <node id="14042">
        <label>src/lib/storage/SimpleStoreMerger.cpp</label>
        <link refid="_simple_store_merger_8cpp"/>
      </node>
      <node id="14070">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="_abstract_table_8cpp"/>
      </node>
      <node id="14044">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="14037">
        <label>src/lib/io/Loader.cpp</label>
        <link refid="_loader_8cpp"/>
      </node>
      <node id="14073">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="_store_8cpp"/>
      </node>
      <node id="14069">
        <label>src/lib/io/TransactionManager.cpp</label>
        <link refid="_transaction_manager_8cpp"/>
      </node>
      <node id="14039">
        <label>src/lib/storage/SimpleStore.h</label>
        <link refid="_simple_store_8h"/>
        <childnode refid="14040" relation="include">
        </childnode>
        <childnode refid="14037" relation="include">
        </childnode>
        <childnode refid="14041" relation="include">
        </childnode>
        <childnode refid="14042" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
      </node>
      <node id="14068">
        <label>src/lib/io/TableDump.cpp</label>
        <link refid="_table_dump_8cpp"/>
      </node>
      <node id="14043">
        <label>src/lib/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="14044" relation="include">
        </childnode>
        <childnode refid="14045" relation="include">
        </childnode>
        <childnode refid="14046" relation="include">
        </childnode>
        <childnode refid="14047" relation="include">
        </childnode>
        <childnode refid="14048" relation="include">
        </childnode>
        <childnode refid="14049" relation="include">
        </childnode>
        <childnode refid="14050" relation="include">
        </childnode>
        <childnode refid="14051" relation="include">
        </childnode>
      </node>
      <node id="14071">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="_pointer_calculator_8cpp"/>
      </node>
      <node id="14057">
        <label>src/lib/access/InsertScan.cpp</label>
        <link refid="_insert_scan_8cpp"/>
      </node>
      <node id="14063">
        <label>src/lib/access/storage/TableIO.cpp</label>
        <link refid="_table_i_o_8cpp"/>
      </node>
      <node id="14053">
        <label>src/bin/perf_regression/tx_performance.cpp</label>
        <link refid="tx__performance_8cpp"/>
      </node>
      <node id="14038">
        <label>src/lib/storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="14039" relation="include">
        </childnode>
        <childnode refid="14041" relation="include">
        </childnode>
        <childnode refid="14052" relation="include">
        </childnode>
        <childnode refid="14074" relation="include">
        </childnode>
        <childnode refid="14075" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
      </node>
      <node id="14066">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
      <node id="14041">
        <label>src/lib/storage/SimpleStore.cpp</label>
        <link refid="_simple_store_8cpp"/>
      </node>
      <node id="14061">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="14065">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="14040">
        <label>src/lib/access/system/ResponseTask.cpp</label>
        <link refid="_response_task_8cpp"/>
      </node>
      <node id="14054">
        <label>src/lib/access/Delete.cpp</label>
        <link refid="_delete_8cpp"/>
      </node>
      <node id="14036">
        <label>src/lib/storage/AbstractMergeStrategy.h</label>
        <link refid="AbstractMergeStrategy.h"/>
        <childnode refid="14037" relation="include">
        </childnode>
        <childnode refid="14038" relation="include">
        </childnode>
        <childnode refid="14041" relation="include">
        </childnode>
        <childnode refid="14052" relation="include">
        </childnode>
        <childnode refid="14074" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
      </node>
      <node id="14051">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="14060">
        <label>src/lib/access/PosUpdateScan.cpp</label>
        <link refid="_pos_update_scan_8cpp"/>
      </node>
      <node id="14064">
        <label>src/lib/access/tx/ValidatePositions.cpp</label>
        <link refid="_validate_positions_8cpp"/>
      </node>
      <node id="14075">
        <label>src/lib/storage/TableMerger.cpp</label>
        <link refid="_table_merger_8cpp"/>
      </node>
      <node id="14047">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="14067">
        <label>src/lib/io/shortcuts.cpp</label>
        <link refid="shortcuts_8cpp"/>
      </node>
      <node id="14045">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="14059">
        <label>src/lib/access/MergeTable.cpp</label>
        <link refid="_merge_table_8cpp"/>
      </node>
      <node id="14056">
        <label>src/lib/access/expressions/GenericExpressions.cpp</label>
        <link refid="_generic_expressions_8cpp"/>
      </node>
      <node id="14072">
        <label>src/lib/storage/PrettyPrinter.cpp</label>
        <link refid="_pretty_printer_8cpp"/>
      </node>
      <node id="14074">
        <label>src/lib/storage/TableGenerator.cpp</label>
        <link refid="_table_generator_8cpp"/>
      </node>
      <node id="14046">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__merge__tables" prot="public">_merge_tables</innerclass>
    <innerclass refid="class_abstract_merge_strategy" prot="public">AbstractMergeStrategy</innerclass>
    <innerclass refid="class_default_merge_strategy" prot="public">DefaultMergeStrategy</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_abstract_merge_strategy_8h_1a264d0402b5878f2dc616d2eee7c3209b" prot="public" static="no">
        <type>struct <ref refid="struct__merge__tables" kindref="compound">_merge_tables</ref></type>
        <definition>typedef struct _merge_tables  merge_tables</definition>
        <argsstring></argsstring>
        <name>merge_tables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/storage/AbstractMergeStrategy.h" line="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_STORAGE_ABSTRACTMERGESTRATEGY_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_STORAGE_ABSTRACTMERGESTRATEGY_H_</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vector__helpers_8h" kindref="compound">helper/vector_helpers.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="struct__merge__tables" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__merge__tables" kindref="compound">_merge_tables</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="struct__merge__tables_1ad11eae993341837c0904d5eab79ef688" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct__merge__tables_1ad11eae993341837c0904d5eab79ef688" kindref="member">_merge_tables</ref>(std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>_tables_to_merge,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>_tables_not_to_merge)<sp/>:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>(_tables_to_merge),<sp/><ref refid="struct__merge__tables_1ada66d92608732d97997acdff133bfede" kindref="member">tables_not_to_merge</ref>(_tables_not_to_merge)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/><ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>;</highlight></codeline>
<codeline lineno="18" refid="struct__merge__tables_1ada66d92608732d97997acdff133bfede" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/><ref refid="struct__merge__tables_1ada66d92608732d97997acdff133bfede" kindref="member">tables_not_to_merge</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}<sp/><ref refid="_abstract_merge_strategy_8h_1a264d0402b5878f2dc616d2eee7c3209b" kindref="member">merge_tables</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_abstract_merge_strategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_abstract_merge_strategy" kindref="compound">AbstractMergeStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="class_abstract_merge_strategy_1ae344350d6981fa0f741b00d23c1302fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_merge_strategy_1ae344350d6981fa0f741b00d23c1302fb" kindref="member">AbstractMergeStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="27" refid="class_abstract_merge_strategy_1ad36854dbb444a691ccda77c4c5b9c1ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_merge_strategy_1ad36854dbb444a691ccda77c4c5b9c1ec" kindref="member">~AbstractMergeStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct__merge__tables" kindref="compound">merge_tables</ref><sp/><ref refid="class_abstract_merge_strategy_1a63dd7bc8200700bfaf225f2227ea7d63" kindref="member">determineTablesToMerge</ref>(std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_abstract_merge_strategy_1a158f095d78cdcf77fb8fec05cd54a5b0" kindref="member">calculateNewSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useValid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>valid)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_merge_strategy" kindref="compound">AbstractMergeStrategy</ref><sp/>*<ref refid="class_abstract_merge_strategy_1ad7ba6bba2799af11ed26358fa28779ab" kindref="member">copy</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_default_merge_strategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_default_merge_strategy" kindref="compound">DefaultMergeStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_abstract_merge_strategy" kindref="compound">AbstractMergeStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_default_merge_strategy_1a0bef9a5e63640a7a5ec14f94c9d59138" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="struct__merge__tables" kindref="compound">merge_tables</ref><sp/><ref refid="class_default_merge_strategy_1a0bef9a5e63640a7a5ec14f94c9d59138" kindref="member">determineTablesToMerge</ref>(std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>result;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(std::begin(input_tables),<sp/>std::end(input_tables),<sp/>std::back_inserter(result));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct__merge__tables" kindref="compound">_merge_tables</ref>(result,<sp/>decltype(result)());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_default_merge_strategy_1a269edb73f4e2f229c06046307dabbea6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_default_merge_strategy_1a269edb73f4e2f229c06046307dabbea6" kindref="member">calculateNewSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useValid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>valid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useValid)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1functional_1aa5a5d6518ef70d11b4f8a77ee8c6b767" kindref="member">hyrise::functional::sum</ref>(input_tables,<sp/>0u,<sp/>[](<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>t){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;size();<sp/>});</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>parts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1functional_1aa5a5d6518ef70d11b4f8a77ee8c6b767" kindref="member">hyrise::functional::sum</ref>(input_tables,<sp/>0u,<sp/>[&amp;parts,valid](<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>t){<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newSize<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=parts;<sp/>i<sp/>&lt;<sp/>parts<sp/>+<sp/>t-&gt;size();<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid[i])<sp/>++newSize;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts<sp/>+=<sp/>t-&gt;size();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newSize;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_default_merge_strategy_1af3c3ff0cb8d3d36bdb62b4662ed8de4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_merge_strategy" kindref="compound">AbstractMergeStrategy</ref><sp/>*<ref refid="class_default_merge_strategy_1af3c3ff0cb8d3d36bdb62b4662ed8de4c" kindref="member">copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Merge<sp/>Strategy<sp/>Copy<sp/>is<sp/>like<sp/>killing<sp/>a<sp/>kitten&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_STORAGE_ABSTRACTMERGESTRATEGY_H_</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/storage/AbstractMergeStrategy.h"/>
  </compounddef>
</doxygen>
