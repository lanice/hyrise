<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_index_scan_8cpp" kind="file">
    <compoundname>IndexScan.cpp</compoundname>
    <includes refid="_index_scan_8h" local="yes">access/IndexScan.h</includes>
    <includes local="no">memory</includes>
    <includes refid="_basic_parser_8h" local="yes">access/system/BasicParser.h</includes>
    <includes refid="json__converters_8h" local="yes">access/json_converters.h</includes>
    <includes refid="_query_parser_8h" local="yes">access/system/QueryParser.h</includes>
    <includes refid="_storage_manager_8h" local="yes">io/StorageManager.h</includes>
    <includes refid="_inverted_index_8h" local="yes">storage/InvertedIndex.h</includes>
    <includes refid="meta__storage_8h" local="yes">storage/meta_storage.h</includes>
    <includes refid="_pointer_calculator_8h" local="yes">storage/PointerCalculator.h</includes>
    <incdepgraph>
      <node id="4415">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="4405">
        <label>access/json_converters.h</label>
        <link refid="json__converters_8h"/>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4389" relation="include">
        </childnode>
      </node>
      <node id="4396">
        <label>atomic</label>
      </node>
      <node id="4416">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="4387">
        <label>limits</label>
      </node>
      <node id="4369">
        <label>access/system/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4374" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4379" relation="include">
        </childnode>
        <childnode refid="4380" relation="include">
        </childnode>
      </node>
      <node id="4399">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="4404">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="4386">
        <label>cstdint</label>
      </node>
      <node id="4393">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="4387" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4394" relation="include">
        </childnode>
        <childnode refid="4397" relation="include">
        </childnode>
        <childnode refid="4399" relation="include">
        </childnode>
        <childnode refid="4400" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
      </node>
      <node id="4370">
        <label>stdint.h</label>
      </node>
      <node id="4385">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4386" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4387" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
      </node>
      <node id="4429">
        <label>cmath</label>
      </node>
      <node id="4397">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="4386" relation="include">
        </childnode>
        <childnode refid="4398" relation="include">
        </childnode>
      </node>
      <node id="4434">
        <label>cassert</label>
      </node>
      <node id="4380">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4383" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
      </node>
      <node id="4377">
        <label>stdexcept</label>
      </node>
      <node id="4376">
        <label>string</label>
      </node>
      <node id="4413">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="4373">
        <label>map</label>
      </node>
      <node id="4412">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4413" relation="include">
        </childnode>
        <childnode refid="4414" relation="include">
        </childnode>
        <childnode refid="4415" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4416" relation="include">
        </childnode>
      </node>
      <node id="4379">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="4370" relation="include">
        </childnode>
      </node>
      <node id="4420">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4421" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4422" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
      </node>
      <node id="4422">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4423" relation="include">
        </childnode>
      </node>
      <node id="4378">
        <label>ostream</label>
      </node>
      <node id="4408">
        <label>helper/checked_cast.h</label>
        <link refid="checked__cast_8h"/>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
      </node>
      <node id="4389">
        <label>json.h</label>
      </node>
      <node id="4390">
        <label>access/system/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4389" relation="include">
        </childnode>
      </node>
      <node id="4403">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="4423">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
        <childnode refid="4424" relation="include">
        </childnode>
      </node>
      <node id="4426">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="4427" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4429" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4431" relation="include">
        </childnode>
        <childnode refid="4422" relation="include">
        </childnode>
      </node>
      <node id="4383">
        <label>condition_variable</label>
      </node>
      <node id="4366">
        <label>src/lib/access/IndexScan.cpp</label>
        <link refid="IndexScan.cpp"/>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4390" relation="include">
        </childnode>
        <childnode refid="4405" relation="include">
        </childnode>
        <childnode refid="4388" relation="include">
        </childnode>
        <childnode refid="4406" relation="include">
        </childnode>
        <childnode refid="4409" relation="include">
        </childnode>
        <childnode refid="4412" relation="include">
        </childnode>
        <childnode refid="4417" relation="include">
        </childnode>
      </node>
      <node id="4425">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4422" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4433" relation="include">
        </childnode>
      </node>
      <node id="4372">
        <label>vector</label>
      </node>
      <node id="4409">
        <label>storage/InvertedIndex.h</label>
        <link refid="_inverted_index_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4410" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4411" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
      </node>
      <node id="4414">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="4418">
        <label>helper/SharedFactory.h</label>
        <link refid="_shared_factory_8h"/>
        <childnode refid="4382" relation="include">
        </childnode>
      </node>
      <node id="4374">
        <label>utility</label>
      </node>
      <node id="4398">
        <label>array</label>
      </node>
      <node id="4430">
        <label>sstream</label>
      </node>
      <node id="4391">
        <label>io/TXContext.h</label>
        <link refid="_t_x_context_8h"/>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4392" relation="include">
        </childnode>
      </node>
      <node id="4388">
        <label>access/system/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4389" relation="include">
        </childnode>
        <childnode refid="4390" relation="include">
        </childnode>
      </node>
      <node id="4392">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="4371">
        <label>time.h</label>
      </node>
      <node id="4427">
        <label>cerrno</label>
      </node>
      <node id="4419">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4420" relation="include">
        </childnode>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4421" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
      </node>
      <node id="4394">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="4395" relation="include">
        </childnode>
        <childnode refid="4396" relation="include">
        </childnode>
      </node>
      <node id="4435">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4420" relation="include">
        </childnode>
      </node>
      <node id="4432">
        <label>iostream</label>
      </node>
      <node id="4424">
        <label>cstddef</label>
      </node>
      <node id="4407">
        <label>io/ResourceManager.h</label>
        <link refid="_resource_manager_8h"/>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4408" relation="include">
        </childnode>
      </node>
      <node id="4375">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4378" relation="include">
        </childnode>
      </node>
      <node id="4384">
        <label>access/system/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
      </node>
      <node id="4381">
        <label>mutex</label>
      </node>
      <node id="4401">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
      </node>
      <node id="4367">
        <label>access/IndexScan.h</label>
        <link refid="_index_scan_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
      </node>
      <node id="4395">
        <label>thread</label>
      </node>
      <node id="4402">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="4403" relation="include">
        </childnode>
        <childnode refid="4404" relation="include">
        </childnode>
      </node>
      <node id="4410">
        <label>algorithm</label>
      </node>
      <node id="4368">
        <label>access/system/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4384" relation="include">
        </childnode>
        <childnode refid="4388" relation="include">
        </childnode>
        <childnode refid="4391" relation="include">
        </childnode>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4389" relation="include">
        </childnode>
      </node>
      <node id="4411">
        <label>storage/AbstractIndex.h</label>
        <link refid="_abstract_index_8h"/>
        <childnode refid="4399" relation="include">
        </childnode>
      </node>
      <node id="4421">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
      </node>
      <node id="4406">
        <label>io/StorageManager.h</label>
        <link refid="_storage_manager_8h"/>
        <childnode refid="4396" relation="include">
        </childnode>
        <childnode refid="4373" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4407" relation="include">
        </childnode>
      </node>
      <node id="4428">
        <label>cstring</label>
      </node>
      <node id="4433">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4429" relation="include">
        </childnode>
        <childnode refid="4386" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4376" relation="include">
        </childnode>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4431" relation="include">
        </childnode>
        <childnode refid="4422" relation="include">
        </childnode>
      </node>
      <node id="4417">
        <label>storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="4372" relation="include">
        </childnode>
        <childnode refid="4385" relation="include">
        </childnode>
        <childnode refid="4418" relation="include">
        </childnode>
        <childnode refid="4393" relation="include">
        </childnode>
        <childnode refid="4419" relation="include">
        </childnode>
      </node>
      <node id="4382">
        <label>memory</label>
      </node>
      <node id="4400">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="4375" relation="include">
        </childnode>
        <childnode refid="4401" relation="include">
        </childnode>
        <childnode refid="4402" relation="include">
        </childnode>
      </node>
      <node id="4431">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="4432" relation="include">
        </childnode>
        <childnode refid="4386" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structhyrise_1_1access_1_1_create_index_value_functor" prot="public">hyrise::access::CreateIndexValueFunctor</innerclass>
    <innerclass refid="structhyrise_1_1access_1_1_scan_index_functor" prot="public">hyrise::access::ScanIndexFunctor</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_index_scan_8h" kindref="compound">access/IndexScan.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_basic_parser_8h" kindref="compound">access/system/BasicParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__converters_8h" kindref="compound">access/json_converters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_query_parser_8h" kindref="compound">access/system/QueryParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_storage_manager_8h" kindref="compound">io/StorageManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_inverted_index_8h" kindref="compound">storage/InvertedIndex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta__storage_8h" kindref="compound">storage/meta_storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pointer_calculator_8h" kindref="compound">storage/PointerCalculator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structhyrise_1_1access_1_1_create_index_value_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1access_1_1_create_index_value_functor" kindref="compound">CreateIndexValueFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="20" refid="structhyrise_1_1access_1_1_create_index_value_functor_1a8555ded9cb96ea22949a5b3fa636df30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_abstract_index_value" kindref="compound">AbstractIndexValue</ref><sp/>*<ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1a8555ded9cb96ea22949a5b3fa636df30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structhyrise_1_1access_1_1_create_index_value_functor_1a20bb773f776189e73b9aa414d0271e77" refkind="member"><highlight class="normal"><sp/><sp/>Json::Value<sp/>&amp;<ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1a20bb773f776189e73b9aa414d0271e77" kindref="member">_d</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structhyrise_1_1access_1_1_create_index_value_functor_1acd26d06b3ac9dfb56afabe62fa692c38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1acd26d06b3ac9dfb56afabe62fa692c38" kindref="member">CreateIndexValueFunctor</ref>(Json::Value<sp/>&amp;c):<sp/><ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1a20bb773f776189e73b9aa414d0271e77" kindref="member">_d</ref>(c)<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="27" refid="structhyrise_1_1access_1_1_create_index_value_functor_1a9e3ec61344e1fa3e2995a545bb4ce6f5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_abstract_index_value" kindref="compound">value_type</ref><sp/><ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1a9e3ec61344e1fa3e2995a545bb4ce6f5" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_index_value" kindref="compound">IndexValue&lt;R&gt;</ref><sp/>*v<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_index_value" kindref="compound">IndexValue&lt;R&gt;</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="classhyrise_1_1access_1_1_index_value_1a3bc49812126d6b81574c0ec05519a9c2" kindref="member">value</ref><sp/>=<sp/>json_converter::convert&lt;R&gt;(<ref refid="structhyrise_1_1access_1_1_create_index_value_functor_1a20bb773f776189e73b9aa414d0271e77" kindref="member">_d</ref>[</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structhyrise_1_1access_1_1_scan_index_functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1access_1_1_scan_index_functor" kindref="compound">ScanIndexFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="structhyrise_1_1access_1_1_scan_index_functor_1a5db8f005af7ef42c6506b26a2f06b21e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref><sp/>*<ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a5db8f005af7ef42c6506b26a2f06b21e" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structhyrise_1_1access_1_1_scan_index_functor_1a1aa9fab3e77c223859ae493201c7204c" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;AbstractIndex&gt;<sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1aa9fab3e77c223859ae493201c7204c" kindref="member">_index</ref>;</highlight></codeline>
<codeline lineno="38" refid="structhyrise_1_1access_1_1_scan_index_functor_1a1c5e5285ec091e69cc61c207fdb24d96" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_abstract_index_value" kindref="compound">AbstractIndexValue</ref><sp/>*<ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1c5e5285ec091e69cc61c207fdb24d96" kindref="member">_indexValue</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structhyrise_1_1access_1_1_scan_index_functor_1a141e24fd45090a456ca35c351928d3e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a141e24fd45090a456ca35c351928d3e5" kindref="member">ScanIndexFunctor</ref>(<ref refid="classhyrise_1_1access_1_1_abstract_index_value" kindref="compound">AbstractIndexValue</ref><sp/>*i,<sp/>std::shared_ptr&lt;AbstractIndex&gt;<sp/>d):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1aa9fab3e77c223859ae493201c7204c" kindref="member">_index</ref>(d),<sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1c5e5285ec091e69cc61c207fdb24d96" kindref="member">_indexValue</ref>(i)<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="44" refid="structhyrise_1_1access_1_1_scan_index_functor_1a11879dbfbb231645ad11618a1a61481b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a5db8f005af7ef42c6506b26a2f06b21e" kindref="member">value_type</ref><sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a11879dbfbb231645ad11618a1a61481b" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_inverted_index" kindref="compound">InvertedIndex&lt;ValueType&gt;</ref>&gt;(<ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1aa9fab3e77c223859ae493201c7204c" kindref="member">_index</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_index_value" kindref="compound">IndexValue&lt;ValueType&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="structhyrise_1_1access_1_1_scan_index_functor_1a1c5e5285ec091e69cc61c207fdb24d96" kindref="member">_indexValue</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>(idx-&gt;getPositionsForKey(v-&gt;value));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_<sp/>=<sp/>QueryParser::registerPlanOperation&lt;IndexScan&gt;(</highlight><highlight class="stringliteral">&quot;IndexScan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classhyrise_1_1access_1_1_index_scan_1ad1f3466f0f8e7268e594891fa53d093a" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_index_scan_1ad1f3466f0f8e7268e594891fa53d093a" kindref="member">IndexScan::~IndexScan</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1a30b553e036a122ba7caad9236087eaf3" kindref="member">_value</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classhyrise_1_1access_1_1_index_scan_1abe0f7a1140b2ae143e941d8fdafc3b3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1abe0f7a1140b2ae143e941d8fdafc3b3e" kindref="member">IndexScan::executePlanOperation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound" tooltip="Central holder of schema information. ">StorageManager</ref><sp/>*sm<sp/>=<sp/><ref refid="classhyrise_1_1io_1_1_storage_manager_1a73b12a097673a0afa604a22dd401a1bb" kindref="member" tooltip="Retrieve singleton storage-manager instance. ">StorageManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>sm-&gt;<ref refid="classhyrise_1_1io_1_1_storage_manager_1aa53477dd76e193df77066034a88bd046" kindref="member" tooltip="returns the index stored under name name. ">getInvertedIndex</ref>(<ref refid="classhyrise_1_1access_1_1_index_scan_1a6417ebabdd1329043b6b6a00fffbd735" kindref="member">_indexName</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>type<sp/>of<sp/>index<sp/>and<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1_scan_index_functor" kindref="compound">ScanIndexFunctor</ref><sp/>fun(<ref refid="classhyrise_1_1access_1_1_index_scan_1a30b553e036a122ba7caad9236087eaf3" kindref="member">_value</ref>,<sp/>idx);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref><sp/>*pos<sp/>=<sp/>ts(<ref refid="classhyrise_1_1access_1_1_plan_operation_1aecedc322d6f58070da10f0706ffce779" kindref="member" tooltip="Containers to store and handle input/output or rather result data. ">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0)-&gt;typeOfColumn(<ref refid="classhyrise_1_1access_1_1_plan_operation_1a93b05edfc4c655961a27bc6b8560cec5" kindref="member" tooltip="Transaction number. ">_field_definition</ref>[0]),<sp/>fun);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_plan_operation_1aac92e842153df9a9ae7e548ac7602009" kindref="member">addResult</ref>(<ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">PointerCalculator::create</ref>(<ref refid="classhyrise_1_1access_1_1_plan_operation_1aecedc322d6f58070da10f0706ffce779" kindref="member" tooltip="Containers to store and handle input/output or rather result data. ">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0),<sp/>pos));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classhyrise_1_1access_1_1_index_scan_1a7d368edb06acf8584b94f51d643fd317" refkind="member"><highlight class="normal">std::shared_ptr&lt;PlanOperation&gt;<sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1a7d368edb06acf8584b94f51d643fd317" kindref="member">IndexScan::parse</ref>(Json::Value<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;IndexScan&gt;<sp/>s<sp/>=<sp/><ref refid="struct_basic_parser_1a2354217ebc83a7328dd926ed6fdd5b49" kindref="member">BasicParser&lt;IndexScan&gt;::parse</ref>(data);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1_create_index_value_functor" kindref="compound">CreateIndexValueFunctor</ref><sp/>civf(data);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>s-&gt;_value<sp/>=<sp/>ts(data[</highlight><highlight class="stringliteral">&quot;vtype&quot;</highlight><highlight class="normal">].asUInt(),<sp/>civf);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>s-&gt;_indexName<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">].asString();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classhyrise_1_1access_1_1_index_scan_1aa368e43a0dda88a5e792aec38b7737cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1aa368e43a0dda88a5e792aec38b7737cf" kindref="member">IndexScan::vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;IndexScan&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classhyrise_1_1access_1_1_index_scan_1a6baa2852379652084d5e8ba4343d1f03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1a6baa2852379652084d5e8ba4343d1f03" kindref="member">IndexScan::setIndexName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_index_scan_1a6417ebabdd1329043b6b6a00fffbd735" kindref="member">_indexName</ref><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_2<sp/>=<sp/>QueryParser::registerPlanOperation&lt;MergeIndexScan&gt;(</highlight><highlight class="stringliteral">&quot;MergeIndexScan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classhyrise_1_1access_1_1_merge_index_scan_1a73e1a43695ebcfee968d73bb1fe2e185" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_merge_index_scan_1a73e1a43695ebcfee968d73bb1fe2e185" kindref="member">MergeIndexScan::~MergeIndexScan</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classhyrise_1_1access_1_1_merge_index_scan_1a78a131cacf2ff71cdb9b370f075aece9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_merge_index_scan_1a78a131cacf2ff71cdb9b370f075aece9" kindref="member">MergeIndexScan::executePlanOperation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="classhyrise_1_1access_1_1_plan_operation_1aecedc322d6f58070da10f0706ffce779" kindref="member" tooltip="Containers to store and handle input/output or rather result data. ">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pointer_calculator" kindref="compound">PointerCalculator</ref>&gt;(<ref refid="classhyrise_1_1access_1_1_plan_operation_1aecedc322d6f58070da10f0706ffce779" kindref="member" tooltip="Containers to store and handle input/output or rather result data. ">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(1));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref><sp/>result(std::max(left-&gt;getPositions()-&gt;size(),<sp/>right-&gt;getPositions()-&gt;size()));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::set_intersection(left-&gt;getPositions()-&gt;begin(),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left-&gt;getPositions()-&gt;end(),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;getPositions()-&gt;begin(),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;getPositions()-&gt;end(),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.begin());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><ref refid="class_shared_factory_1ac72cda135ae2e2f0b9cb9ed8b7afc5d1" kindref="member">PointerCalculator::create</ref>(left-&gt;getActualTable(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>(result.begin(),<sp/>it));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_plan_operation_1aac92e842153df9a9ae7e548ac7602009" kindref="member">addResult</ref>(tmp);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classhyrise_1_1access_1_1_merge_index_scan_1a859f8d1a9b9a5304db5fd686078ff822" refkind="member"><highlight class="normal">std::shared_ptr&lt;PlanOperation&gt;<sp/><ref refid="classhyrise_1_1access_1_1_merge_index_scan_1a859f8d1a9b9a5304db5fd686078ff822" kindref="member">MergeIndexScan::parse</ref>(Json::Value<sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_basic_parser_1a2354217ebc83a7328dd926ed6fdd5b49" kindref="member">BasicParser&lt;MergeIndexScan&gt;::parse</ref>(data);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classhyrise_1_1access_1_1_merge_index_scan_1acc649bca69471145e20c29687e98dbad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhyrise_1_1access_1_1_merge_index_scan_1acc649bca69471145e20c29687e98dbad" kindref="member">MergeIndexScan::vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;MergeIndexScan&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/access/IndexScan.cpp"/>
  </compounddef>
</doxygen>
