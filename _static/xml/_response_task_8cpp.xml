<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_response_task_8cpp" kind="file">
    <compoundname>ResponseTask.cpp</compoundname>
    <includes refid="_response_task_8h" local="yes">access/system/ResponseTask.h</includes>
    <includes local="no">thread</includes>
    <includes local="yes">json.h</includes>
    <includes local="yes">log4cxx/logger.h</includes>
    <includes local="yes">boost/lexical_cast.hpp</includes>
    <includes refid="_plan_operation_8h" local="yes">access/system/PlanOperation.h</includes>
    <includes refid="_output_task_8h" local="yes">access/system/OutputTask.h</includes>
    <includes refid="_transaction_manager_8h" local="yes">io/TransactionManager.h</includes>
    <includes refid="_papi_tracer_8h" local="yes">helper/PapiTracer.h</includes>
    <includes refid="_async_connection_8h" local="yes">net/AsyncConnection.h</includes>
    <includes refid="_abstract_table_8h" local="yes">storage/AbstractTable.h</includes>
    <includes refid="_simple_store_8h" local="yes">storage/SimpleStore.h</includes>
    <includes refid="meta__storage_8h" local="yes">storage/meta_storage.h</includes>
    <incdepgraph>
      <node id="9424">
        <label>access/system/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9397" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
        <childnode refid="9425" relation="include">
        </childnode>
      </node>
      <node id="9465">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="9396">
        <label>atomic</label>
      </node>
      <node id="9394">
        <label>src/lib/access/system/ResponseTask.cpp</label>
        <link refid="ResponseTask.cpp"/>
        <childnode refid="9395" relation="include">
        </childnode>
        <childnode refid="9418" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
        <childnode refid="9420" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
        <childnode refid="9422" relation="include">
        </childnode>
        <childnode refid="9400" relation="include">
        </childnode>
        <childnode refid="9436" relation="include">
        </childnode>
        <childnode refid="9440" relation="include">
        </childnode>
        <childnode refid="9445" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9450" relation="include">
        </childnode>
        <childnode refid="9462" relation="include">
        </childnode>
      </node>
      <node id="9431">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9432" relation="include">
        </childnode>
        <childnode refid="9433" relation="include">
        </childnode>
      </node>
      <node id="9446">
        <label>arpa/inet.h</label>
      </node>
      <node id="9466">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="9457">
        <label>functional</label>
      </node>
      <node id="9422">
        <label>access/system/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="9400" relation="include">
        </childnode>
        <childnode refid="9423" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
      </node>
      <node id="9450">
        <label>storage/SimpleStore.h</label>
        <link refid="_simple_store_8h"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9451" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9454" relation="include">
        </childnode>
      </node>
      <node id="9416">
        <label>limits</label>
      </node>
      <node id="9398">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="9399" relation="include">
        </childnode>
      </node>
      <node id="9427">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="9418" relation="include">
        </childnode>
        <childnode refid="9396" relation="include">
        </childnode>
      </node>
      <node id="9459">
        <label>iterator</label>
      </node>
      <node id="9439">
        <label>helper/Synchronized.h</label>
        <link refid="_synchronized_8h"/>
        <childnode refid="9410" relation="include">
        </childnode>
      </node>
      <node id="9421">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9435">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="9415">
        <label>cstdint</label>
      </node>
      <node id="9399">
        <label>stdint.h</label>
      </node>
      <node id="9407">
        <label>stdexcept</label>
      </node>
      <node id="9458">
        <label>numeric</label>
      </node>
      <node id="9428">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
      </node>
      <node id="9406">
        <label>string</label>
      </node>
      <node id="9463">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="9403">
        <label>map</label>
      </node>
      <node id="9440">
        <label>helper/PapiTracer.h</label>
        <link refid="_papi_tracer_8h"/>
        <childnode refid="9441" relation="include">
        </childnode>
        <childnode refid="9442" relation="include">
        </childnode>
        <childnode refid="9437" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
      </node>
      <node id="9408">
        <label>ostream</label>
      </node>
      <node id="9419">
        <label>json.h</label>
      </node>
      <node id="9400">
        <label>access/system/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="9399" relation="include">
        </childnode>
        <childnode refid="9401" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9404" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9398" relation="include">
        </childnode>
        <childnode refid="9409" relation="include">
        </childnode>
      </node>
      <node id="9456">
        <label>helper/vector_helpers.h</label>
        <link refid="vector__helpers_8h"/>
        <childnode refid="9437" relation="include">
        </childnode>
        <childnode refid="9457" relation="include">
        </childnode>
        <childnode refid="9458" relation="include">
        </childnode>
        <childnode refid="9459" relation="include">
        </childnode>
      </node>
      <node id="9411">
        <label>condition_variable</label>
      </node>
      <node id="9449">
        <label>ebb/ebb.h</label>
      </node>
      <node id="9405">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9399" relation="include">
        </childnode>
        <childnode refid="9408" relation="include">
        </childnode>
      </node>
      <node id="9433">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="9434" relation="include">
        </childnode>
        <childnode refid="9435" relation="include">
        </childnode>
      </node>
      <node id="9453">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
      </node>
      <node id="9461">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9438" relation="include">
        </childnode>
      </node>
      <node id="9434">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="9402">
        <label>vector</label>
      </node>
      <node id="9460">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9438" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9461" relation="include">
        </childnode>
      </node>
      <node id="9464">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="9404">
        <label>utility</label>
      </node>
      <node id="9429">
        <label>array</label>
      </node>
      <node id="9444">
        <label>sstream</label>
      </node>
      <node id="9454">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9455" relation="include">
        </childnode>
        <childnode refid="9460" relation="include">
        </childnode>
      </node>
      <node id="9417">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9401">
        <label>time.h</label>
      </node>
      <node id="9445">
        <label>net/AsyncConnection.h</label>
        <link refid="_async_connection_8h"/>
        <childnode refid="9446" relation="include">
        </childnode>
        <childnode refid="9442" relation="include">
        </childnode>
        <childnode refid="9447" relation="include">
        </childnode>
        <childnode refid="9448" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9412" relation="include">
        </childnode>
        <childnode refid="9449" relation="include">
        </childnode>
      </node>
      <node id="9447">
        <label>cstdlib</label>
      </node>
      <node id="9443">
        <label>helper/stringhelpers.h</label>
        <link refid="stringhelpers_8h"/>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9444" relation="include">
        </childnode>
      </node>
      <node id="9442">
        <label>sys/time.h</label>
      </node>
      <node id="9423">
        <label>access/system/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
      </node>
      <node id="9448">
        <label>ev.h</label>
      </node>
      <node id="9438">
        <label>unordered_map</label>
      </node>
      <node id="9430">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="9425">
        <label>access/system/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
      </node>
      <node id="9397">
        <label>mutex</label>
      </node>
      <node id="9432">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
      </node>
      <node id="9426">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
        <childnode refid="9428" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
        <childnode refid="9431" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
      </node>
      <node id="9451">
        <label>storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="9452" relation="include">
        </childnode>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9453" relation="include">
        </childnode>
      </node>
      <node id="9418">
        <label>thread</label>
      </node>
      <node id="9414">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9402" relation="include">
        </childnode>
      </node>
      <node id="9455">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9456" relation="include">
        </childnode>
      </node>
      <node id="9412">
        <label>net/AbstractConnection.h</label>
        <link refid="_abstract_connection_8h"/>
        <childnode refid="9406" relation="include">
        </childnode>
      </node>
      <node id="9462">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="9407" relation="include">
        </childnode>
        <childnode refid="9463" relation="include">
        </childnode>
        <childnode refid="9464" relation="include">
        </childnode>
        <childnode refid="9465" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
        <childnode refid="9466" relation="include">
        </childnode>
      </node>
      <node id="9437">
        <label>algorithm</label>
      </node>
      <node id="9420">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="9441">
        <label>stdio.h</label>
      </node>
      <node id="9452">
        <label>cstring</label>
      </node>
      <node id="9395">
        <label>access/system/ResponseTask.h</label>
        <link refid="_response_task_8h"/>
        <childnode refid="9396" relation="include">
        </childnode>
        <childnode refid="9397" relation="include">
        </childnode>
        <childnode refid="9398" relation="include">
        </childnode>
        <childnode refid="9400" relation="include">
        </childnode>
        <childnode refid="9412" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
      </node>
      <node id="9436">
        <label>io/TransactionManager.h</label>
        <link refid="_transaction_manager_8h"/>
        <childnode refid="9437" relation="include">
        </childnode>
        <childnode refid="9396" relation="include">
        </childnode>
        <childnode refid="9403" relation="include">
        </childnode>
        <childnode refid="9397" relation="include">
        </childnode>
        <childnode refid="9438" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
        <childnode refid="9439" relation="include">
        </childnode>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9405" relation="include">
        </childnode>
      </node>
      <node id="9410">
        <label>memory</label>
      </node>
      <node id="9409">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="9402" relation="include">
        </childnode>
        <childnode refid="9397" relation="include">
        </childnode>
        <childnode refid="9410" relation="include">
        </childnode>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9406" relation="include">
        </childnode>
      </node>
      <node id="9413">
        <label>io/TXContext.h</label>
        <link refid="_t_x_context_8h"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structhyrise_1_1access_1_1json__functor" prot="public">hyrise::access::json_functor</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_response_task_8h" kindref="compound">access/system/ResponseTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;json.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log4cxx/logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/lexical_cast.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plan_operation_8h" kindref="compound">access/system/PlanOperation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_output_task_8h" kindref="compound">access/system/OutputTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_transaction_manager_8h" kindref="compound">io/TransactionManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_papi_tracer_8h" kindref="compound">helper/PapiTracer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_async_connection_8h" kindref="compound">net/AsyncConnection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_store_8h" kindref="compound">storage/SimpleStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta__storage_8h" kindref="compound">storage/meta_storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">log4cxx::LoggerPtr<sp/>_logger(log4cxx::Logger::getLogger(</highlight><highlight class="stringliteral">&quot;hyrise.net&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="30" refid="structhyrise_1_1access_1_1json__functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1access_1_1json__functor" kindref="compound">json_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="structhyrise_1_1access_1_1json__functor_1a7f97a703d456205a1ae0eb532a6fdf95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Json::Value<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a7f97a703d456205a1ae0eb532a6fdf95" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structhyrise_1_1access_1_1json__functor_1a045f1697484e1bf7be30014d79ad4f41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a045f1697484e1bf7be30014d79ad4f41" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="34" refid="structhyrise_1_1access_1_1json__functor_1ab3dc1803cd3527823d51bca16ae817a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1json__functor_1ab3dc1803cd3527823d51bca16ae817a9" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="35" refid="structhyrise_1_1access_1_1json__functor_1ab89ef025394be6d29aa170545bd3cba5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1json__functor_1ab89ef025394be6d29aa170545bd3cba5" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structhyrise_1_1access_1_1json__functor_1a7107f4304627d4ab00abb54a63c56215" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a7107f4304627d4ab00abb54a63c56215" kindref="member">json_functor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t):<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a045f1697484e1bf7be30014d79ad4f41" kindref="member">table</ref>(t),<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1ab3dc1803cd3527823d51bca16ae817a9" kindref="member">column</ref>(0),<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1ab89ef025394be6d29aa170545bd3cba5" kindref="member">row</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="40" refid="structhyrise_1_1access_1_1json__functor_1a95a82f9838b02356ebefeb85a73839f2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a7f97a703d456205a1ae0eb532a6fdf95" kindref="member">value_type</ref><sp/><ref refid="structhyrise_1_1access_1_1json__functor_1a95a82f9838b02356ebefeb85a73839f2" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Json::Value(<ref refid="structhyrise_1_1access_1_1json__functor_1a045f1697484e1bf7be30014d79ad4f41" kindref="member">table</ref>-&gt;template<sp/>getValue&lt;R&gt;(<ref refid="structhyrise_1_1access_1_1json__functor_1ab3dc1803cd3527823d51bca16ae817a9" kindref="member">column</ref>,<sp/><ref refid="structhyrise_1_1access_1_1json__functor_1ab89ef025394be6d29aa170545bd3cba5" kindref="member">row</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="46" refid="namespacehyrise_1_1access_1ade17a01f1fe8c19c699b695383fd38c0" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="namespacehyrise_1_1access_1ade17a01f1fe8c19c699b695383fd38c0" kindref="member">generateRowsJsonT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>transmitLimit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>transmitOffset)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">hyrise::storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1json__functor" kindref="compound">json_functor&lt;T&gt;</ref><sp/>fun(table);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>Json::Value<sp/>rows(Json::arrayValue);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>table-&gt;size();<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Align<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;<sp/>transmitOffset)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>if<sp/>limit<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(transmitLimit<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>row<sp/>==<sp/>(transmitOffset<sp/>+<sp/>transmitLimit))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>fun.<ref refid="structhyrise_1_1access_1_1json__functor_1ab89ef025394be6d29aa170545bd3cba5" kindref="member">row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>json_row(Json::arrayValue);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>table-&gt;columnCount();<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fun.<ref refid="structhyrise_1_1access_1_1json__functor_1ab3dc1803cd3527823d51bca16ae817a9" kindref="member">column</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>json_row.append(ts(table-&gt;typeOfColumn(col),<sp/>fun));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>rows.append(json_row);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rows;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="namespacehyrise_1_1access_1adcf697c1298c1645ade63323e0e55f30" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="namespacehyrise_1_1access_1adcf697c1298c1645ade63323e0e55f30" kindref="member">generateRowsJson</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>AbstractTable&gt;&amp;<sp/>table,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>transmitLimit,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>transmitOffset)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>store<sp/>=<sp/>std::dynamic_pointer_cast&lt;const<sp/>hyrise::storage::SimpleStore&gt;(table))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1ade17a01f1fe8c19c699b695383fd38c0" kindref="member">generateRowsJsonT</ref>(store,<sp/>transmitLimit,<sp/>transmitOffset);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1ade17a01f1fe8c19c699b695383fd38c0" kindref="member">generateRowsJsonT</ref>(table,<sp/>transmitLimit,<sp/>transmitOffset);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classhyrise_1_1access_1_1_response_task_1af970af7fef8deccf059fd6bc2f7310c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1af970af7fef8deccf059fd6bc2f7310c0" kindref="member">ResponseTask::vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ResponseTask&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classhyrise_1_1access_1_1_response_task_1ae174d914351da3ea768c0f6be7469dd2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ae174d914351da3ea768c0f6be7469dd2" kindref="member">ResponseTask::registerPlanOperation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;PlanOperation&gt;&amp;<sp/>planOp)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1access_1_1performance__attributes__t" kindref="compound">performance_attributes_t</ref>*<sp/>perf<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1access_1_1performance__attributes__t" kindref="compound">performance_attributes_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>std::vector&lt;hyrise_int_t&gt;*<sp/>genKeys<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise_int_t&gt;;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>planOp-&gt;setPerformanceData(perf);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>planOp-&gt;setGeneratedKeysData(genKeys);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>responseTaskPtr<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="classhyrise_1_1access_1_1_response_task" kindref="compound">ResponseTask</ref>&gt;(shared_from_this());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>planOp-&gt;setResponseTask(responseTaskPtr);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ace91324a3a265ef0194a650beb79046e" kindref="member">perfMutex</ref>.lock();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ab7d38e341b9beef10fa004082d229bd1" kindref="member">performance_data</ref>.push_back(std::unique_ptr&lt;performance_attributes_t&gt;(perf));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a9b21ab4ab34506022eb0c31888316144" kindref="member">_generatedKeyRefs</ref>.push_back(std::unique_ptr&lt;std::vector&lt;hyrise_int_t&gt;&gt;(genKeys));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ace91324a3a265ef0194a650beb79046e" kindref="member">perfMutex</ref>.unlock();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classhyrise_1_1access_1_1_response_task_1a051aacb255ecb84b8348b7b853156a7e" refkind="member"><highlight class="normal">std::shared_ptr&lt;PlanOperation&gt;<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a051aacb255ecb84b8348b7b853156a7e" kindref="member">ResponseTask::getResultTask</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_task_1a75f0a4940cdd338c2ba538200bfcdddf" kindref="member">getDependencyCount</ref>()<sp/>&gt;<sp/><sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::dynamic_pointer_cast&lt;<ref refid="classhyrise_1_1access_1_1_plan_operation" kindref="compound">PlanOperation</ref>&gt;(<ref refid="class_task_1ab25d10a171c2efc2dcdf4ec7b81d148d" kindref="member">_dependencies</ref>[0]);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classhyrise_1_1access_1_1_response_task_1ae328ee60f1b1fb1e90df493b8b6d7516" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1access_1a06dfec12b1bcee8435455d6a17aa6e9a" kindref="member">task_states_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ae328ee60f1b1fb1e90df493b8b6d7516" kindref="member">ResponseTask::getState</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dep:<sp/><ref refid="class_task_1ab25d10a171c2efc2dcdf4ec7b81d148d" kindref="member">_dependencies</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ot<sp/>=<sp/>std::dynamic_pointer_cast&lt;OutputTask&gt;(dep))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ot-&gt;getState()<sp/>!=<sp/><ref refid="namespacehyrise_1_1access_1a06dfec12b1bcee8435455d6a17aa6e9aadc41ed3113dfaa5001454c6523d10063" kindref="member">OpSuccess</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1a06dfec12b1bcee8435455d6a17aa6e9aafc363b2250c03601b3c28a2816fd9341" kindref="member">OpFail</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1a06dfec12b1bcee8435455d6a17aa6e9aadc41ed3113dfaa5001454c6523d10063" kindref="member">OpSuccess</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classhyrise_1_1access_1_1_response_task_1a104128290c6abeaae5a94d71bb46c68f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a104128290c6abeaae5a94d71bb46c68f" kindref="member">ResponseTask::operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="epoch_8h_1a18c258fe5c1fdd9c998d1c4bc0d39560" kindref="member">epoch_t</ref><sp/>responseStart<sp/>=<sp/><ref refid="epoch_8cpp_1a1ebaf5c8f80fb2e6168da879e70f1ed5" kindref="member">get_epoch_nanoseconds</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>Json::Value<sp/>response;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_task_1a75f0a4940cdd338c2ba538200bfcdddf" kindref="member">getDependencyCount</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fallback_tracer" kindref="compound">PapiTracer</ref><sp/>pt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.<ref refid="class_fallback_tracer_1a84350e4813011b3bc1d509ebbaed6069" kindref="member">addEvent</ref>(</highlight><highlight class="stringliteral">&quot;PAPI_TOT_CYC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pt.<ref refid="class_fallback_tracer_1a9e3aa7b6b579ce36e33a710885add6ea" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>predecessor<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a051aacb255ecb84b8348b7b853156a7e" kindref="member">getResultTask</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>result<sp/>=<sp/>predecessor-&gt;getResultTable();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1access_1_1_response_task_1ae328ee60f1b1fb1e90df493b8b6d7516" kindref="member">getState</ref>()<sp/>!=<sp/><ref refid="namespacehyrise_1_1access_1a06dfec12b1bcee8435455d6a17aa6e9aafc363b2250c03601b3c28a2816fd9341" kindref="member">OpFail</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___transaction_1gacebb2b31d01217f3c096223e9c3e4fde" kindref="member">tx::TransactionManager::isRunningTransaction</ref>(<ref refid="classhyrise_1_1access_1_1_response_task_1a355d6a4ab42e95af891fd15f0fedf0fb" kindref="member">_txContext</ref>.<ref refid="structhyrise_1_1tx_1_1_t_x_context_1adc6aab9c88094904a353b4355f876e24" kindref="member">tid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;session_context&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(<ref refid="classhyrise_1_1access_1_1_response_task_1a355d6a4ab42e95af891fd15f0fedf0fb" kindref="member">_txContext</ref>.<ref refid="structhyrise_1_1tx_1_1_t_x_context_1adc6aab9c88094904a353b4355f876e24" kindref="member">tid</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>json_header(Json::arrayValue);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>result-&gt;columnCount();<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>colname(result-&gt;nameOfColumn(col));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_header.append(colname);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>complete<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;real_size&quot;</highlight><highlight class="normal">]<sp/>=<sp/>result-&gt;size();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">]<sp/>=<sp/><ref refid="namespacehyrise_1_1access_1adcf697c1298c1645ade63323e0e55f30" kindref="member">generateRowsJson</ref>(result,<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a0abad40f4049a39eb8863d5373d65d06" kindref="member">_transmitLimit</ref>,<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ad560f349211ac0638870310ca175f61f" kindref="member">_transmitOffset</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;header&quot;</highlight><highlight class="normal">]<sp/>=<sp/>json_header;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>Performance<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>json_perf(Json::arrayValue);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>attr:<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1ab7d38e341b9beef10fa004082d229bd1" kindref="member">performance_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>element;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;papi_event&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(attr-&gt;papiEvent);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((Json::UInt64)<sp/>attr-&gt;duration);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((Json::UInt64)<sp/>attr-&gt;data);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(attr-&gt;name);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(attr-&gt;operatorId);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;startTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(attr-&gt;startTime<sp/>-<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a586b132f9836f0d670dd5b78949b6995" kindref="member">queryStart</ref>)<sp/>/<sp/>1000000);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;endTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(attr-&gt;endTime<sp/>-<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a586b132f9836f0d670dd5b78949b6995" kindref="member">queryStart</ref>)<sp/>/<sp/>1000000);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element[</highlight><highlight class="stringliteral">&quot;executingThread&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(attr-&gt;executingThread);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json_perf.append(element);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pt.<ref refid="class_fallback_tracer_1af4ee20c73627dc911dac5c7b319e3f73" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>responseElement;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((Json::UInt64)<sp/>pt.<ref refid="class_fallback_tracer_1af1c617eeaf75d5c6737f849fe0e2bbd7" kindref="member">value</ref>(</highlight><highlight class="stringliteral">&quot;PAPI_TOT_CYC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(</highlight><highlight class="stringliteral">&quot;ResponseTask&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(</highlight><highlight class="stringliteral">&quot;respond&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;startTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(responseStart<sp/>-<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a586b132f9836f0d670dd5b78949b6995" kindref="member">queryStart</ref>)<sp/>/<sp/>1000000);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;endTime&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(<ref refid="epoch_8cpp_1a1ebaf5c8f80fb2e6168da879e70f1ed5" kindref="member">get_epoch_nanoseconds</ref>()<sp/>-<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a586b132f9836f0d670dd5b78949b6995" kindref="member">queryStart</ref>)<sp/>/<sp/>1000000);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>threadId<sp/>=<sp/>boost::lexical_cast&lt;std::string&gt;(std::this_thread::get_id());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>responseElement[</highlight><highlight class="stringliteral">&quot;executingThread&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(threadId);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>json_perf.append(responseElement);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;performanceData&quot;</highlight><highlight class="normal">]<sp/>=<sp/>json_perf;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>jsonKeys(Json::arrayValue);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a9b21ab4ab34506022eb0c31888316144" kindref="member">_generatedKeyRefs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>key<sp/>:<sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>element(key);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonKeys.append(element);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;generatedKeys&quot;</highlight><highlight class="normal">]<sp/>=<sp/>jsonKeys;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;affectedRows&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value(<ref refid="classhyrise_1_1access_1_1_response_task_1a4c5de70e94a01a653db98ad6d566dce8" kindref="member">_affectedRows</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG4CXX_DEBUG(_logger,<sp/></highlight><highlight class="stringliteral">&quot;Table<sp/>Use<sp/>Count:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>result.use_count());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classhyrise_1_1access_1_1_response_task_1a783a0fa312c3706ef5d37e9931429285" kindref="member">_error_messages</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>errors;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>msg:<sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a783a0fa312c3706ef5d37e9931429285" kindref="member">_error_messages</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errors.append(Json::Value(msg));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>response[</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">]<sp/>=<sp/>errors;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_response_task_1a7117627a706b8872164794175e7e5fc4" kindref="member">connection</ref>-&gt;<ref refid="classhyrise_1_1net_1_1_abstract_connection_1a5a81423c8555d550b89758550d4c5e6f" kindref="member">respond</ref>(response.toStyledString());</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/system/ResponseTask.cpp"/>
  </compounddef>
</doxygen>
