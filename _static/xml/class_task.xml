<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_task" kind="class" prot="public" abstract="yes">
    <compoundname>Task</compoundname>
    <basecompoundref refid="class_task_done_observer" prot="public" virt="non-virtual">TaskDoneObserver</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; Task &gt;</basecompoundref>
    <derivedcompoundref refid="classhyrise_1_1access_1_1_output_task" prot="public" virt="non-virtual">hyrise::access::OutputTask</derivedcompoundref>
    <derivedcompoundref refid="classhyrise_1_1access_1_1_response_task" prot="public" virt="non-virtual">hyrise::access::ResponseTask</derivedcompoundref>
    <derivedcompoundref refid="classhyrise_1_1net_1_1_abstract_request_handler" prot="public" virt="non-virtual">hyrise::net::AbstractRequestHandler</derivedcompoundref>
    <derivedcompoundref refid="class_sleep_task" prot="public" virt="non-virtual">SleepTask</derivedcompoundref>
    <derivedcompoundref refid="class_sync_task" prot="public" virt="non-virtual">SyncTask</derivedcompoundref>
    <derivedcompoundref refid="class_wait_task" prot="public" virt="non-virtual">WaitTask</derivedcompoundref>
    <includes refid="_task_8h" local="no">Task.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_task_1afedc05b69ebd406b7fdb42391f4eef2a" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Task::DEFAULT_PRIORITY</definition>
        <argsstring></argsstring>
        <name>DEFAULT_PRIORITY</name>
        <initializer>= 999</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="46" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1afb865392382a2c3f1a13e962d5ba3b1e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Task::HIGH_PRIORITY</definition>
        <argsstring></argsstring>
        <name>HIGH_PRIORITY</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="47" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1af0efeb0207f95415ca556e19bc62d60e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Task::NO_PREFERRED_CORE</definition>
        <argsstring></argsstring>
        <name>NO_PREFERRED_CORE</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="48" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a38563fd60f45377e73b8030945f9fdc8" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Task::NO_PREFERRED_NODE</definition>
        <argsstring></argsstring>
        <name>NO_PREFERRED_NODE</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="49" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a8df8b7cbdf23d35317488316bba3ebe2" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Task::SESSION_ID_NOT_SET</definition>
        <argsstring></argsstring>
        <name>SESSION_ID_NOT_SET</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="50" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_task_1ab25d10a171c2efc2dcdf4ec7b81d148d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Task&gt; &gt; Task::_dependencies</definition>
        <argsstring></argsstring>
        <name>_dependencies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="53" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a7f7f81090a389fd5cf79747e165fe0f4" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_task_ready_observer" kindref="compound">TaskReadyObserver</ref> * &gt;</type>
        <definition>std::vector&lt;TaskReadyObserver *&gt; Task::_readyObservers</definition>
        <argsstring></argsstring>
        <name>_readyObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="54" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1af277c65727e285efbf965633851ec9d8" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_task_done_observer" kindref="compound">TaskDoneObserver</ref> * &gt;</type>
        <definition>std::vector&lt;TaskDoneObserver *&gt; Task::_doneObservers</definition>
        <argsstring></argsstring>
        <name>_doneObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="55" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a432b54ea5cdbf8f875c756c70710b69e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_dependencyWaitCount</definition>
        <argsstring></argsstring>
        <name>_dependencyWaitCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="57" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a10259a6dde7645e32c32262818339c8c" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Task::_depMutex</definition>
        <argsstring></argsstring>
        <name>_depMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="59" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a6a0d1fa3b37cb2e7896ea23049798b36" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Task::_observerMutex</definition>
        <argsstring></argsstring>
        <name>_observerMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="61" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a778ed5c766f4098184c31a656fe471ed" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Task::_notifyMutex</definition>
        <argsstring></argsstring>
        <name>_notifyMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="63" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1aa7b21c6482b905c04f354c738341beb3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_preferredCore</definition>
        <argsstring></argsstring>
        <name>_preferredCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="65" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1abeb3d34a483638fad8c93bb3baff50f5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_preferredNode</definition>
        <argsstring></argsstring>
        <name>_preferredNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="67" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1ae86d264d411c0a0476085734c27a84b0" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_actualNode</definition>
        <argsstring></argsstring>
        <name>_actualNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="69" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a6fbb4614f260802e6204e339f4480004" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_priority</definition>
        <argsstring></argsstring>
        <name>_priority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="71" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a5515868bfb7db5ad936cafdf6b8e65c7" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_sessionId</definition>
        <argsstring></argsstring>
        <name>_sessionId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="73" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_task_1a8909ff1653cd9a685af7256976e4e334" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Task::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="75" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_task_1a0ca53354bdc006762a0fda68c64f7608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Task::Task</definition>
        <argsstring>()</argsstring>
        <name>Task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="78" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a7bff79cc05fa4511c72048d33591503b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Task::~Task</definition>
        <argsstring>()</argsstring>
        <name>~Task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="79" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1ae3a87b98fa47e03ab2f48b53aa257b69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Task::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classhyrise_1_1tx_1_1_request_handler_1af504b2ed3c56d7e368ef80b2216f79b1">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_operation_listing_handler_1ac8ea8199de6f2e86b610666917593457">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1net_1_1_route_request_handler_1a59bff938a7ad3581729628134afbfcd2">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1net_1_1_static_request_handler_1ab5bff0a1f49e8bfc47fd4008a895bdc7">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_request_parse_task_1ae9998cfb7a4e562a8e98a630eb3d904d">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_plan_operation_1abbdaa1c0b1d05c66459d7a94e0f67ca7">operator()</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_response_task_1a104128290c6abeaae5a94d71bb46c68f">operator()</reimplementedby>
        <reimplementedby refid="class_wait_task_1aea03a94ba580a71727e52e7f74547400">operator()</reimplementedby>
        <reimplementedby refid="class_sleep_task_1a15906e45427ac76e8785bf2f16d1ba5e">operator()</reimplementedby>
        <reimplementedby refid="class_sync_task_1ac3b5a52cb759a0f1a92c41d21065a17f">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="80" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a1a5953e7f9dfc732ce1f3d8a914439b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double Task::getQueryDuration</definition>
        <argsstring>() const </argsstring>
        <name>getQueryDuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="85" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a091bff6c1c11bfc202e53280b5af62e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::string</type>
        <definition>virtual const std::string Task::vname</definition>
        <argsstring>()=0</argsstring>
        <name>vname</name>
        <reimplementedby refid="classhyrise_1_1access_1_1_radix_join_1a16fd091c38d05aeb6ace10ba420a61ab">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_barrier_1a81a0a1fc40d6c2dc15887faf3897eb63">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_projection_scan_1aa07cf7b35fcc21c9976ec36ccc0d887b">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_merge_hash_tables_1a53d63b5530ce6a3d9e0cb7cd7c2cec88">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_unload_all_1a08a44316d3b2aa19f9cfb9061289546f">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_table_unload_1a889c6fad7b68e0869cd0ee5c943b630d">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_sort_scan_1a30639736823f361d93e1a6fea636418b">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_create_radix_table_1a8e8c8482473370b920dee430a646c3f7">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_prefix_sum_1a9c6ab0e23aa10cb042c362e3ccfdf305">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_merge_table_1a9f9e6890dbf4227898188430fabb9414">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_layout_table_load_1ac6e33aa67b47c4c159e94f560e766008">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_replace_table_1abcec25dcf29be25eef118907c35bf747">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_load_file_1a267e4b3e3f938f29cdfe1aa15306079c">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_smallest_table_scan_1adabe3bdaa5118947e566ebaf5b232d94">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_operation_listing_handler_1a7b0e3b83f248195e5f670d05abd8c223">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_materializing_scan_1a5fc661aa0ade646cb773ae586ff437d0">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_settings_operation_1a36623757e01797ba93e1ebc767c6728f">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_set_table_1a9057707c0418b2c033c6191acbaf34a1">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_get_table_1a446c1cf188722c01ac927f519e6e70d3">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_distinct_1a0de57169832458856dc08c97c43ade4e">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_table_scan_1a34715439538cebd07c72150da466bde6">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_simple_raw_table_scan_1a9d5b748cc01f2d46351d1aa3bf6c6cec">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1net_1_1_route_request_handler_1adc16d5503d3c98e656f5049181f265b7">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_simple_table_scan_1aa65dcb40c824cdeb0c6a7151a454127d">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_no_op_1ae63b3fd97cb322b1b76f0159c68cec5e">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_layout_table_1ae12ddc8d8394a80528c2ab5341e4fe54">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_table_load_1a322287a70239ec6f7ed0a06fb31a8d96">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_intersect_positions_1a406430e70dcbbb8ac2552e82f54b1b87">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1net_1_1_static_request_handler_1a5f024b6af5e4e93616b4c842147ae051">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1tx_1_1_transaction_status_handler_1a28c335dc77d8ee68c93783c6debb1d91">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_index_scan_1aa368e43a0dda88a5e792aec38b7737cf">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_request_parse_task_1af38a2b8411d78ab9cc71bae727182e74">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_radix_cluster_1afafbac487407d0789412a58a654ddbef">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_nested_loop_equi_join_1afad5334d444177f5d2a8f51ab3e8b0cf">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_layout_single_table_1a167284d6e06034167bb52d6bd141e10e">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_hash_build_1ab4796b44557f92bb6b4b368bd97e9e1d">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_merge_prefix_sum_1a6ab4f0ebd84fb649333107aaf650a380">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_multiply_ref_field_1a6ab919e78c5732b3370261626072bd61">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_join_scan_1a36cf27adb59e3b65b9889260e91cc89a">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_group_by_scan_1a4c5eff0de829ab0665c38c18693acd0d">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_histogram_1ab7868a9f22654d90599c6f9a6f19647d">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_response_task_1af970af7fef8deccf059fd6bc2f7310c0">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_hash_join_probe_1a54e429e7f9aef4422a93348bc536aa87">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_merge_index_scan_1acc649bca69471145e20c29687e98dbad">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_expression_scan_1ad7edf973544afa99b7d2c553ee359f74">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_update_scan_1a60a70e820110ee1d2a7112f7ccb37269">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_plan_operation_1a9e27b58b694c0b501f18002fe3484767">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_merge_join_1a3b3b1ee43edca5b11e00bfcb4017e48a">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_hash_value_join_1adfd83d85e62fbdea52cdc89e38c08c74">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_hash_value_join_1adfd83d85e62fbdea52cdc89e38c08c74">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_histogram2nd_pass_1a8da236ddb9e626b00bdddd215338ea1c">vname</reimplementedby>
        <reimplementedby refid="classhyrise_1_1access_1_1_radix_cluster2nd_pass_1ab8a668db9f820c550e60704f80227327">vname</reimplementedby>
        <reimplementedby refid="class_wait_task_1a40b74246a7e185592e27013b1ffc20d1">vname</reimplementedby>
        <reimplementedby refid="class_sleep_task_1a325f4aa0809a90d8bf8a5d8f2d971488">vname</reimplementedby>
        <reimplementedby refid="class_sync_task_1a090c88df906b2c24fce6b720b6430f5a">vname</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="92"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a769a8fb688ddaed2870faeea61d84ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Task::hasSuccessors</definition>
        <argsstring>()</argsstring>
        <name>hasSuccessors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="96" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1aa9e65a15e122de040bb914ab144577b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::addDependency</definition>
        <argsstring>(std::shared_ptr&lt; Task &gt; dependency)</argsstring>
        <name>addDependency</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt;</type>
          <declname>dependency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="100" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a75f0a4940cdd338c2ba538200bfcdddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getDependencyCount</definition>
        <argsstring>()</argsstring>
        <name>getDependencyCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="104" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a9726ca1f4c6712a3516cb05121479f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::addReadyObserver</definition>
        <argsstring>(TaskReadyObserver *observer)</argsstring>
        <name>addReadyObserver</name>
        <param>
          <type><ref refid="class_task_ready_observer" kindref="compound">TaskReadyObserver</ref> *</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="108" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a0e4ebf7ad5313f027aa16d250685604a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::addDoneObserver</definition>
        <argsstring>(TaskDoneObserver *observer)</argsstring>
        <name>addDoneObserver</name>
        <param>
          <type><ref refid="class_task_done_observer" kindref="compound">TaskDoneObserver</ref> *</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="112" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1ab7307de77d5baf3dfec0269996d81543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Task::isReady</definition>
        <argsstring>()</argsstring>
        <name>isReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="116" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1aa729cd30e7135f2851dd625679aa8556" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Task::notifyDone</definition>
        <argsstring>(std::shared_ptr&lt; Task &gt; task)</argsstring>
        <name>notifyDone</name>
        <reimplements refid="class_task_done_observer_1abf104d20e7cfa1b0fd8a80edab8bc05b">notifyDone</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_task" kindref="compound">Task</ref> &gt;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="120" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="63" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a793f3db3f39a9ea7352078f235ee7843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::notifyReadyObservers</definition>
        <argsstring>()</argsstring>
        <name>notifyReadyObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="124" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a82157fda3766f4331966baf74e8206fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::notifyDoneObservers</definition>
        <argsstring>()</argsstring>
        <name>notifyDoneObservers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="128" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a1b8e520f60e9f41a3c1331e4e9e4b3ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setPreferredCore</definition>
        <argsstring>(int core)</argsstring>
        <name>setPreferredCore</name>
        <param>
          <type>int</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="132" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a4a3f6f336369d8e2d6a92fae0690c143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getPreferredCore</definition>
        <argsstring>()</argsstring>
        <name>getPreferredCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="136" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1aeb0d741352700686296e742bc21e4362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::lockForNotifications</definition>
        <argsstring>()</argsstring>
        <name>lockForNotifications</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="140" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a35af9de734c94c39981a2b199790e288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Task::unlockForNotifications</definition>
        <argsstring>()</argsstring>
        <name>unlockForNotifications</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="141" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a48d72f6b05c55e6fed32f137d5d17cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getActualNode</definition>
        <argsstring>() const </argsstring>
        <name>getActualNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="143" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1af9b0b825e5ffb8de9c6a1a71438f4b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setActualNode</definition>
        <argsstring>(int actualNode)</argsstring>
        <name>setActualNode</name>
        <param>
          <type>int</type>
          <declname>actualNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="147" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1ad775abf82380305e56bb9a1847f76ece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getPreferredNode</definition>
        <argsstring>() const </argsstring>
        <name>getPreferredNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="151" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a59960c60425c5d5ed2e8ff52e4538ff2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setPreferredNode</definition>
        <argsstring>(int preferredNode)</argsstring>
        <name>setPreferredNode</name>
        <param>
          <type>int</type>
          <declname>preferredNode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="155" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a4d9b4764c7365be48eee4393e87ca92b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getPriority</definition>
        <argsstring>() const </argsstring>
        <name>getPriority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="159" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1acc93078022eabed8325f164e4eedc37a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setPriority</definition>
        <argsstring>(int priority)</argsstring>
        <name>setPriority</name>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="163" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a85363a10fc3b2272b30e1c24846ab237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getId</definition>
        <argsstring>() const </argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="167" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a6c3e7a3b19e50d8fcad5a084ef6b7312" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setId</definition>
        <argsstring>(int id)</argsstring>
        <name>setId</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="171" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a28ea4fab3bbd5b803f9aa7e4b4300820" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Task::getSessionId</definition>
        <argsstring>() const </argsstring>
        <name>getSessionId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="176" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_task_1a688bd7a4f5f659d049667c08fd330cfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Task::setSessionId</definition>
        <argsstring>(int sessionId)</argsstring>
        <name>setSessionId</name>
        <param>
          <type>int</type>
          <declname>sessionId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="181" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="180" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3726">
        <label>hyrise::access::TableUnload</label>
        <link refid="classhyrise_1_1access_1_1_table_unload"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3733">
        <label>hyrise::net::AbstractRequestHandler</label>
        <link refid="classhyrise_1_1net_1_1_abstract_request_handler"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3734">
        <label>hyrise::access::OperationListingHandler</label>
        <link refid="classhyrise_1_1access_1_1_operation_listing_handler"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3717">
        <label>hyrise::access::SetTable</label>
        <link refid="classhyrise_1_1access_1_1_set_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3737">
        <label>hyrise::net::StaticRequestHandler</label>
        <link refid="classhyrise_1_1net_1_1_static_request_handler"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3742">
        <label>WaitTask</label>
        <link refid="class_wait_task"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3703">
        <label>hyrise::access::HashJoinProbe</label>
        <link refid="classhyrise_1_1access_1_1_hash_join_probe"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3695">
        <label>hyrise::access::MergeStore</label>
        <link refid="classhyrise_1_1access_1_1_merge_store"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3674">
        <label>hyrise::access::CreateRadixTable</label>
        <link refid="classhyrise_1_1access_1_1_create_radix_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3673">
        <label>hyrise::access::CreateIndex</label>
        <link refid="classhyrise_1_1access_1_1_create_index"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3722">
        <label>hyrise::access::StartProfiling</label>
        <link refid="classhyrise_1_1access_1_1_start_profiling"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3666">
        <label>TaskDoneObserver</label>
        <link refid="class_task_done_observer"/>
      </node>
      <node id="3680">
        <label>hyrise::access::HashValueJoin&lt; T &gt;</label>
        <link refid="classhyrise_1_1access_1_1_hash_value_join"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3683">
        <label>hyrise::access::IntersectPositions</label>
        <link refid="classhyrise_1_1access_1_1_intersect_positions"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3697">
        <label>hyrise::access::MultiplyRefField</label>
        <link refid="classhyrise_1_1access_1_1_multiply_ref_field"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3727">
        <label>hyrise::access::UnionAll</label>
        <link refid="classhyrise_1_1access_1_1_union_all"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3715">
        <label>hyrise::access::Rollback</label>
        <link refid="classhyrise_1_1access_1_1_rollback"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3740">
        <label>SleepTask</label>
        <link refid="class_sleep_task"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3699">
        <label>hyrise::access::NoOp</label>
        <link refid="classhyrise_1_1access_1_1_no_op"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3709">
        <label>hyrise::access::RadixCluster2ndPass</label>
        <link refid="classhyrise_1_1access_1_1_radix_cluster2nd_pass"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3718">
        <label>hyrise::access::SettingsOperation</label>
        <link refid="classhyrise_1_1access_1_1_settings_operation"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3705">
        <label>hyrise::access::Histogram2ndPass</label>
        <link refid="classhyrise_1_1access_1_1_histogram2nd_pass"/>
        <childnode refid="3704" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3688">
        <label>hyrise::access::LoadDumpedTable</label>
        <link refid="classhyrise_1_1access_1_1_load_dumped_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3710">
        <label>hyrise::access::SimpleTableScan</label>
        <link refid="classhyrise_1_1access_1_1_simple_table_scan"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3712">
        <label>hyrise::access::ProjectionScan</label>
        <link refid="classhyrise_1_1access_1_1_projection_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3736">
        <label>hyrise::net::RouteRequestHandler</label>
        <link refid="classhyrise_1_1net_1_1_route_request_handler"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3689">
        <label>hyrise::access::LoadFile</label>
        <link refid="classhyrise_1_1access_1_1_load_file"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3685">
        <label>hyrise::access::LayoutSingleTable</label>
        <link refid="classhyrise_1_1access_1_1_layout_single_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3714">
        <label>hyrise::access::ReplaceTable</label>
        <link refid="classhyrise_1_1access_1_1_replace_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3686">
        <label>hyrise::access::LayoutTable</label>
        <link refid="classhyrise_1_1access_1_1_layout_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3682">
        <label>hyrise::access::InsertScan</label>
        <link refid="classhyrise_1_1access_1_1_insert_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3679">
        <label>hyrise::access::GetTable</label>
        <link refid="classhyrise_1_1access_1_1_get_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3700">
        <label>hyrise::access::ParallelizablePlanOperation</label>
        <link refid="classhyrise_1_1access_1_1_parallelizable_plan_operation"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3684">
        <label>hyrise::access::JsonTable</label>
        <link refid="classhyrise_1_1access_1_1_json_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3701">
        <label>hyrise::access::GroupByScan</label>
        <link refid="classhyrise_1_1access_1_1_group_by_scan"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3671">
        <label>hyrise::access::Barrier</label>
        <link refid="classhyrise_1_1access_1_1_barrier"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3677">
        <label>hyrise::access::DumpTable</label>
        <link refid="classhyrise_1_1access_1_1_dump_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3732">
        <label>hyrise::access::ResponseTask</label>
        <link refid="classhyrise_1_1access_1_1_response_task"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3741">
        <label>SyncTask</label>
        <link refid="class_sync_task"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3735">
        <label>hyrise::access::RequestParseTask</label>
        <link refid="classhyrise_1_1access_1_1_request_parse_task"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3669">
        <label>hyrise::access::PlanOperation</label>
        <link refid="classhyrise_1_1access_1_1_plan_operation"/>
        <childnode refid="3668" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3668">
        <label>hyrise::access::OutputTask</label>
        <link refid="classhyrise_1_1access_1_1_output_task"/>
        <childnode refid="3665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3723">
        <label>hyrise::access::StopProfiling</label>
        <link refid="classhyrise_1_1access_1_1_stop_profiling"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3698">
        <label>hyrise::access::NestedLoopEquiJoin</label>
        <link refid="classhyrise_1_1access_1_1_nested_loop_equi_join"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3694">
        <label>hyrise::access::MergePrefixSum</label>
        <link refid="classhyrise_1_1access_1_1_merge_prefix_sum"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3702">
        <label>hyrise::access::HashBuild</label>
        <link refid="classhyrise_1_1access_1_1_hash_build"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3675">
        <label>hyrise::access::DeleteOp</label>
        <link refid="classhyrise_1_1access_1_1_delete_op"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3691">
        <label>hyrise::access::MergeHashTables</label>
        <link refid="classhyrise_1_1access_1_1_merge_hash_tables"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3729">
        <label>hyrise::access::UnloadAll</label>
        <link refid="classhyrise_1_1access_1_1_unload_all"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3665">
        <label>Task</label>
        <link refid="class_task"/>
        <childnode refid="3666" relation="public-inheritance">
        </childnode>
        <childnode refid="3667" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3725">
        <label>hyrise::access::TableScan</label>
        <link refid="classhyrise_1_1access_1_1_table_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3731">
        <label>hyrise::access::ValidatePositions</label>
        <link refid="classhyrise_1_1access_1_1_validate_positions"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3719">
        <label>hyrise::access::SimpleRawTableScan</label>
        <link refid="classhyrise_1_1access_1_1_simple_raw_table_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3678">
        <label>hyrise::access::ExpressionScan</label>
        <link refid="classhyrise_1_1access_1_1_expression_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3721">
        <label>hyrise::access::SortScan</label>
        <link refid="classhyrise_1_1access_1_1_sort_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3696">
        <label>hyrise::access::MergeTable</label>
        <link refid="classhyrise_1_1access_1_1_merge_table"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3687">
        <label>hyrise::access::LayoutTableLoad</label>
        <link refid="classhyrise_1_1access_1_1_layout_table_load"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3707">
        <label>hyrise::access::PrefixSum</label>
        <link refid="classhyrise_1_1access_1_1_prefix_sum"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3676">
        <label>hyrise::access::Distinct</label>
        <link refid="classhyrise_1_1access_1_1_distinct"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3706">
        <label>hyrise::access::JoinScan</label>
        <link refid="classhyrise_1_1access_1_1_join_scan"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3716">
        <label>hyrise::access::ScriptOperation</label>
        <link refid="classhyrise_1_1access_1_1_script_operation"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3720">
        <label>hyrise::access::SmallestTableScan</label>
        <link refid="classhyrise_1_1access_1_1_smallest_table_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3708">
        <label>hyrise::access::RadixCluster</label>
        <link refid="classhyrise_1_1access_1_1_radix_cluster"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3670">
        <label>hyrise::access::HashValueJoin&lt; int &gt;</label>
        <link refid="classhyrise_1_1access_1_1_hash_value_join"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
        <childnode refid="3680" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3681">
        <label>hyrise::access::IndexScan</label>
        <link refid="classhyrise_1_1access_1_1_index_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3667">
        <label>std::enable_shared_from_this&lt; Task &gt;</label>
      </node>
      <node id="3738">
        <label>hyrise::tx::RequestHandler</label>
        <link refid="classhyrise_1_1tx_1_1_request_handler"/>
        <childnode refid="3733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3730">
        <label>hyrise::access::UpdateScan</label>
        <link refid="classhyrise_1_1access_1_1_update_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3728">
        <label>hyrise::access::UnionScan</label>
        <link refid="classhyrise_1_1access_1_1_union_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3724">
        <label>hyrise::access::TableLoad</label>
        <link refid="classhyrise_1_1access_1_1_table_load"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3672">
        <label>hyrise::access::Commit</label>
        <link refid="classhyrise_1_1access_1_1_commit"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3704">
        <label>hyrise::access::Histogram</label>
        <link refid="classhyrise_1_1access_1_1_histogram"/>
        <childnode refid="3700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3739">
        <label>hyrise::tx::TransactionStatusHandler</label>
        <link refid="classhyrise_1_1tx_1_1_transaction_status_handler"/>
        <childnode refid="3738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3693">
        <label>hyrise::access::MergeJoin&lt; T &gt;</label>
        <link refid="classhyrise_1_1access_1_1_merge_join"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3713">
        <label>hyrise::access::RadixJoin</label>
        <link refid="classhyrise_1_1access_1_1_radix_join"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3711">
        <label>hyrise::access::PosUpdateScan</label>
        <link refid="classhyrise_1_1access_1_1_pos_update_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3690">
        <label>hyrise::access::MaterializingScan</label>
        <link refid="classhyrise_1_1access_1_1_materializing_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3692">
        <label>hyrise::access::MergeIndexScan</label>
        <link refid="classhyrise_1_1access_1_1_merge_index_scan"/>
        <childnode refid="3669" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3744">
        <label>TaskDoneObserver</label>
        <link refid="class_task_done_observer"/>
      </node>
      <node id="3743">
        <label>Task</label>
        <link refid="class_task"/>
        <childnode refid="3744" relation="public-inheritance">
        </childnode>
        <childnode refid="3745" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3745">
        <label>std::enable_shared_from_this&lt; Task &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" line="43" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/taskscheduler/Task.h" bodystart="43" bodyend="186"/>
    <listofallmembers>
      <member refid="class_task_1ae86d264d411c0a0476085734c27a84b0" prot="protected" virt="non-virtual"><scope>Task</scope><name>_actualNode</name></member>
      <member refid="class_task_1ab25d10a171c2efc2dcdf4ec7b81d148d" prot="protected" virt="non-virtual"><scope>Task</scope><name>_dependencies</name></member>
      <member refid="class_task_1a432b54ea5cdbf8f875c756c70710b69e" prot="protected" virt="non-virtual"><scope>Task</scope><name>_dependencyWaitCount</name></member>
      <member refid="class_task_1a10259a6dde7645e32c32262818339c8c" prot="protected" virt="non-virtual"><scope>Task</scope><name>_depMutex</name></member>
      <member refid="class_task_1af277c65727e285efbf965633851ec9d8" prot="protected" virt="non-virtual"><scope>Task</scope><name>_doneObservers</name></member>
      <member refid="class_task_1a8909ff1653cd9a685af7256976e4e334" prot="protected" virt="non-virtual"><scope>Task</scope><name>_id</name></member>
      <member refid="class_task_1a778ed5c766f4098184c31a656fe471ed" prot="protected" virt="non-virtual"><scope>Task</scope><name>_notifyMutex</name></member>
      <member refid="class_task_1a6a0d1fa3b37cb2e7896ea23049798b36" prot="protected" virt="non-virtual"><scope>Task</scope><name>_observerMutex</name></member>
      <member refid="class_task_1aa7b21c6482b905c04f354c738341beb3" prot="protected" virt="non-virtual"><scope>Task</scope><name>_preferredCore</name></member>
      <member refid="class_task_1abeb3d34a483638fad8c93bb3baff50f5" prot="protected" virt="non-virtual"><scope>Task</scope><name>_preferredNode</name></member>
      <member refid="class_task_1a6fbb4614f260802e6204e339f4480004" prot="protected" virt="non-virtual"><scope>Task</scope><name>_priority</name></member>
      <member refid="class_task_1a7f7f81090a389fd5cf79747e165fe0f4" prot="protected" virt="non-virtual"><scope>Task</scope><name>_readyObservers</name></member>
      <member refid="class_task_1a5515868bfb7db5ad936cafdf6b8e65c7" prot="protected" virt="non-virtual"><scope>Task</scope><name>_sessionId</name></member>
      <member refid="class_task_1aa9e65a15e122de040bb914ab144577b8" prot="public" virt="non-virtual"><scope>Task</scope><name>addDependency</name></member>
      <member refid="class_task_1a0e4ebf7ad5313f027aa16d250685604a" prot="public" virt="non-virtual"><scope>Task</scope><name>addDoneObserver</name></member>
      <member refid="class_task_1a9726ca1f4c6712a3516cb05121479f25" prot="public" virt="non-virtual"><scope>Task</scope><name>addReadyObserver</name></member>
      <member refid="class_task_1afedc05b69ebd406b7fdb42391f4eef2a" prot="public" virt="non-virtual"><scope>Task</scope><name>DEFAULT_PRIORITY</name></member>
      <member refid="class_task_1a48d72f6b05c55e6fed32f137d5d17cf6" prot="public" virt="non-virtual"><scope>Task</scope><name>getActualNode</name></member>
      <member refid="class_task_1a75f0a4940cdd338c2ba538200bfcdddf" prot="public" virt="non-virtual"><scope>Task</scope><name>getDependencyCount</name></member>
      <member refid="class_task_1a85363a10fc3b2272b30e1c24846ab237" prot="public" virt="non-virtual"><scope>Task</scope><name>getId</name></member>
      <member refid="class_task_1a4a3f6f336369d8e2d6a92fae0690c143" prot="public" virt="non-virtual"><scope>Task</scope><name>getPreferredCore</name></member>
      <member refid="class_task_1ad775abf82380305e56bb9a1847f76ece" prot="public" virt="non-virtual"><scope>Task</scope><name>getPreferredNode</name></member>
      <member refid="class_task_1a4d9b4764c7365be48eee4393e87ca92b" prot="public" virt="non-virtual"><scope>Task</scope><name>getPriority</name></member>
      <member refid="class_task_1a1a5953e7f9dfc732ce1f3d8a914439b4" prot="public" virt="virtual"><scope>Task</scope><name>getQueryDuration</name></member>
      <member refid="class_task_1a28ea4fab3bbd5b803f9aa7e4b4300820" prot="public" virt="non-virtual"><scope>Task</scope><name>getSessionId</name></member>
      <member refid="class_task_1a769a8fb688ddaed2870faeea61d84ca0" prot="public" virt="non-virtual"><scope>Task</scope><name>hasSuccessors</name></member>
      <member refid="class_task_1afb865392382a2c3f1a13e962d5ba3b1e" prot="public" virt="non-virtual"><scope>Task</scope><name>HIGH_PRIORITY</name></member>
      <member refid="class_task_1ab7307de77d5baf3dfec0269996d81543" prot="public" virt="non-virtual"><scope>Task</scope><name>isReady</name></member>
      <member refid="class_task_1aeb0d741352700686296e742bc21e4362" prot="public" virt="non-virtual"><scope>Task</scope><name>lockForNotifications</name></member>
      <member refid="class_task_1af0efeb0207f95415ca556e19bc62d60e" prot="public" virt="non-virtual"><scope>Task</scope><name>NO_PREFERRED_CORE</name></member>
      <member refid="class_task_1a38563fd60f45377e73b8030945f9fdc8" prot="public" virt="non-virtual"><scope>Task</scope><name>NO_PREFERRED_NODE</name></member>
      <member refid="class_task_1aa729cd30e7135f2851dd625679aa8556" prot="public" virt="virtual"><scope>Task</scope><name>notifyDone</name></member>
      <member refid="class_task_1a82157fda3766f4331966baf74e8206fa" prot="public" virt="non-virtual"><scope>Task</scope><name>notifyDoneObservers</name></member>
      <member refid="class_task_1a793f3db3f39a9ea7352078f235ee7843" prot="public" virt="non-virtual"><scope>Task</scope><name>notifyReadyObservers</name></member>
      <member refid="class_task_1ae3a87b98fa47e03ab2f48b53aa257b69" prot="public" virt="virtual"><scope>Task</scope><name>operator()</name></member>
      <member refid="class_task_1a8df8b7cbdf23d35317488316bba3ebe2" prot="public" virt="non-virtual"><scope>Task</scope><name>SESSION_ID_NOT_SET</name></member>
      <member refid="class_task_1af9b0b825e5ffb8de9c6a1a71438f4b5b" prot="public" virt="non-virtual"><scope>Task</scope><name>setActualNode</name></member>
      <member refid="class_task_1a6c3e7a3b19e50d8fcad5a084ef6b7312" prot="public" virt="non-virtual"><scope>Task</scope><name>setId</name></member>
      <member refid="class_task_1a1b8e520f60e9f41a3c1331e4e9e4b3ca" prot="public" virt="non-virtual"><scope>Task</scope><name>setPreferredCore</name></member>
      <member refid="class_task_1a59960c60425c5d5ed2e8ff52e4538ff2" prot="public" virt="non-virtual"><scope>Task</scope><name>setPreferredNode</name></member>
      <member refid="class_task_1acc93078022eabed8325f164e4eedc37a" prot="public" virt="non-virtual"><scope>Task</scope><name>setPriority</name></member>
      <member refid="class_task_1a688bd7a4f5f659d049667c08fd330cfd" prot="public" virt="non-virtual"><scope>Task</scope><name>setSessionId</name></member>
      <member refid="class_task_1a0ca53354bdc006762a0fda68c64f7608" prot="public" virt="non-virtual"><scope>Task</scope><name>Task</name></member>
      <member refid="class_task_1a35af9de734c94c39981a2b199790e288" prot="public" virt="non-virtual"><scope>Task</scope><name>unlockForNotifications</name></member>
      <member refid="class_task_1a091bff6c1c11bfc202e53280b5af62e7" prot="public" virt="pure-virtual"><scope>Task</scope><name>vname</name></member>
      <member refid="class_task_1a7bff79cc05fa4511c72048d33591503b" prot="public" virt="virtual"><scope>Task</scope><name>~Task</name></member>
      <member refid="class_task_done_observer_1a9b5fa53c4893dfc998aedca72b8dd278" prot="public" virt="virtual"><scope>Task</scope><name>~TaskDoneObserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
