<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classhyrise_1_1io_1_1_storage_manager" kind="class" prot="public">
    <compoundname>hyrise::io::StorageManager</compoundname>
    <basecompoundref refid="classhyrise_1_1io_1_1_resource_manager" prot="public" virt="non-virtual">hyrise::io::ResourceManager</basecompoundref>
    <includes refid="_storage_manager_8h" local="no">StorageManager.h</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a6131a072f4013213aa770991db263f18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hyrise::io::StorageManager::StorageManager</definition>
        <argsstring>()=delete</argsstring>
        <name>StorageManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="26"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a3d58cca2dc470903f0a1af0dcdf5b02b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hyrise::io::StorageManager::StorageManager</definition>
        <argsstring>(const StorageManager &amp;)=delete</argsstring>
        <name>StorageManager</name>
        <param>
          <type>const <ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound">StorageManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a71083ccfdc5d885314dafe9a25c477e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound">StorageManager</ref> &amp;</type>
        <definition>StorageManager&amp; hyrise::io::StorageManager::operator=</definition>
        <argsstring>(const StorageManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound">StorageManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="28"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a21d12aa6912be028a8bea2da5d436817" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hyrise::io::StorageManager::addStorageTable</definition>
        <argsstring>(std::string name, Args &amp;&amp;...args)</argsstring>
        <name>addStorageTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new storage table to _schema, forwards to all constructors of StorageTable that start with (std::string name, ....) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="33" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a73b12a097673a0afa604a22dd401a1bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhyrise_1_1io_1_1_storage_manager" kindref="compound">StorageManager</ref> *</type>
        <definition>StorageManager * hyrise::io::StorageManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <briefdescription>
<para>Retrieve singleton storage-manager instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="37" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a4cca0a38b69106ab9faf0193285e7468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::loadTable</definition>
        <argsstring>(std::string name, const Loader::params &amp;parameters)</argsstring>
        <name>loadTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_loader_1_1params" kindref="compound">Loader::params</ref> &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_table" kindref="compound">Table</ref> loading with parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespace_loader" kindref="compound">Loader</ref> parameters for delayed load </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="42" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a67c03891e94ed361f3787926f5493f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::loadTable</definition>
        <argsstring>(std::string name, std::shared_ptr&lt; AbstractTable &gt; table)</argsstring>
        <name>loadTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_table" kindref="compound">Table</ref> loading with table <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">table</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared table pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="47" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a3446fe2bee181058f45983cde04de256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::loadTableFile</definition>
        <argsstring>(std::string name, std::string fileName)</argsstring>
        <name>loadTableFile</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience loading from fileName <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to to hyrise-format file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="52" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1ab0773f7aa70bb2bf2d025ce45b24e4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::loadTableFileWithHeader</definition>
        <argsstring>(std::string name, std::string dataFileName, std::string headerFileName)</argsstring>
        <name>loadTableFileWithHeader</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>dataFileName</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>headerFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience loading for files with separate header <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dataFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to to hyrise-format data file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">headerFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to to hyrise-format header file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="59" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a383140d54f4460aa46a8321b452afce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::replaceTable</definition>
        <argsstring>(std::string name, std::shared_ptr&lt; AbstractTable &gt; table)</argsstring>
        <name>replaceTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace existing table <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name to be replaced </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">table</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared table pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="63" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a5308344c51f8ee6519741dc54453d0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::removeTable</definition>
        <argsstring>(std::string name)</argsstring>
        <name>removeTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="65" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a8ae4677060c29dd5b6fed2871e557b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::removeAll</definition>
        <argsstring>()</argsstring>
        <name>removeAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="67" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a8bb48ae560cc146e47abbe1275898359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_abstract_table" kindref="compound">AbstractTable</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractTable &gt; hyrise::io::StorageManager::getTable</definition>
        <argsstring>(std::string name)</argsstring>
        <name>getTable</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a table <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_table" kindref="compound">Table</ref> name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="71" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="78" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1aa444a742866e7fd3a267e71c3fe2a4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::addInvertedIndex</definition>
        <argsstring>(std::string name, std::shared_ptr&lt; AbstractIndex &gt; _index)</argsstring>
        <name>addInvertedIndex</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_abstract_index" kindref="compound">AbstractIndex</ref> &gt;</type>
          <declname>_index</declname>
        </param>
        <briefdescription>
<para>saves the inverted index as name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="74" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1aa53477dd76e193df77066034a88bd046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_abstract_index" kindref="compound">AbstractIndex</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractIndex &gt; hyrise::io::StorageManager::getInvertedIndex</definition>
        <argsstring>(std::string name)</argsstring>
        <name>getInvertedIndex</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>returns the index stored under name name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="77" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a55e3d822bf3b1e2f807bee52a65cdf4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; hyrise::io::StorageManager::getTableNames</definition>
        <argsstring>() const </argsstring>
        <name>getTableNames</name>
        <briefdescription>
<para>Retrieve all table names. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="80" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1aaeb055897244f47aebceffa85478fa25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::io::StorageManager::printResources</definition>
        <argsstring>() const </argsstring>
        <name>printResources</name>
        <briefdescription>
<para>Prints all Resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="83" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="106" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classhyrise_1_1io_1_1_storage_manager_1a132db7140582cae693b5aa99419057aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hyrise::io::StorageManager::makePath</definition>
        <argsstring>(std::string fileName)</argsstring>
        <name>makePath</name>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get full path for fileName <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>fileName </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="87" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Central holder of schema information. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3528">
        <label>hyrise::io::ResourceManager</label>
        <link refid="classhyrise_1_1io_1_1_resource_manager"/>
      </node>
      <node id="3527">
        <label>hyrise::io::StorageManager</label>
        <link refid="classhyrise_1_1io_1_1_storage_manager"/>
        <childnode refid="3528" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3530">
        <label>hyrise::io::ResourceManager</label>
        <link refid="classhyrise_1_1io_1_1_resource_manager"/>
      </node>
      <node id="3529">
        <label>hyrise::io::StorageManager</label>
        <link refid="classhyrise_1_1io_1_1_storage_manager"/>
        <childnode refid="3530" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vagrant/lanice/src/lib/io/StorageManager.h" line="24" bodyfile="/home/vagrant/lanice/src/lib/io/StorageManager.h" bodystart="24" bodyend="88"/>
    <listofallmembers>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a8aebc08f8dc76a03c5685d999d855b27" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>add</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1aa444a742866e7fd3a267e71c3fe2a4e0" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>addInvertedIndex</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a21d12aa6912be028a8bea2da5d436817" prot="protected" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>addStorageTable</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a017e1c927a250a0d61902e594f8550af" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>all</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a58c0f1fe350c4b0abf7a9c2ae0b0db89" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>assureExists</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a7a2ce16cf1ae082a1276965c330171d8" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>clear</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a082d4f9e4abecaefff089bed21cb7584" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>exists</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a4768ef465eb1271b5ac65c19865a4bba" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>get</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a73b12a097673a0afa604a22dd401a1bb" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>getInstance</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1aa53477dd76e193df77066034a88bd046" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>getInvertedIndex</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a1fd8fc312c5c3ee27eee7c47de7244e9" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>getResource</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a8bb48ae560cc146e47abbe1275898359" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>getTable</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a55e3d822bf3b1e2f807bee52a65cdf4b" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>getTableNames</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a4cca0a38b69106ab9faf0193285e7468" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>loadTable</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a67c03891e94ed361f3787926f5493f52" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>loadTable</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a3446fe2bee181058f45983cde04de256" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>loadTableFile</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1ab0773f7aa70bb2bf2d025ce45b24e4b0" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>loadTableFileWithHeader</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a132db7140582cae693b5aa99419057aa" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>makePath</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a71083ccfdc5d885314dafe9a25c477e8" prot="protected" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>operator=</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1aaeb055897244f47aebceffa85478fa25" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>printResources</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a59abe607c36c587f37f341d3f5db30aa" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>remove</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a8ae4677060c29dd5b6fed2871e557b5b" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>removeAll</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a5308344c51f8ee6519741dc54453d0cc" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>removeTable</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a946e5b60ef5924a4129e9cd8680d03d8" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>replace</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a383140d54f4460aa46a8321b452afce7" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>replaceTable</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a06c0b1260dc17ba8406198bb26c427c6" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>resource_map</name></member>
      <member refid="classhyrise_1_1io_1_1_resource_manager_1a9875456caeb04860be3202fb7825fe4a" prot="public" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>size</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a6131a072f4013213aa770991db263f18" prot="protected" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>StorageManager</name></member>
      <member refid="classhyrise_1_1io_1_1_storage_manager_1a3d58cca2dc470903f0a1af0dcdf5b02b" prot="protected" virt="non-virtual"><scope>hyrise::io::StorageManager</scope><name>StorageManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
