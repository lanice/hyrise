<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_generic_expression_value" kind="class" prot="public">
    <compoundname>GenericExpressionValue</compoundname>
    <basecompoundref refid="class_simple_field_expression" prot="public" virt="non-virtual">SimpleFieldExpression</basecompoundref>
    <includes refid="pred___simple_field_expression_8h" local="no">pred_SimpleFieldExpression.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>class Op</type>
        <defval>std::equal_to&lt;T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_generic_expression_value_1a7c896b973d7ae762370df271525f4aac" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T GenericExpressionValue&lt; T, Op &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="53" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_generic_expression_value_1a499ae59a83d24c415bb86182b7c6797e" prot="private" static="no" mutable="no">
        <type>Op</type>
        <definition>Op GenericExpressionValue&lt; T, Op &gt;::_operator</definition>
        <argsstring></argsstring>
        <name>_operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="54" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_generic_expression_value_1aebf5dc2bddd29ab10dca9495edc5f54f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericExpressionValue&lt; T, Op &gt;::GenericExpressionValue</definition>
        <argsstring>(size_t i, field_t f, T _value)</argsstring>
        <name>GenericExpressionValue</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>T</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="60" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_expression_value_1ab31dce5cf77eb9de1f8fff8f5d631793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericExpressionValue&lt; T, Op &gt;::GenericExpressionValue</definition>
        <argsstring>(size_t i, field_name_t f, T _value)</argsstring>
        <name>GenericExpressionValue</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>T</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="64" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_expression_value_1ad752e33ebf90a5ae7df3c80aadab0f3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GenericExpressionValue&lt; T, Op &gt;::GenericExpressionValue</definition>
        <argsstring>(const hyrise::storage::c_atable_ptr_t &amp;_table, field_t _field, T _value)</argsstring>
        <name>GenericExpressionValue</name>
        <param>
          <type>const <ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref> &amp;</type>
          <declname>_table</declname>
        </param>
        <param>
          <type><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref></type>
          <declname>_field</declname>
        </param>
        <param>
          <type>T</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="68" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_expression_value_1a95be6c16ed0ae260af58c9bc6fe96384" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual GenericExpressionValue&lt; T, Op &gt;::~GenericExpressionValue</definition>
        <argsstring>()</argsstring>
        <name>~GenericExpressionValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="71" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_generic_expression_value_1a24beb6d5ef91339f895bd24d207243b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GenericExpressionValue&lt; T, Op &gt;::operator()</definition>
        <argsstring>(size_t row)</argsstring>
        <name>operator()</name>
        <reimplements refid="class_simple_field_expression_1adcbedd75f7652d48f58256eefe09c5fe">operator()</reimplements>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="73" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2049">
        <label>SimpleFieldExpression</label>
        <link refid="class_simple_field_expression"/>
        <childnode refid="2050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2048">
        <label>GenericExpressionValue&lt; T, Op &gt;</label>
        <link refid="class_generic_expression_value"/>
        <childnode refid="2049" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2050">
        <label>SimpleExpression</label>
        <link refid="class_simple_expression"/>
        <childnode refid="2051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2051">
        <label>hyrise::access::AbstractExpression</label>
        <link refid="classhyrise_1_1access_1_1_abstract_expression"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2053">
        <label>SimpleFieldExpression</label>
        <link refid="class_simple_field_expression"/>
        <childnode refid="2054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2052">
        <label>GenericExpressionValue&lt; T, Op &gt;</label>
        <link refid="class_generic_expression_value"/>
        <childnode refid="2053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2054">
        <label>SimpleExpression</label>
        <link refid="class_simple_expression"/>
        <childnode refid="2055" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2055">
        <label>hyrise::access::AbstractExpression</label>
        <link refid="classhyrise_1_1access_1_1_abstract_expression"/>
      </node>
    </collaborationgraph>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" line="51" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/expressions/pred_SimpleFieldExpression.h" bodystart="51" bodyend="76"/>
    <listofallmembers>
      <member refid="class_generic_expression_value_1a499ae59a83d24c415bb86182b7c6797e" prot="private" virt="non-virtual"><scope>GenericExpressionValue</scope><name>_operator</name></member>
      <member refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" prot="protected" virt="non-virtual"><scope>GenericExpressionValue</scope><name>field</name></member>
      <member refid="class_simple_field_expression_1ac25373119e8937fa84ac763c264a7756" prot="protected" virt="non-virtual"><scope>GenericExpressionValue</scope><name>field_name</name></member>
      <member refid="class_generic_expression_value_1aebf5dc2bddd29ab10dca9495edc5f54f" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>GenericExpressionValue</name></member>
      <member refid="class_generic_expression_value_1ab31dce5cf77eb9de1f8fff8f5d631793" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>GenericExpressionValue</name></member>
      <member refid="class_generic_expression_value_1ad752e33ebf90a5ae7df3c80aadab0f3c" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>GenericExpressionValue</name></member>
      <member refid="class_simple_field_expression_1a2e95b8194489dc5d79bc2e070bfcdb24" prot="protected" virt="non-virtual"><scope>GenericExpressionValue</scope><name>input</name></member>
      <member refid="class_simple_expression_1ae06428047fe77732ef121f42b1ee6ce2" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>match</name></member>
      <member refid="class_generic_expression_value_1a24beb6d5ef91339f895bd24d207243b6" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>operator()</name></member>
      <member refid="class_simple_field_expression_1a53fb1bfcb3b90cced5a6a5d150acb750" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>SimpleFieldExpression</name></member>
      <member refid="class_simple_field_expression_1ad9a94013df2c3521382fac2ea68a3813" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>SimpleFieldExpression</name></member>
      <member refid="class_simple_field_expression_1a64fefbe7ec640b832ccc2e1cc33b4817" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>SimpleFieldExpression</name></member>
      <member refid="class_simple_field_expression_1ac95fe343f1a1dc8e470427f6629fb4ca" prot="public" virt="non-virtual"><scope>GenericExpressionValue</scope><name>SimpleFieldExpression</name></member>
      <member refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" prot="protected" virt="non-virtual"><scope>GenericExpressionValue</scope><name>table</name></member>
      <member refid="class_generic_expression_value_1a7c896b973d7ae762370df271525f4aac" prot="private" virt="non-virtual"><scope>GenericExpressionValue</scope><name>value</name></member>
      <member refid="class_simple_field_expression_1a2b9be48219459a784de03b6298b56966" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>walk</name></member>
      <member refid="classhyrise_1_1access_1_1_abstract_expression_1aae15725c08628e3785e90f496b75144e" prot="public" virt="pure-virtual" ambiguityscope="hyrise::access::AbstractExpression::"><scope>GenericExpressionValue</scope><name>walk</name></member>
      <member refid="classhyrise_1_1access_1_1_abstract_expression_1ae0b45f17103a1dc5006832d243574d83" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>~AbstractExpression</name></member>
      <member refid="class_generic_expression_value_1a95be6c16ed0ae260af58c9bc6fe96384" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>~GenericExpressionValue</name></member>
      <member refid="class_simple_field_expression_1acdf860b623a41c93c85f1cea991c9252" prot="public" virt="virtual"><scope>GenericExpressionValue</scope><name>~SimpleFieldExpression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
