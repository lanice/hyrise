<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="incremental_8h" kind="file">
    <compoundname>incremental.h</compoundname>
    <includes refid="layouter_2base_8h" local="yes">base.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includedby refid="_layouter_8h" local="yes">src/lib/access/Layouter.h</includedby>
    <includedby refid="incremental_8cpp" local="yes">src/lib/layouter/incremental.cpp</includedby>
    <incdepgraph>
      <node id="13139">
        <label>list</label>
      </node>
      <node id="13132">
        <label>assert.h</label>
      </node>
      <node id="13133">
        <label>stdlib.h</label>
      </node>
      <node id="13130">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="13140">
        <label>string</label>
      </node>
      <node id="13143">
        <label>map</label>
      </node>
      <node id="13129">
        <label>base.h</label>
        <link refid="layouter_2base_8h"/>
        <childnode refid="13130" relation="include">
        </childnode>
        <childnode refid="13131" relation="include">
        </childnode>
        <childnode refid="13137" relation="include">
        </childnode>
        <childnode refid="13134" relation="include">
        </childnode>
        <childnode refid="13139" relation="include">
        </childnode>
        <childnode refid="13138" relation="include">
        </childnode>
        <childnode refid="13140" relation="include">
        </childnode>
        <childnode refid="13136" relation="include">
        </childnode>
        <childnode refid="13141" relation="include">
        </childnode>
        <childnode refid="13142" relation="include">
        </childnode>
      </node>
      <node id="13136">
        <label>vector</label>
      </node>
      <node id="13128">
        <label>src/lib/layouter/incremental.h</label>
        <link refid="incremental.h"/>
        <childnode refid="13129" relation="include">
        </childnode>
        <childnode refid="13136" relation="include">
        </childnode>
        <childnode refid="13143" relation="include">
        </childnode>
      </node>
      <node id="13135">
        <label>sstream</label>
      </node>
      <node id="13134">
        <label>iostream</label>
      </node>
      <node id="13142">
        <label>unordered_map</label>
      </node>
      <node id="13131">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="13132" relation="include">
        </childnode>
        <childnode refid="13133" relation="include">
        </childnode>
        <childnode refid="13134" relation="include">
        </childnode>
        <childnode refid="13135" relation="include">
        </childnode>
        <childnode refid="13136" relation="include">
        </childnode>
      </node>
      <node id="13138">
        <label>set</label>
      </node>
      <node id="13137">
        <label>layout_utils.h</label>
        <link refid="layout__utils_8h"/>
        <childnode refid="13138" relation="include">
        </childnode>
        <childnode refid="13136" relation="include">
        </childnode>
      </node>
      <node id="13141">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13153">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="13148">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="13147">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="13148" relation="include">
        </childnode>
        <childnode refid="13149" relation="include">
        </childnode>
        <childnode refid="13150" relation="include">
        </childnode>
        <childnode refid="13151" relation="include">
        </childnode>
        <childnode refid="13152" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13154" relation="include">
        </childnode>
        <childnode refid="13155" relation="include">
        </childnode>
      </node>
      <node id="13151">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="13154">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="13152">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="13146">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="13149">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="13145">
        <label>src/lib/access/Layouter.h</label>
        <link refid="_layouter_8h"/>
        <childnode refid="13146" relation="include">
        </childnode>
        <childnode refid="13147" relation="include">
        </childnode>
      </node>
      <node id="13144">
        <label>src/lib/layouter/incremental.h</label>
        <link refid="incremental.h"/>
        <childnode refid="13145" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
      </node>
      <node id="13156">
        <label>src/lib/layouter/incremental.cpp</label>
        <link refid="incremental_8cpp"/>
      </node>
      <node id="13150">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="13155">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlayouter_1_1_incremental_candidate_layouter" prot="public">layouter::IncrementalCandidateLayouter</innerclass>
    <innernamespace refid="namespacelayouter">layouter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_LAYOUTER_INCREMENTAL_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_LAYOUTER_INCREMENTAL_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layouter_2base_8h" kindref="compound">base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">layouter<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>class<sp/>defines<sp/>an<sp/>incremental<sp/>layouter,<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>candidate<sp/>layouter.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>an<sp/>initial<sp/>layout<sp/>more<sp/>and<sp/>more<sp/>queries<sp/>can<sp/>be<sp/>added</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>and<sp/>incrementally<sp/>return<sp/>a<sp/>new<sp/>layout.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classlayouter_1_1_incremental_candidate_layouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_incremental_candidate_layouter" kindref="compound">IncrementalCandidateLayouter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter" kindref="compound">CandidateLayouter</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classlayouter_1_1_incremental_candidate_layouter_1a67aa417928fe430b541ea3ca51caba4c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1a67aa417928fe430b541ea3ca51caba4c" kindref="member">_splittedSets</ref>;</highlight></codeline>
<codeline lineno="21" refid="classlayouter_1_1_incremental_candidate_layouter_1a87fb05f48225f7ed38ecc0fafaa6b3a7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1a87fb05f48225f7ed38ecc0fafaa6b3a7" kindref="member">_unusedPartitions</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classlayouter_1_1_incremental_candidate_layouter_1af8b0fef2c5ff96280a8c14d190622de2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1af8b0fef2c5ff96280a8c14d190622de2" kindref="member">_unusedCostForPartitions</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classlayouter_1_1_incremental_candidate_layouter_1ae2cb5a4b1f0bb0ebbc8bbe8c78bb3c3c" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;unsigned,<sp/>unsigned&gt;<sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1ae2cb5a4b1f0bb0ebbc8bbe8c78bb3c3c" kindref="member">_query_conversion</ref>;</highlight></codeline>
<codeline lineno="26" refid="classlayouter_1_1_incremental_candidate_layouter_1a639e0d0399a4d2abb099827457d5a462" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;unsigned,<sp/>unsigned&gt;<sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1a639e0d0399a4d2abb099827457d5a462" kindref="member">_reverse_query_conversion</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1abcaffe7b32eae9c85339b6ccff752193" kindref="member">clearState</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Based<sp/>on<sp/>the<sp/>affected<sp/>attribute<sp/>and<sp/>the<sp/>query<sp/>we<sp/>build<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>schema<sp/>that<sp/>is<sp/>used<sp/>for<sp/>the<sp/>incremental<sp/>layout<sp/>step.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1a74d110df85320a48a2ecf3da0abc628a" kindref="member">buildSchema</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>attributes,<sp/><ref refid="classlayouter_1_1_query" kindref="compound">Query</ref><sp/>*q);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>intermediate<sp/>result<sp/>is<sp/>mapped<sp/>to<sp/>the<sp/>intermediate</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>schema,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>rewrite<sp/>the<sp/>result<sp/>to<sp/>match<sp/>the<sp/>old</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>layout.<sp/>The<sp/>cost<sp/>vector<sp/>identifies<sp/>the<sp/>costs<sp/>for<sp/>the<sp/>queries</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>new<sp/>layout.<sp/>These<sp/>cost<sp/>will<sp/>then<sp/>be<sp/>matched<sp/>against</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>cached<sp/>cost<sp/>for<sp/>the<sp/>unaffected<sp/>queries.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1a8d2210b84f8679bfddb5915c4942bfe0" kindref="member">rewriteResult</ref>(<ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>affectedBest);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>Detects<sp/>all<sp/>affected<sp/>partitions<sp/>from<sp/>the<sp/>given<sp/>query</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>current<sp/>layout<sp/>is<sp/>split<sp/>into<sp/>two<sp/>parts,<sp/>those<sp/>partitions</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>are<sp/>accessed<sp/>by<sp/>the<sp/>query<sp/>and<sp/>those<sp/>which<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1aac8551ac4c440f55a34cf2eb0fa322c4" kindref="member">detectAffectedPartitions</ref>(<ref refid="classlayouter_1_1_query" kindref="compound">Query</ref><sp/>*q);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_incremental_candidate_layouter_1abfa4bf2689eb20ba0419a5cb4437cf4e" kindref="member">incrementalLayout</ref>(<ref refid="classlayouter_1_1_query" kindref="compound">Query</ref><sp/>*q);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_LAYOUTER_INCREMENTAL_H_</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/layouter/incremental.h"/>
  </compounddef>
</doxygen>
