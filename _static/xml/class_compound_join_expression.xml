<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_compound_join_expression" kind="class" prot="public">
    <compoundname>CompoundJoinExpression</compoundname>
    <basecompoundref refid="class_join_expression" prot="public" virt="non-virtual">JoinExpression</basecompoundref>
    <includes refid="join__predicates_8h" local="no">join_predicates.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_compound_join_expression_1a9f5d7af6f9e792f006b833ff0d6be872" prot="private" static="no" mutable="no">
        <type><ref refid="expression__types_8h_1a51ad9989dafb48362f7e9354d68fe720" kindref="member">ExpressionType</ref></type>
        <definition>ExpressionType CompoundJoinExpression::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="29" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_compound_join_expression_1a75bf4b829f314f4cc6813e6b7685a780" prot="public" static="no" mutable="no">
        <type><ref refid="class_join_expression" kindref="compound">JoinExpression</ref> *</type>
        <definition>JoinExpression* CompoundJoinExpression::lhs</definition>
        <argsstring></argsstring>
        <name>lhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="33" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_compound_join_expression_1a2a122a538725a8f952bc459d83ac4aa2" prot="public" static="no" mutable="no">
        <type><ref refid="class_join_expression" kindref="compound">JoinExpression</ref> *</type>
        <definition>JoinExpression* CompoundJoinExpression::rhs</definition>
        <argsstring></argsstring>
        <name>rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="35" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_compound_join_expression_1ac8c70428f2e2ac0d488e75ff4c838ddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CompoundJoinExpression::~CompoundJoinExpression</definition>
        <argsstring>()</argsstring>
        <name>~CompoundJoinExpression</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="37" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_compound_join_expression_1aac05678407642c7f1ce611a26b0bde19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CompoundJoinExpression::CompoundJoinExpression</definition>
        <argsstring>(JoinExpression *_lhs, JoinExpression *_rhs, ExpressionType _type)</argsstring>
        <name>CompoundJoinExpression</name>
        <param>
          <type><ref refid="class_join_expression" kindref="compound">JoinExpression</ref> *</type>
          <declname>_lhs</declname>
        </param>
        <param>
          <type><ref refid="class_join_expression" kindref="compound">JoinExpression</ref> *</type>
          <declname>_rhs</declname>
        </param>
        <param>
          <type><ref refid="expression__types_8h_1a51ad9989dafb48362f7e9354d68fe720" kindref="member">ExpressionType</ref></type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="43" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_compound_join_expression_1ab3e54191cf851fe457b972ed02141d2f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CompoundJoinExpression::CompoundJoinExpression</definition>
        <argsstring>(ExpressionType t)</argsstring>
        <name>CompoundJoinExpression</name>
        <param>
          <type><ref refid="expression__types_8h_1a51ad9989dafb48362f7e9354d68fe720" kindref="member">ExpressionType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="46" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="45" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_compound_join_expression_1a7248b9c82a104d770e86027a37488e36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CompoundJoinExpression::walk</definition>
        <argsstring>(const std::vector&lt; hyrise::storage::c_atable_ptr_t &gt; &amp;i)</argsstring>
        <name>walk</name>
        <reimplements refid="class_join_expression_1a858a33ac5267ee7649b5aa6ef95ef939">walk</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref> &gt; &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="48" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_compound_join_expression_1a4474e41ad753a71508714ace061a0e89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CompoundJoinExpression::operator()</definition>
        <argsstring>(size_t left_row, size_t right_row)</argsstring>
        <name>operator()</name>
        <reimplements refid="class_join_expression_1a26ef21192d89d2a264c1b92f4b24e6c7">operator()</reimplements>
        <param>
          <type>size_t</type>
          <declname>left_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>right_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="53" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="53" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1741">
        <label>JoinExpression</label>
        <link refid="class_join_expression"/>
      </node>
      <node id="1740">
        <label>CompoundJoinExpression</label>
        <link refid="class_compound_join_expression"/>
        <childnode refid="1741" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1743">
        <label>JoinExpression</label>
        <link refid="class_join_expression"/>
      </node>
      <node id="1742">
        <label>CompoundJoinExpression</label>
        <link refid="class_compound_join_expression"/>
        <childnode refid="1743" relation="public-inheritance">
        </childnode>
        <childnode refid="1743" relation="usage">
          <edgelabel>+lhs</edgelabel>
          <edgelabel>+rhs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" line="27" bodyfile="/home/vagrant/lanice/src/lib/access/expressions/join_predicates.h" bodystart="27" bodyend="68"/>
    <listofallmembers>
      <member refid="class_compound_join_expression_1aac05678407642c7f1ce611a26b0bde19" prot="public" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>CompoundJoinExpression</name></member>
      <member refid="class_compound_join_expression_1ab3e54191cf851fe457b972ed02141d2f" prot="public" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>CompoundJoinExpression</name></member>
      <member refid="class_join_expression_1aae263d8f422eadac4b618fa56f27e5fb" prot="public" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>JoinExpression</name></member>
      <member refid="class_compound_join_expression_1a75bf4b829f314f4cc6813e6b7685a780" prot="public" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>lhs</name></member>
      <member refid="class_compound_join_expression_1a4474e41ad753a71508714ace061a0e89" prot="public" virt="virtual"><scope>CompoundJoinExpression</scope><name>operator()</name></member>
      <member refid="class_compound_join_expression_1a2a122a538725a8f952bc459d83ac4aa2" prot="public" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>rhs</name></member>
      <member refid="class_compound_join_expression_1a9f5d7af6f9e792f006b833ff0d6be872" prot="private" virt="non-virtual"><scope>CompoundJoinExpression</scope><name>type</name></member>
      <member refid="class_compound_join_expression_1a7248b9c82a104d770e86027a37488e36" prot="public" virt="virtual"><scope>CompoundJoinExpression</scope><name>walk</name></member>
      <member refid="class_compound_join_expression_1ac8c70428f2e2ac0d488e75ff4c838ddd" prot="public" virt="virtual"><scope>CompoundJoinExpression</scope><name>~CompoundJoinExpression</name></member>
      <member refid="class_join_expression_1a31712a50b5ae7bb19a03837e25ce232d" prot="public" virt="virtual"><scope>CompoundJoinExpression</scope><name>~JoinExpression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
