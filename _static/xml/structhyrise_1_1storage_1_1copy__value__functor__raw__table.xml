<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="structhyrise_1_1storage_1_1copy__value__functor__raw__table" kind="struct" prot="public">
    <compoundname>hyrise::storage::copy_value_functor_raw_table</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a7a686e2bb70fb56e30b7b7c5383cb992" prot="public" static="no">
        <type>void</type>
        <definition>typedef void hyrise::storage::copy_value_functor_raw_table::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="19" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1af02b01a13e80283e08d43c5de97f4b5d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">atable_ptr_t</ref></type>
        <definition>atable_ptr_t hyrise::storage::copy_value_functor_raw_table::_dest</definition>
        <argsstring></argsstring>
        <name>_dest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="21" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a2d8782f913a0d7c7c9285375966f5d02" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="class_raw_table" kindref="compound">RawTable</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const RawTable&gt; hyrise::storage::copy_value_functor_raw_table::_src</definition>
        <argsstring></argsstring>
        <name>_src</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="22" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1ad9ca44c694fe8a5a90cd646049b281b3" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hyrise::storage::copy_value_functor_raw_table::_srcRow</definition>
        <argsstring></argsstring>
        <name>_srcRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="24" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1acf98a8904bb56a7bb5b034a19ed27b94" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hyrise::storage::copy_value_functor_raw_table::_destRow</definition>
        <argsstring></argsstring>
        <name>_destRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="25" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a3398a813eb4a52e25aff6841a26a227d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hyrise::storage::copy_value_functor_raw_table::_field</definition>
        <argsstring></argsstring>
        <name>_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="26" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a3b0745e8f2f7d9eadb889235d0347aa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hyrise::storage::copy_value_functor_raw_table::copy_value_functor_raw_table</definition>
        <argsstring>(atable_ptr_t d, std::shared_ptr&lt; const RawTable &gt; s)</argsstring>
        <name>copy_value_functor_raw_table</name>
        <param>
          <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">atable_ptr_t</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; const <ref refid="class_raw_table" kindref="compound">RawTable</ref> &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="31" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1ad9189adbd596f2b55e30e4f3b92c0596" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hyrise::storage::copy_value_functor_raw_table::setValues</definition>
        <argsstring>(const size_t destRow, const size_t srcRow, const size_t field)</argsstring>
        <name>setValues</name>
        <param>
          <type>const size_t</type>
          <declname>destRow</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>srcRow</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="36" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a266bc856337a5416ce5182daef4a2c8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hyrise::storage::copy_value_functor_raw_table::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="42" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Simple functor that copies all values from the src raw table to the destination table. The only requirement is that the source table is really an uncompressed table otherwise this will fail with a seg fault. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1765">
        <label>hyrise::storage::copy_value_functor_raw_table</label>
        <link refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table"/>
      </node>
    </collaborationgraph>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" line="18" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/access/SimpleRawTableScan.cpp" bodystart="18" bodyend="45"/>
    <listofallmembers>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1af02b01a13e80283e08d43c5de97f4b5d" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>_dest</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1acf98a8904bb56a7bb5b034a19ed27b94" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>_destRow</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a3398a813eb4a52e25aff6841a26a227d" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>_field</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a2d8782f913a0d7c7c9285375966f5d02" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>_src</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1ad9ca44c694fe8a5a90cd646049b281b3" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>_srcRow</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a3b0745e8f2f7d9eadb889235d0347aa2" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>copy_value_functor_raw_table</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a266bc856337a5416ce5182daef4a2c8a" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>operator()</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1ad9189adbd596f2b55e30e4f3b92c0596" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>setValues</name></member>
      <member refid="structhyrise_1_1storage_1_1copy__value__functor__raw__table_1a7a686e2bb70fb56e30b7b7c5383cb992" prot="public" virt="non-virtual"><scope>hyrise::storage::copy_value_functor_raw_table</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
