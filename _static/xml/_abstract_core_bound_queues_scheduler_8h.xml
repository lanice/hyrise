<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_abstract_core_bound_queues_scheduler_8h" kind="file">
    <compoundname>AbstractCoreBoundQueuesScheduler.h</compoundname>
    <includes refid="_abstract_task_scheduler_8h" local="yes">AbstractTaskScheduler.h</includes>
    <includes refid="_abstract_core_bound_queue_8h" local="yes">AbstractCoreBoundQueue.h</includes>
    <includes local="no">atomic</includes>
    <includedby refid="_abstract_core_bound_queues_scheduler_8cpp" local="yes">src/lib/taskscheduler/AbstractCoreBoundQueuesScheduler.cpp</includedby>
    <includedby refid="_core_bound_priority_queues_scheduler_8h" local="yes">src/lib/taskscheduler/CoreBoundPriorityQueuesScheduler.h</includedby>
    <includedby refid="_core_bound_queues_scheduler_8h" local="yes">src/lib/taskscheduler/CoreBoundQueuesScheduler.h</includedby>
    <includedby refid="_w_s_core_bound_priority_queues_scheduler_8h" local="yes">src/lib/taskscheduler/WSCoreBoundPriorityQueuesScheduler.h</includedby>
    <includedby refid="_w_s_core_bound_queues_scheduler_8h" local="yes">src/lib/taskscheduler/WSCoreBoundQueuesScheduler.h</includedby>
    <incdepgraph>
      <node id="18510">
        <label>atomic</label>
      </node>
      <node id="18503">
        <label>queue</label>
      </node>
      <node id="18501">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="18498" relation="include">
        </childnode>
        <childnode refid="18497" relation="include">
        </childnode>
        <childnode refid="18502" relation="include">
        </childnode>
        <childnode refid="18503" relation="include">
        </childnode>
        <childnode refid="18499" relation="include">
        </childnode>
        <childnode refid="18504" relation="include">
        </childnode>
        <childnode refid="18495" relation="include">
        </childnode>
      </node>
      <node id="18495">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="18496" relation="include">
        </childnode>
        <childnode refid="18497" relation="include">
        </childnode>
        <childnode refid="18498" relation="include">
        </childnode>
        <childnode refid="18499" relation="include">
        </childnode>
        <childnode refid="18500" relation="include">
        </childnode>
      </node>
      <node id="18500">
        <label>string</label>
      </node>
      <node id="18509">
        <label>AbstractCoreBoundQueue.h</label>
        <link refid="_abstract_core_bound_queue_8h"/>
        <childnode refid="18501" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
      </node>
      <node id="18505">
        <label>unordered_set</label>
      </node>
      <node id="18508">
        <label>hwloc.h</label>
      </node>
      <node id="18499">
        <label>condition_variable</label>
      </node>
      <node id="18493">
        <label>src/lib/taskscheduler/AbstractCoreBoundQueuesScheduler.h</label>
        <link refid="AbstractCoreBoundQueuesScheduler.h"/>
        <childnode refid="18494" relation="include">
        </childnode>
        <childnode refid="18509" relation="include">
        </childnode>
        <childnode refid="18510" relation="include">
        </childnode>
      </node>
      <node id="18507">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="18508" relation="include">
        </childnode>
        <childnode refid="18496" relation="include">
        </childnode>
      </node>
      <node id="18496">
        <label>vector</label>
      </node>
      <node id="18506">
        <label>iostream</label>
      </node>
      <node id="18494">
        <label>AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="18495" relation="include">
        </childnode>
        <childnode refid="18501" relation="include">
        </childnode>
        <childnode refid="18498" relation="include">
        </childnode>
        <childnode refid="18505" relation="include">
        </childnode>
        <childnode refid="18506" relation="include">
        </childnode>
        <childnode refid="18504" relation="include">
        </childnode>
        <childnode refid="18507" relation="include">
        </childnode>
      </node>
      <node id="18497">
        <label>mutex</label>
      </node>
      <node id="18502">
        <label>thread</label>
      </node>
      <node id="18504">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="18498">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18516">
        <label>src/lib/taskscheduler/CoreBoundQueuesScheduler.cpp</label>
        <link refid="_core_bound_queues_scheduler_8cpp"/>
      </node>
      <node id="18522">
        <label>src/lib/taskscheduler/WSCoreBoundQueue.h</label>
        <link refid="_w_s_core_bound_queue_8h"/>
        <childnode refid="18523" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
      </node>
      <node id="18520">
        <label>src/lib/taskscheduler/WSCoreBoundPriorityQueuesScheduler.cpp</label>
        <link refid="_w_s_core_bound_priority_queues_scheduler_8cpp"/>
      </node>
      <node id="18514">
        <label>src/lib/taskscheduler/CoreBoundPriorityQueuesScheduler.cpp</label>
        <link refid="_core_bound_priority_queues_scheduler_8cpp"/>
      </node>
      <node id="18515">
        <label>src/lib/taskscheduler/CoreBoundQueuesScheduler.h</label>
        <link refid="_core_bound_queues_scheduler_8h"/>
        <childnode refid="18516" relation="include">
        </childnode>
      </node>
      <node id="18517">
        <label>src/lib/taskscheduler/WSCoreBoundPriorityQueuesScheduler.h</label>
        <link refid="_w_s_core_bound_priority_queues_scheduler_8h"/>
        <childnode refid="18518" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
      </node>
      <node id="18511">
        <label>src/lib/taskscheduler/AbstractCoreBoundQueuesScheduler.h</label>
        <link refid="AbstractCoreBoundQueuesScheduler.h"/>
        <childnode refid="18512" relation="include">
        </childnode>
        <childnode refid="18513" relation="include">
        </childnode>
        <childnode refid="18515" relation="include">
        </childnode>
        <childnode refid="18517" relation="include">
        </childnode>
        <childnode refid="18521" relation="include">
        </childnode>
      </node>
      <node id="18519">
        <label>src/lib/taskscheduler/WSCoreBoundPriorityQueue.cpp</label>
        <link refid="_w_s_core_bound_priority_queue_8cpp"/>
      </node>
      <node id="18524">
        <label>src/lib/taskscheduler/WSCoreBoundQueuesScheduler.cpp</label>
        <link refid="_w_s_core_bound_queues_scheduler_8cpp"/>
      </node>
      <node id="18513">
        <label>src/lib/taskscheduler/CoreBoundPriorityQueuesScheduler.h</label>
        <link refid="_core_bound_priority_queues_scheduler_8h"/>
        <childnode refid="18514" relation="include">
        </childnode>
      </node>
      <node id="18521">
        <label>src/lib/taskscheduler/WSCoreBoundQueuesScheduler.h</label>
        <link refid="_w_s_core_bound_queues_scheduler_8h"/>
        <childnode refid="18522" relation="include">
        </childnode>
        <childnode refid="18524" relation="include">
        </childnode>
      </node>
      <node id="18523">
        <label>src/lib/taskscheduler/WSCoreBoundQueue.cpp</label>
        <link refid="_w_s_core_bound_queue_8cpp"/>
      </node>
      <node id="18512">
        <label>src/lib/taskscheduler/AbstractCoreBoundQueuesScheduler.cpp</label>
        <link refid="_abstract_core_bound_queues_scheduler_8cpp"/>
      </node>
      <node id="18518">
        <label>src/lib/taskscheduler/WSCoreBoundPriorityQueue.h</label>
        <link refid="_w_s_core_bound_priority_queue_8h"/>
        <childnode refid="18519" relation="include">
        </childnode>
        <childnode refid="18520" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_abstract_core_bound_queues_scheduler" prot="public">AbstractCoreBoundQueuesScheduler</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>AbstractCoreBoundQueuesScheduler.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Apr<sp/>4,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jwust</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ABSTRACTCOREBOUNDQUEUESSCHEDULER_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ABSTRACTCOREBOUNDQUEUESSCHEDULER_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_task_scheduler_8h" kindref="compound">AbstractTaskScheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_core_bound_queue_8h" kindref="compound">AbstractCoreBoundQueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_abstract_core_bound_queues_scheduler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_abstract_core_bound_queues_scheduler" kindref="compound">AbstractCoreBoundQueuesScheduler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_abstract_task_scheduler" kindref="compound">AbstractTaskScheduler</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_task_ready_observer" kindref="compound">TaskReadyObserver</ref>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_abstract_core_bound_queues_scheduler_1a631ddcb882f4faba3bd66b2e14139557" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queue" kindref="compound">AbstractCoreBoundQueue</ref><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a631ddcb882f4faba3bd66b2e14139557" kindref="member">task_queue_t</ref>;</highlight></codeline>
<codeline lineno="20" refid="class_abstract_core_bound_queues_scheduler_1a335ea7530d8684f829311c6a54299f2e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_set&lt;std::shared_ptr&lt;Task&gt;<sp/>&gt;<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a335ea7530d8684f829311c6a54299f2e" kindref="member">waiting_tasks_t</ref>;</highlight></codeline>
<codeline lineno="21" refid="class_abstract_core_bound_queues_scheduler_1a8fdfb2587c57925a2a8fe299ca32d3bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;task_queue_t<sp/>*&gt;<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a8fdfb2587c57925a2a8fe299ca32d3bb" kindref="member">task_queues_t</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>for<sp/>tasks<sp/>with<sp/>open<sp/>dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_abstract_core_bound_queues_scheduler_1aad5f93bbb4ba8bf6b2bf1f62f1baeefb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a335ea7530d8684f829311c6a54299f2e" kindref="member">waiting_tasks_t</ref><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1aad5f93bbb4ba8bf6b2bf1f62f1baeefb" kindref="member">_waitSet</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>task<sp/>queues<sp/>to<sp/>dispatch<sp/>tasks<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a8fdfb2587c57925a2a8fe299ca32d3bb" kindref="member">task_queues_t</ref><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scheduler<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;scheduler_status_t&gt;<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>protect<sp/>waitset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_abstract_core_bound_queues_scheduler_1a42daca96a5f90a29b2a51f65549dc9a2" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a42daca96a5f90a29b2a51f65549dc9a2" kindref="member">_setMutex</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>protect<sp/>task<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_abstract_core_bound_queues_scheduler_1a133386a2bd7b25c4a5e94c8880f0a480" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a133386a2bd7b25c4a5e94c8880f0a480" kindref="member">_queuesMutex</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>holds<sp/>the<sp/>queue<sp/>that<sp/>gets<sp/>the<sp/>next<sp/>task<sp/>(simple<sp/>roundrobin,<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_abstract_core_bound_queues_scheduler_1a2f49e819a2ef747e55153dca49d2277d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a2f49e819a2ef747e55153dca49d2277d" kindref="member">_nextQueue</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_abstract_core_bound_queues_scheduler_1ae1f42638dea16e2bdcc71d41266fb66f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>log4cxx::LoggerPtr<sp/><ref refid="class_abstract_core_bound_queues_scheduler_1ae1f42638dea16e2bdcc71d41266fb66f" kindref="member">_logger</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1af8e1b08a6c6a960674dfe465dd660623" kindref="member">pushToQueue</ref>(std::shared_ptr&lt;Task&gt;<sp/>task)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*<sp/>create<sp/>a<sp/>new<sp/>task<sp/>queue</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queue" kindref="compound">task_queue_t</ref><sp/>*<ref refid="class_abstract_core_bound_queues_scheduler_1a08677b5fd1c2e14bc4927578dd06ed52" kindref="member">createTaskQueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1aec38648b381ed9991c98135ddf8f6472" kindref="member">AbstractCoreBoundQueuesScheduler</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a784efcfc661e85802a7104da452d7fca" kindref="member">~AbstractCoreBoundQueuesScheduler</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*<sp/>return<sp/>scheduler<sp/>status</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_task_scheduler_1a8d6f6a94cb6592ae0113336467cee05f" kindref="member">scheduler_status_t</ref><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a2942be2fae11ee3cdb01ce1c545995eb" kindref="member">getSchedulerStatus</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/>schedule<sp/>a<sp/>given<sp/>task</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a33648fb855936832e2788c9f573c179e" kindref="member">schedule</ref>(std::shared_ptr&lt;Task&gt;<sp/>task);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/>schedule<sp/>a<sp/>task<sp/>for<sp/>execution<sp/>on<sp/>a<sp/>given<sp/>core</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a33648fb855936832e2788c9f573c179e" kindref="member">schedule</ref>(std::shared_ptr&lt;Task&gt;<sp/>task,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*<sp/>notify<sp/>scheduler<sp/>that<sp/>a<sp/>given<sp/>task<sp/>is<sp/>ready</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1af9445868f76aca1d664083fa23773ee1" kindref="member">notifyReady</ref>(std::shared_ptr&lt;Task&gt;<sp/>task);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*<sp/>waits<sp/>for<sp/>all<sp/>tasks<sp/>to<sp/>finish</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a4ff96e84a952300c7b730b68dfdb50ad" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a6933c27d1db1a24466606b66103511d2" kindref="member">getNumberOfWorker</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1ae28fd97dc7367b2f67c0256890f1c52f" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ABSTRACTCOREBOUNDQUEUESSCHEDULER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/taskscheduler/AbstractCoreBoundQueuesScheduler.h"/>
  </compounddef>
</doxygen>
