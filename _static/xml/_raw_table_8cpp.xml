<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_raw_table_8cpp" kind="file">
    <compoundname>RawTable.cpp</compoundname>
    <includes refid="_raw_table_8h" local="yes">RawTable.h</includes>
    <includes refid="meta__storage_8h" local="yes">storage/meta_storage.h</includes>
    <includes refid="_column_metadata_8h" local="yes">storage/ColumnMetadata.h</includes>
    <incdepgraph>
      <node id="16700">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="16672">
        <label>RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="16673" relation="include">
        </childnode>
        <childnode refid="16674" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16681" relation="include">
        </childnode>
        <childnode refid="16696" relation="include">
        </childnode>
      </node>
      <node id="16687">
        <label>atomic</label>
      </node>
      <node id="16671">
        <label>src/lib/storage/RawTable.cpp</label>
        <link refid="RawTable.cpp"/>
        <childnode refid="16672" relation="include">
        </childnode>
        <childnode refid="16697" relation="include">
        </childnode>
        <childnode refid="16696" relation="include">
        </childnode>
      </node>
      <node id="16701">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="16682">
        <label>limits</label>
      </node>
      <node id="16690">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="16695">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="16674">
        <label>cstdint</label>
      </node>
      <node id="16681">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="16682" relation="include">
        </childnode>
        <childnode refid="16683" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16684" relation="include">
        </childnode>
        <childnode refid="16685" relation="include">
        </childnode>
        <childnode refid="16688" relation="include">
        </childnode>
        <childnode refid="16690" relation="include">
        </childnode>
        <childnode refid="16691" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
      </node>
      <node id="16679">
        <label>stdint.h</label>
      </node>
      <node id="16684">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="16674" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16682" relation="include">
        </childnode>
        <childnode refid="16683" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
      </node>
      <node id="16688">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="16674" relation="include">
        </childnode>
        <childnode refid="16689" relation="include">
        </childnode>
      </node>
      <node id="16675">
        <label>stdexcept</label>
      </node>
      <node id="16678">
        <label>string</label>
      </node>
      <node id="16698">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="16697">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16698" relation="include">
        </childnode>
        <childnode refid="16699" relation="include">
        </childnode>
        <childnode refid="16700" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16701" relation="include">
        </childnode>
      </node>
      <node id="16680">
        <label>ostream</label>
      </node>
      <node id="16694">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="16676">
        <label>vector</label>
      </node>
      <node id="16699">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="16689">
        <label>array</label>
      </node>
      <node id="16685">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="16686" relation="include">
        </childnode>
        <childnode refid="16687" relation="include">
        </childnode>
      </node>
      <node id="16677">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16679" relation="include">
        </childnode>
        <childnode refid="16680" relation="include">
        </childnode>
      </node>
      <node id="16692">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="16676" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16683" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
      </node>
      <node id="16686">
        <label>thread</label>
      </node>
      <node id="16693">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="16694" relation="include">
        </childnode>
        <childnode refid="16695" relation="include">
        </childnode>
      </node>
      <node id="16696">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
      </node>
      <node id="16673">
        <label>cstring</label>
      </node>
      <node id="16683">
        <label>memory</label>
      </node>
      <node id="16691">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16692" relation="include">
        </childnode>
        <childnode refid="16693" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structconvert__to__string__functor" prot="public">convert_to_string_functor</innerclass>
    <innerclass refid="structtype__func" prot="public">type_func</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1storage">hyrise::storage</innernamespace>
    <innernamespace refid="namespacehyrise_1_1storage_1_1rawtable">hyrise::storage::rawtable</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_raw_table_8h" kindref="compound">RawTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta__storage_8h" kindref="compound">storage/meta_storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_column_metadata_8h" kindref="compound">storage/ColumnMetadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">storage<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespacehyrise_1_1storage_1_1rawtable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rawtable<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a119ddc1ea815a113813802ea585b3c8f" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a119ddc1ea815a113813802ea585b3c8f" kindref="member">RowHelper::RowHelper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a8776c82cf4ebeb0f86f0e83709870655" kindref="member">metadata_vec_t</ref>&amp;<sp/>m)<sp/>:<sp/>_m(m)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>.resize(m.size());</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1abc9b11ecb8c8ad33d85e593ab458bd5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1abc9b11ecb8c8ad33d85e593ab458bd5e" kindref="member">RowHelper::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a160b5e26cbdca42f461b27d4e6e0732b" kindref="member">_header</ref><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d:<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>free(d);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>_tempData.clear();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a79ff99d795c4deb264a06eb6d40a8aa2" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a79ff99d795c4deb264a06eb6d40a8aa2" kindref="member">RowHelper::build</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">record_header</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1ab459bd0658fe869d06411615555eb23f" kindref="member">_m</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1ab459bd0658fe869d06411615555eb23f" kindref="member">_m</ref>[i].getType()<sp/>==<sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>+=<sp/>*(uint16_t*)<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>[i]<sp/>+<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>string<sp/>length<sp/>in<sp/>bytes<sp/>plus<sp/>length<sp/>var</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref><sp/>*<sp/>data<sp/>=<sp/>(<ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*)<sp/>malloc(<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">record_header</ref><sp/>*header<sp/>=<sp/>(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">record_header</ref>*)<sp/>data;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header_1a2aa3aea6e1b9f01a627522b50a6e5597" kindref="member">width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>complete<sp/>data<sp/>based<sp/>on<sp/>the<sp/>simplification<sp/>of<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref><sp/>*mov<sp/>=<sp/>data<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">record_header</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1ab459bd0658fe869d06411615555eb23f" kindref="member">_m</ref>[i].getType()<sp/>==<sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mov,<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>[i],<sp/>2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mov+2,<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>[i]+2,<sp/>*(uint16_t*)<sp/>mov);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mov<sp/>+=<sp/>2<sp/>+<sp/>*(uint16_t*)<sp/>mov;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mov,<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>[i],<sp/>8);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mov<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="50" refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a63d5fe6c5ad1660a3b37babe6101b8b5" refkind="member"><highlight class="normal">std::string<sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a1e2ed5bab7c1d319b2fc20aba647dd70" kindref="member">RowHelper::convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*<sp/>d,<sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6" kindref="member">DataType</ref><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::string<sp/>result((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>d<sp/>+<sp/>2,<sp/>*((uint16_t*)<sp/>d));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="56" refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1ac60537e8dda54ce0eae9ea2ed1cb8392" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a809c4c4189053e753acb991c4119cd7f" kindref="member">RowHelper::set</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/>std::string<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*<sp/>tmp<sp/>=<sp/>(<ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*)<sp/>malloc(2<sp/>+<sp/>val.size());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>memcpy(tmp+2,<sp/>(<ref refid="namespacehyrise_1_1storage_1_1rawtable_1ae3160cbd93089f74dbe8900ee1f161b6" kindref="member">byte</ref>*)<sp/>val.c_str(),<sp/>val.size());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>*((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)<sp/>tmp)<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val.size());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a4da70547008af3b4827d0892d8e6e9b2" kindref="member">_tempData</ref>[index]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71" refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" kindref="member">to_string</ref>(T<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(val);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="76" refid="namespacehyrise_1aec58f00f171c12aa4ef29682158b9fc2" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="78" refid="namespacehyrise_1aa5586c1f440cd9c7f29acde264d8a811" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" kindref="member">to_string</ref>(std::string&amp;<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="80" refid="namespacehyrise_1a245164bd4474150df50a9b479b4ab02e" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" kindref="member">to_string</ref>(std::string<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_raw_table_1ac46fd155e0e61fe1f5c3eacaac34ac5f" refkind="member"><highlight class="normal"><ref refid="class_raw_table_1ac46fd155e0e61fe1f5c3eacaac34ac5f" kindref="member">RawTable::RawTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a8776c82cf4ebeb0f86f0e83709870655" kindref="member">metadata_vec_t</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size)<sp/>:<sp/>_metadata(m),<sp/>_width(m.size()),<sp/>_size(0)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>memory<sp/>allocation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>this<sp/>should<sp/>use<sp/>the<sp/>defined<sp/>allocator<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref><sp/>=<sp/>(<ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">byte</ref>*)<sp/>calloc(1024*1024,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>=<sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1ae5a9cae8d0d9e8c5b0412160812b7848" kindref="member">_endOfStorage</ref><sp/>=<sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref><sp/>+<sp/>1024*1024;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_raw_table_1a8a1d383e50f9176581a74a0204426c3b" refkind="member"><highlight class="normal"><ref refid="class_raw_table_1a8a1d383e50f9176581a74a0204426c3b" kindref="member">RawTable::~RawTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>free(<ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_raw_table_1a21078f3425fb3e155b2f454bbc49be6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a21078f3425fb3e155b2f454bbc49be6e" kindref="member">RawTable::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1ab85b2188ce89a7eecce908ae67dd3616" kindref="member">_size</ref>;<sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_raw_table_1acfc8ef42e5efe91846c74d4d331a8d9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1acfc8ef42e5efe91846c74d4d331a8d9c" kindref="member">RawTable::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a7faf4e4a831b9819a1f987b2ae997cab" kindref="member">_width</ref>;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_raw_table_1a70dfd7302ccf2f5111a0f6afa4666232" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a70dfd7302ccf2f5111a0f6afa4666232" kindref="member">RawTable::reserve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nr_of_values)<sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_raw_table_1a4c947d70e2ba5b3b2d7309db499ed33d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a4c947d70e2ba5b3b2d7309db499ed33d" kindref="member">RawTable::resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nr_of_values)<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_raw_table_1a8e05295f2073cda22da23201c9047cda" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*<ref refid="class_raw_table_1a8e05295f2073cda22da23201c9047cda" kindref="member">RawTable::metadataAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(<ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>.at(column));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_raw_table_1a7a742fd0d8f450efbacb3c7e6c0549c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a7a742fd0d8f450efbacb3c7e6c0549c6" kindref="member">RawTable::partitionCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sh:<sp/>reduced<sp/>to<sp/>zero,<sp/>prevents<sp/>PointerCalculator<sp/>from<sp/>updating<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_raw_table_1a662f974833f302a2014b30ceb099a88d" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/><ref refid="class_raw_table_1a662f974833f302a2014b30ceb099a88d" kindref="member">RawTable::subtableCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_raw_table_1a33d1e6ccd93af0e6c26d4f4961879285" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_raw_table_1a33d1e6ccd93af0e6c26d4f4961879285" kindref="member">RawTable::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_raw_table_1a768adee7f0b4191470be553c27d158e8" refkind="member"><highlight class="normal"><ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">RawTable::byte</ref>*<sp/><ref refid="class_raw_table_1a768adee7f0b4191470be553c27d158e8" kindref="member">RawTable::computePosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&gt;<sp/><ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>.size()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Column<sp/>out<sp/>of<sp/>range<sp/>in<sp/>getValue()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">byte</ref>*<sp/>tuple<sp/>=<sp/><ref refid="class_raw_table_1a138f95f664413b2be0ca61d307dbfab3" kindref="member">getRow</ref>(row);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>tuple<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">hyrise::storage::rawtable::record_header</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>column;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>[i].getType()<sp/>==<sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuple<sp/>+=<sp/>2<sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>the<sp/>length<sp/>*/</highlight><highlight class="normal"><sp/>+<sp/>*((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)<sp/>tuple);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tuple<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tuple;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structconvert__to__string__functor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconvert__to__string__functor" kindref="compound">convert_to_string_functor</ref><sp/>{</highlight></codeline>
<codeline lineno="142" refid="structconvert__to__string__functor_1a5e1cf01e360ad08c3cdccf0f85b326ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structconvert__to__string__functor_1a5e1cf01e360ad08c3cdccf0f85b326ab" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="143" refid="structconvert__to__string__functor_1a74c4e2f7b6cc164924f29bce87b82efe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_raw_table" kindref="compound">RawTable</ref>&amp;<sp/><ref refid="structconvert__to__string__functor_1a74c4e2f7b6cc164924f29bce87b82efe" kindref="member">_table</ref>;</highlight></codeline>
<codeline lineno="144" refid="structconvert__to__string__functor_1a257ed933dd73c41ea6b81bb761594c3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="structconvert__to__string__functor_1a257ed933dd73c41ea6b81bb761594c3c" kindref="member">_col</ref>;</highlight></codeline>
<codeline lineno="145" refid="structconvert__to__string__functor_1a58528414fb0e1c86559139e8d1e24fe2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="structconvert__to__string__functor_1a58528414fb0e1c86559139e8d1e24fe2" kindref="member">_row</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structconvert__to__string__functor_1a95e6886efd3ee69616ff75b8d7075b25" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structconvert__to__string__functor_1a95e6886efd3ee69616ff75b8d7075b25" kindref="member">convert_to_string_functor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_raw_table" kindref="compound">RawTable</ref>&amp;<sp/>table,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>col,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>row)<sp/>:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structconvert__to__string__functor_1a74c4e2f7b6cc164924f29bce87b82efe" kindref="member">_table</ref>(table),<sp/><ref refid="structconvert__to__string__functor_1a257ed933dd73c41ea6b81bb761594c3c" kindref="member">_col</ref>(col),<sp/><ref refid="structconvert__to__string__functor_1a58528414fb0e1c86559139e8d1e24fe2" kindref="member">_row</ref>(row)<sp/>{};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="153" refid="structconvert__to__string__functor_1a17c905bd12bb17388cbcd92460605a74" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structconvert__to__string__functor_1a17c905bd12bb17388cbcd92460605a74" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1ae2a34577049f3e44e2258a8dd7d7ac07" kindref="member">hyrise::to_string</ref>(<ref refid="structconvert__to__string__functor_1a74c4e2f7b6cc164924f29bce87b82efe" kindref="member">_table</ref>.template<sp/>getValue&lt;R&gt;(<ref refid="structconvert__to__string__functor_1a257ed933dd73c41ea6b81bb761594c3c" kindref="member">_col</ref>,<sp/><ref refid="structconvert__to__string__functor_1a58528414fb0e1c86559139e8d1e24fe2" kindref="member">_row</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_raw_table_1a4cd772493afe4e9185ee249e12e700ee" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_raw_table_1a4cd772493afe4e9185ee249e12e700ee" kindref="member">RawTable::printValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">hyrise::storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="structconvert__to__string__functor" kindref="compound">convert_to_string_functor</ref><sp/>f(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>col,<sp/>row);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts(<ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>.at(col).getType(),<sp/>f);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_raw_table_1a138f95f664413b2be0ca61d307dbfab3" refkind="member"><highlight class="normal"><ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">RawTable::byte</ref>*<sp/><ref refid="class_raw_table_1a138f95f664413b2be0ca61d307dbfab3" kindref="member">RawTable::getRow</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_raw_table_1ab85b2188ce89a7eecce908ae67dd3616" kindref="member">_size</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Index<sp/>out<sp/>of<sp/>range<sp/>for<sp/>getRow()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">byte</ref><sp/>*data<sp/>=<sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>index;<sp/>++i)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>((<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">hyrise::storage::rawtable::record_header</ref>*)<sp/>data)-&gt;width;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_raw_table_1a88229000c87228c79220684e30772717" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a88229000c87228c79220684e30772717" kindref="member">RawTable::appendRow</ref>(<ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">byte</ref>*<sp/>tuple)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/><sp/>=<sp/>((<ref refid="structhyrise_1_1storage_1_1rawtable_1_1record__header" kindref="compound">hyrise::storage::rawtable::record_header</ref>*)<sp/>tuple)-&gt;width;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>+<sp/>width)<sp/>&gt;<sp/><ref refid="class_raw_table_1ae5a9cae8d0d9e8c5b0412160812b7848" kindref="member">_endOfStorage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/>((<ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>+<sp/>width)<sp/>-<sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref>)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/><ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>-<sp/><ref refid="class_raw_table_1aa589dae0b680267399bc5893b3102c9c" kindref="member">_data</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>this<sp/>should<sp/>use<sp/>the<sp/>allocator<sp/>strategy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>_data<sp/>=<sp/>(<ref refid="class_raw_table_1ad78945f072fcf167d8ef81ee5665dec8" kindref="member">byte</ref>*)<sp/>realloc(_data,<sp/>amount);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>=<sp/>_data<sp/>+<sp/>dist;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_raw_table_1ae5a9cae8d0d9e8c5b0412160812b7848" kindref="member">_endOfStorage</ref><sp/>=<sp/>_data<sp/>+<sp/>amount;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref>,<sp/>tuple,<sp/>width);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1a150dd3eba5196ef18e712b975d19825c" kindref="member">_endOfData</ref><sp/>+=<sp/>width;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="class_raw_table_1ab85b2188ce89a7eecce908ae67dd3616" kindref="member">_size</ref>++;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structtype__func" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtype__func" kindref="compound">type_func</ref><sp/>{</highlight></codeline>
<codeline lineno="190" refid="structtype__func_1a0b8add1a7fc1d286b2507e3be92e249c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtype__func_1a0b8add1a7fc1d286b2507e3be92e249c" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structtype__func_1a09016b17931dae68e451169b29f869ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/><ref refid="structtype__func_1a09016b17931dae68e451169b29f869ab" kindref="member">_source</ref>;</highlight></codeline>
<codeline lineno="193" refid="structtype__func_1a3653b3c2ca54e3c1fa2d12f1d7ae580f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper" kindref="compound">hyrise::storage::rawtable::RowHelper</ref>&amp;<sp/><ref refid="structtype__func_1a3653b3c2ca54e3c1fa2d12f1d7ae580f" kindref="member">_rh</ref>;</highlight></codeline>
<codeline lineno="194" refid="structtype__func_1ac2fd80733d3173f858b9fb7ca8f4e33e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="structtype__func_1ac2fd80733d3173f858b9fb7ca8f4e33e" kindref="member">_col</ref>;</highlight></codeline>
<codeline lineno="195" refid="structtype__func_1a1ae5bcaa70cefd5aee6e873cb7bbe940" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="structtype__func_1a1ae5bcaa70cefd5aee6e873cb7bbe940" kindref="member">_row</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structtype__func_1abf6f084a6dbaa5aed64d328d51e02b60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtype__func_1abf6f084a6dbaa5aed64d328d51e02b60" kindref="member">type_func</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/>source,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper" kindref="compound">hyrise::storage::rawtable::RowHelper</ref>&amp;<sp/>rh,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>column,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>row)<sp/>:<sp/><ref refid="structtype__func_1a09016b17931dae68e451169b29f869ab" kindref="member">_source</ref>(source),<sp/><ref refid="structtype__func_1a3653b3c2ca54e3c1fa2d12f1d7ae580f" kindref="member">_rh</ref>(rh),<sp/><ref refid="structtype__func_1ac2fd80733d3173f858b9fb7ca8f4e33e" kindref="member">_col</ref>(column),<sp/><ref refid="structtype__func_1a1ae5bcaa70cefd5aee6e873cb7bbe940" kindref="member">_row</ref>(row)<sp/>{}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="203" refid="structtype__func_1a9d391bb5ab3c2b35cab6195a46cc190e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structtype__func_1a9d391bb5ab3c2b35cab6195a46cc190e" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtype__func_1a3653b3c2ca54e3c1fa2d12f1d7ae580f" kindref="member">_rh</ref>.<ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a809c4c4189053e753acb991c4119cd7f" kindref="member">set</ref>&lt;R&gt;(<ref refid="structtype__func_1ac2fd80733d3173f858b9fb7ca8f4e33e" kindref="member">_col</ref>,<sp/><ref refid="structtype__func_1a09016b17931dae68e451169b29f869ab" kindref="member">_source</ref>-&gt;getValue&lt;R&gt;(<ref refid="structtype__func_1ac2fd80733d3173f858b9fb7ca8f4e33e" kindref="member">_col</ref>,<sp/><ref refid="structtype__func_1a1ae5bcaa70cefd5aee6e873cb7bbe940" kindref="member">_row</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_raw_table_1a6499f81876a152316aceabb67314bb3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_raw_table_1a6499f81876a152316aceabb67314bb3d" kindref="member">RawTable::appendRows</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">hyrise::storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row=0;<sp/>row<sp/>&lt;<sp/>rows-&gt;size();<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper" kindref="compound">hyrise::storage::rawtable::RowHelper</ref><sp/>rh(<ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column=0;<sp/>column<sp/>&lt;<sp/><ref refid="class_raw_table_1a699d7387d15419136fcb1dae037a27ac" kindref="member">_metadata</ref>.size();<sp/>++column)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structtype__func" kindref="compound">type_func</ref><sp/>tf(rows,<sp/>rh,<sp/>column,<sp/>row);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ts(rows-&gt;typeOfColumn(column),<sp/>tf);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;unsigned<sp/>char&gt;<sp/>data(rh.<ref refid="structhyrise_1_1storage_1_1rawtable_1_1_row_helper_1a79ff99d795c4deb264a06eb6d40a8aa2" kindref="member">build</ref>());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_raw_table_1a88229000c87228c79220684e30772717" kindref="member">appendRow</ref>(data.get());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/RawTable.cpp"/>
  </compounddef>
</doxygen>
