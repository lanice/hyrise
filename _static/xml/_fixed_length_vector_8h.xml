<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_fixed_length_vector_8h" kind="file">
    <compoundname>FixedLengthVector.h</compoundname>
    <includes local="no">cerrno</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cmath</includes>
    <includes local="no">atomic</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">sstream</includes>
    <includes refid="_malloc_strategy_8h" local="yes">memory/MallocStrategy.h</includes>
    <includes refid="_base_attribute_vector_8h" local="yes">storage/BaseAttributeVector.h</includes>
    <includedby refid="_example_expression_8h" local="yes">src/lib/access/expressions/ExampleExpression.h</includedby>
    <includedby refid="_generic_expressions_8h" local="yes">src/lib/access/expressions/GenericExpressions.h</includedby>
    <includedby refid="_histogram_8h" local="yes">src/lib/access/radixjoin/Histogram.h</includedby>
    <includedby refid="_prefix_sum_8h" local="yes">src/lib/access/radixjoin/PrefixSum.h</includedby>
    <includedby refid="_script_operation_8cpp" local="no">src/lib/access/ScriptOperation.cpp</includedby>
    <includedby refid="_attribute_vector_factory_8h" local="no">src/lib/storage/AttributeVectorFactory.h</includedby>
    <incdepgraph>
      <node id="15699">
        <label>atomic</label>
      </node>
      <node id="15707">
        <label>cstdint</label>
      </node>
      <node id="15698">
        <label>cmath</label>
      </node>
      <node id="15703">
        <label>stdexcept</label>
      </node>
      <node id="15695">
        <label>src/lib/storage/FixedLengthVector.h</label>
        <link refid="FixedLengthVector.h"/>
        <childnode refid="15696" relation="include">
        </childnode>
        <childnode refid="15697" relation="include">
        </childnode>
        <childnode refid="15698" relation="include">
        </childnode>
        <childnode refid="15699" relation="include">
        </childnode>
        <childnode refid="15700" relation="include">
        </childnode>
        <childnode refid="15701" relation="include">
        </childnode>
        <childnode refid="15702" relation="include">
        </childnode>
        <childnode refid="15703" relation="include">
        </childnode>
        <childnode refid="15704" relation="include">
        </childnode>
        <childnode refid="15705" relation="include">
        </childnode>
        <childnode refid="15708" relation="include">
        </childnode>
      </node>
      <node id="15702">
        <label>string</label>
      </node>
      <node id="15709">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
        <childnode refid="15710" relation="include">
        </childnode>
      </node>
      <node id="15708">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="15700" relation="include">
        </childnode>
        <childnode refid="15703" relation="include">
        </childnode>
        <childnode refid="15709" relation="include">
        </childnode>
      </node>
      <node id="15704">
        <label>sstream</label>
      </node>
      <node id="15696">
        <label>cerrno</label>
      </node>
      <node id="15706">
        <label>iostream</label>
      </node>
      <node id="15710">
        <label>cstddef</label>
      </node>
      <node id="15701">
        <label>mutex</label>
      </node>
      <node id="15705">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="15706" relation="include">
        </childnode>
        <childnode refid="15707" relation="include">
        </childnode>
      </node>
      <node id="15697">
        <label>cstring</label>
      </node>
      <node id="15700">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15712">
        <label>src/lib/access/expressions/ExampleExpression.h</label>
        <link refid="_example_expression_8h"/>
        <childnode refid="15713" relation="include">
        </childnode>
        <childnode refid="15714" relation="include">
        </childnode>
        <childnode refid="15715" relation="include">
        </childnode>
      </node>
      <node id="15739">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="15769">
        <label>src/lib/storage/storage_types_helper.h</label>
        <link refid="storage__types__helper_8h"/>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15733" relation="include">
        </childnode>
        <childnode refid="15771" relation="include">
        </childnode>
      </node>
      <node id="15777">
        <label>src/lib/access/storage/JsonTable.cpp</label>
        <link refid="_json_table_8cpp"/>
      </node>
      <node id="15784">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="_store_8cpp"/>
      </node>
      <node id="15753">
        <label>src/lib/access/CreateIndex.cpp</label>
        <link refid="_create_index_8cpp"/>
      </node>
      <node id="15763">
        <label>src/lib/access/ProjectionScan.cpp</label>
        <link refid="lib_2access_2_projection_scan_8cpp"/>
      </node>
      <node id="15760">
        <label>src/lib/access/IntersectPositions.cpp</label>
        <link refid="_intersect_positions_8cpp"/>
      </node>
      <node id="15774">
        <label>src/lib/access/InsertScan.cpp</label>
        <link refid="_insert_scan_8cpp"/>
      </node>
      <node id="15722">
        <label>src/lib/access/radixjoin/RadixCluster.cpp</label>
        <link refid="_radix_cluster_8cpp"/>
      </node>
      <node id="15778">
        <label>src/lib/access/storage/TableIO.cpp</label>
        <link refid="_table_i_o_8cpp"/>
      </node>
      <node id="15737">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="15728">
        <label>src/lib/access/ExpressionScan.cpp</label>
        <link refid="_expression_scan_8cpp"/>
      </node>
      <node id="15744">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="15748">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="15764">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="15759">
        <label>src/lib/access/IndexScan.cpp</label>
        <link refid="_index_scan_8cpp"/>
      </node>
      <node id="15721">
        <label>src/lib/access/radixjoin/RadixCluster.h</label>
        <link refid="_radix_cluster_8h"/>
        <childnode refid="15722" relation="include">
        </childnode>
      </node>
      <node id="15758">
        <label>src/lib/access/HashValueJoin.hpp</label>
        <link refid="_hash_value_join_8hpp"/>
        <childnode refid="15736" relation="include">
        </childnode>
      </node>
      <node id="15749">
        <label>src/lib/io/Loader.cpp</label>
        <link refid="_loader_8cpp"/>
      </node>
      <node id="15735">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="15736" relation="include">
        </childnode>
      </node>
      <node id="15786">
        <label>src/lib/storage/TableGenerator.cpp</label>
        <link refid="_table_generator_8cpp"/>
      </node>
      <node id="15747">
        <label>src/lib/access/radixjoin/NestedLoopEquiJoin.cpp</label>
        <link refid="_nested_loop_equi_join_8cpp"/>
      </node>
      <node id="15754">
        <label>src/lib/access/Delete.cpp</label>
        <link refid="_delete_8cpp"/>
      </node>
      <node id="15776">
        <label>src/lib/access/MergeTable.cpp</label>
        <link refid="_merge_table_8cpp"/>
      </node>
      <node id="15782">
        <label>src/lib/io/TransactionManager.cpp</label>
        <link refid="_transaction_manager_8cpp"/>
      </node>
      <node id="15711">
        <label>src/lib/storage/FixedLengthVector.h</label>
        <link refid="FixedLengthVector.h"/>
        <childnode refid="15712" relation="include">
        </childnode>
        <childnode refid="15716" relation="include">
        </childnode>
        <childnode refid="15718" relation="include">
        </childnode>
        <childnode refid="15723" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15725" relation="include">
        </childnode>
      </node>
      <node id="15767">
        <label>src/lib/access/UnionScan.cpp</label>
        <link refid="lib_2access_2_union_scan_8cpp"/>
      </node>
      <node id="15727">
        <label>src/lib/storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15730" relation="include">
        </childnode>
        <childnode refid="15720" relation="include">
        </childnode>
        <childnode refid="15731" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15733" relation="include">
        </childnode>
        <childnode refid="15734" relation="include">
        </childnode>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15785" relation="include">
        </childnode>
        <childnode refid="15787" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15757">
        <label>src/lib/access/HashJoinProbe.cpp</label>
        <link refid="_hash_join_probe_8cpp"/>
      </node>
      <node id="15751">
        <label>src/lib/storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="15752" relation="include">
        </childnode>
        <childnode refid="15753" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
        <childnode refid="15755" relation="include">
        </childnode>
        <childnode refid="15756" relation="include">
        </childnode>
        <childnode refid="15757" relation="include">
        </childnode>
        <childnode refid="15758" relation="include">
        </childnode>
        <childnode refid="15759" relation="include">
        </childnode>
        <childnode refid="15760" relation="include">
        </childnode>
        <childnode refid="15761" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15745" relation="include">
        </childnode>
        <childnode refid="15762" relation="include">
        </childnode>
        <childnode refid="15763" relation="include">
        </childnode>
        <childnode refid="15718" relation="include">
        </childnode>
        <childnode refid="15747" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
        <childnode refid="15764" relation="include">
        </childnode>
        <childnode refid="15731" relation="include">
        </childnode>
        <childnode refid="15715" relation="include">
        </childnode>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15766" relation="include">
        </childnode>
        <childnode refid="15767" relation="include">
        </childnode>
        <childnode refid="15768" relation="include">
        </childnode>
        <childnode refid="15769" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15734">
        <label>src/lib/storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15745" relation="include">
        </childnode>
        <childnode refid="15747" relation="include">
        </childnode>
        <childnode refid="15722" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
        <childnode refid="15749" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
        <childnode refid="15751" relation="include">
        </childnode>
        <childnode refid="15773" relation="include">
        </childnode>
        <childnode refid="15785" relation="include">
        </childnode>
        <childnode refid="15786" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15756">
        <label>src/lib/access/GroupByScan.cpp</label>
        <link refid="lib_2access_2_group_by_scan_8cpp"/>
      </node>
      <node id="15741">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="15755">
        <label>src/lib/access/Distinct.cpp</label>
        <link refid="_distinct_8cpp"/>
      </node>
      <node id="15731">
        <label>src/lib/access/SortScan.cpp</label>
        <link refid="lib_2access_2_sort_scan_8cpp"/>
      </node>
      <node id="15761">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="15766">
        <label>src/lib/access/UnionAll.cpp</label>
        <link refid="_union_all_8cpp"/>
      </node>
      <node id="15729">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="15726">
        <label>src/lib/storage/Table.cpp</label>
        <link refid="_table_8cpp"/>
      </node>
      <node id="15771">
        <label>src/lib/storage/storage_types_helper.cpp</label>
        <link refid="storage__types__helper_8cpp"/>
      </node>
      <node id="15732">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="_abstract_table_8cpp"/>
      </node>
      <node id="15788">
        <label>src/lib/storage/TableFactory.cpp</label>
        <link refid="_table_factory_8cpp"/>
      </node>
      <node id="15733">
        <label>src/lib/storage/GroupValue.cpp</label>
        <link refid="_group_value_8cpp"/>
      </node>
      <node id="15775">
        <label>src/lib/access/LayoutTable.cpp</label>
        <link refid="_layout_table_8cpp"/>
      </node>
      <node id="15717">
        <label>src/lib/access/expressions/GenericExpressions.cpp</label>
        <link refid="_generic_expressions_8cpp"/>
      </node>
      <node id="15718">
        <label>src/lib/access/radixjoin/Histogram.h</label>
        <link refid="_histogram_8h"/>
        <childnode refid="15719" relation="include">
        </childnode>
        <childnode refid="15720" relation="include">
        </childnode>
        <childnode refid="15721" relation="include">
        </childnode>
      </node>
      <node id="15750">
        <label>src/lib/storage/MutableVerticalTable.cpp</label>
        <link refid="_mutable_vertical_table_8cpp"/>
      </node>
      <node id="15714">
        <label>src/lib/access/expressions/ExampleExpression.cpp</label>
        <link refid="_example_expression_8cpp"/>
      </node>
      <node id="15742">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="15762">
        <label>src/lib/access/PosUpdateScan.cpp</label>
        <link refid="_pos_update_scan_8cpp"/>
      </node>
      <node id="15743">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="15787">
        <label>src/lib/storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="15749" relation="include">
        </childnode>
        <childnode refid="15734" relation="include">
        </childnode>
        <childnode refid="15788" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15781">
        <label>src/lib/io/shortcuts.cpp</label>
        <link refid="shortcuts_8cpp"/>
      </node>
      <node id="15765">
        <label>src/lib/access/tx/ValidatePositions.cpp</label>
        <link refid="_validate_positions_8cpp"/>
      </node>
      <node id="15738">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="15725">
        <label>src/lib/storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15727" relation="include">
        </childnode>
      </node>
      <node id="15752">
        <label>src/bin/perf_regression/tx_performance.cpp</label>
        <link refid="tx__performance_8cpp"/>
      </node>
      <node id="15719">
        <label>src/lib/access/radixjoin/Histogram.cpp</label>
        <link refid="_histogram_8cpp"/>
      </node>
      <node id="15779">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="15713">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="15730">
        <label>src/lib/access/MaterializingScan.cpp</label>
        <link refid="_materializing_scan_8cpp"/>
      </node>
      <node id="15715">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="15740">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="15785">
        <label>src/lib/storage/TableBuilder.cpp</label>
        <link refid="_table_builder_8cpp"/>
      </node>
      <node id="15772">
        <label>src/lib/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="15737" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15739" relation="include">
        </childnode>
        <childnode refid="15740" relation="include">
        </childnode>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15742" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15744" relation="include">
        </childnode>
      </node>
      <node id="15783">
        <label>src/lib/storage/PrettyPrinter.cpp</label>
        <link refid="_pretty_printer_8cpp"/>
      </node>
      <node id="15768">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="_pointer_calculator_8cpp"/>
      </node>
      <node id="15770">
        <label>src/lib/io/TableDump.cpp</label>
        <link refid="_table_dump_8cpp"/>
      </node>
      <node id="15724">
        <label>src/lib/access/ScriptOperation.cpp</label>
        <link refid="_script_operation_8cpp"/>
      </node>
      <node id="15716">
        <label>src/lib/access/expressions/GenericExpressions.h</label>
        <link refid="_generic_expressions_8h"/>
        <childnode refid="15717" relation="include">
        </childnode>
      </node>
      <node id="15773">
        <label>src/lib/storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="15752" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
        <childnode refid="15716" relation="include">
        </childnode>
        <childnode refid="15774" relation="include">
        </childnode>
        <childnode refid="15775" relation="include">
        </childnode>
        <childnode refid="15776" relation="include">
        </childnode>
        <childnode refid="15762" relation="include">
        </childnode>
        <childnode refid="15764" relation="include">
        </childnode>
        <childnode refid="15777" relation="include">
        </childnode>
        <childnode refid="15778" relation="include">
        </childnode>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15779" relation="include">
        </childnode>
        <childnode refid="15749" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
        <childnode refid="15781" relation="include">
        </childnode>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15782" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15768" relation="include">
        </childnode>
        <childnode refid="15783" relation="include">
        </childnode>
        <childnode refid="15784" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15780">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
      <node id="15723">
        <label>src/lib/access/radixjoin/PrefixSum.h</label>
        <link refid="_prefix_sum_8h"/>
        <childnode refid="15720" relation="include">
        </childnode>
      </node>
      <node id="15736">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="15737" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15739" relation="include">
        </childnode>
        <childnode refid="15740" relation="include">
        </childnode>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15742" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15744" relation="include">
        </childnode>
      </node>
      <node id="15720">
        <label>src/lib/access/radixjoin/PrefixSum.cpp</label>
        <link refid="_prefix_sum_8cpp"/>
      </node>
      <node id="15745">
        <label>src/lib/access/MultiplyRefField.h</label>
        <link refid="_multiply_ref_field_8h"/>
        <childnode refid="15746" relation="include">
        </childnode>
      </node>
      <node id="15746">
        <label>src/lib/access/MultiplyRefField.cpp</label>
        <link refid="_multiply_ref_field_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_fixed_length_vector" prot="public">FixedLengthVector</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_malloc_strategy_8h" kindref="compound">memory/MallocStrategy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_base_attribute_vector_8h" kindref="compound">storage/BaseAttributeVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="21" refid="class_fixed_length_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fixed_length_vector" kindref="compound">FixedLengthVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_attribute_vector" kindref="compound">BaseAttributeVector</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>*<ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>;</highlight></codeline>
<codeline lineno="24" refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>;</highlight></codeline>
<codeline lineno="25" refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_fixed_length_vector_1afe3db192d815d3fc968f7baf751448fc" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_fixed_length_vector_1afe3db192d815d3fc968f7baf751448fc" kindref="member">_allocate_mtx</ref>;</highlight></codeline>
<codeline lineno="29" refid="class_fixed_length_vector_1a1a2c331680adc43d523e609aa5ccf7ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_malloc_strategy" kindref="compound">Strategy</ref><sp/>=<sp/><ref refid="class_malloc_strategy" kindref="compound">MallocStrategy</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="class_fixed_length_vector_1a88e3cfcb4a91aa942a520471a475393c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_fixed_length_vector_1a88e3cfcb4a91aa942a520471a475393c" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="class_fixed_length_vector_1afecfab84f9228305c101ecfcafc76420" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_fixed_length_vector_1afecfab84f9228305c101ecfcafc76420" kindref="member">FixedLengthVector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns,<sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/><sp/>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>),<sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>(0),<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>(columns),<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a9dc912b7034b5a2fc5d46c4bb0300a47" kindref="member">reserve</ref>(rows);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_fixed_length_vector_1adc0379ce3a9d8b0e91c7021eb1c6a7fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1adc0379ce3a9d8b0e91c7021eb1c6a7fe" kindref="member">~FixedLengthVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_malloc_strategy_1ad6e105af6a69d5770c8dc01abee6a0a6" kindref="member">Strategy::deallocate</ref>(<ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>,<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_fixed_length_vector_1aed521b7b2e7dc30025f772aeeb22e21e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_fixed_length_vector_1aed521b7b2e7dc30025f772aeeb22e21e" kindref="member">data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_fixed_length_vector_1a400973415e75f35e75dac396e4cdb4fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a400973415e75f35e75dac396e4cdb4fa" kindref="member">setNumRows</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_fixed_length_vector_1a1a72f3e46973e00e1be98f8c5da5bc16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>+<sp/>column];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_fixed_length_vector_1a3ce51dbb0eae7f0b0a56c8d86bfae41d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_fixed_length_vector_1a3ce51dbb0eae7f0b0a56c8d86bfae41d" kindref="member">getRef</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>+<sp/>column];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_fixed_length_vector_1a3fd9836b7e9fcfa2c563779bee46f4a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>+<sp/>column]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_fixed_length_vector_1a9dc912b7034b5a2fc5d46c4bb0300a47" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a9dc912b7034b5a2fc5d46c4bb0300a47" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1af15befd69acf788fbe9c3616c6421433" kindref="member">allocate</ref>(<ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>*<sp/>rows<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_fixed_length_vector_1a04059508e86eab53deb3299c0008a963" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a04059508e86eab53deb3299c0008a963" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1af15befd69acf788fbe9c3616c6421433" kindref="member">allocate</ref>(8);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_fixed_length_vector_1ac787f4d12ef63811082de03f84636e3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ac787f4d12ef63811082de03f84636e3f" kindref="member">size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_fixed_length_vector_1a8717a8f3917b16dd9d27aa350ebb0761" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a8717a8f3917b16dd9d27aa350ebb0761" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a9dc912b7034b5a2fc5d46c4bb0300a47" kindref="member">reserve</ref>(rows);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref><sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_fixed_length_vector_1a03d03171253a2e266eff0e5d2d4b9d34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a03d03171253a2e266eff0e5d2d4b9d34" kindref="member">rewriteColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bits)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>capacity<sp/>of<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_fixed_length_vector_1aa1f83b451eb267c66c03d65910bf27cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="class_fixed_length_vector_1aa1f83b451eb267c66c03d65910bf27cf" kindref="member">capacity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref><sp/>/<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_fixed_length_vector_1a88e3cfcb4a91aa942a520471a475393c" kindref="member">value_type</ref>)<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;BaseAttributeVector&lt;T&gt;&gt;<sp/><ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref><sp/>=<sp/>std::make_shared&lt;FixedLengthVector&lt;T&gt;&gt;(<ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>,<sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref>-&gt;_rows<sp/>=<sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref>-&gt;allocate(<ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref>-&gt;_values,<sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>,<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a467b2e24105b054f6f68224503fe2854" kindref="member">copy</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>value<sp/>by<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_fixed_length_vector_1ac0d6d7dbb21b749064929a64b369733f" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_fixed_length_vector_1ac0d6d7dbb21b749064929a64b369733f" kindref="member">inc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>+<sp/>column]++;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Atomic<sp/>Increment<sp/>the<sp/>value<sp/>by<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_fixed_length_vector_1a965306c1f5d0f9ed4d23c62a70dc9a89" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_fixed_length_vector_1a965306c1f5d0f9ed4d23c62a70dc9a89" kindref="member">atomic_inc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__sync_fetch_and_add(&amp;<ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref><sp/>+<sp/>column],<sp/>1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_fixed_length_vector_1a09f83f76180beb6943677f4be9e9b335" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_fixed_length_vector_1a09f83f76180beb6943677f4be9e9b335" kindref="member">print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>buf;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Table:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_fixed_length_vector_1ac787f4d12ef63811082de03f84636e3f" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(j,<sp/>i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.str();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129" refid="class_fixed_length_vector_1af15befd69acf788fbe9c3616c6421433" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1af15befd69acf788fbe9c3616c6421433" kindref="member">allocate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(<ref refid="class_fixed_length_vector_1afe3db192d815d3fc968f7baf751448fc" kindref="member">_allocate_mtx</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>!=<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*new_values<sp/>=<sp/><ref refid="class_malloc_strategy_1a797e8a5871256ce249165e2c72b24318" kindref="member">Strategy::reallocate</ref>(<ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>,<sp/>bytes,<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&gt;<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>new_values)<sp/>+<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>,<sp/>0,<sp/>bytes<sp/>-<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_values<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_malloc_strategy_1ad6e105af6a69d5770c8dc01abee6a0a6" kindref="member">Strategy::deallocate</ref>(<ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref>,<sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::bad_alloc();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a327f9319104ae12d1019ef8d975ad649" kindref="member">_values</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(new_values);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ac731df37deffe912fce046b5b12e7587" kindref="member">_allocated_bytes</ref><sp/>=<sp/>bytes;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ae7083d1dfed791d681def603029c4c71" kindref="member">checkAccess</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>rows)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPENSIVE_ASSERTIONS</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&gt;=<sp/><ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>column<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(column)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>where<sp/>only<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(<ref refid="class_fixed_length_vector_1a01107f13d32b328b8090f67c77bf205a" kindref="member">_columns</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&gt;=<sp/><ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>rows<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(rows)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>where<sp/>only<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(<ref refid="class_fixed_length_vector_1a48ad3665f572104e29d1cefa897738a5" kindref="member">_rows</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/storage/FixedLengthVector.h"/>
  </compounddef>
</doxygen>
