<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_w_s_core_bound_queues_scheduler_8cpp" kind="file">
    <compoundname>WSCoreBoundQueuesScheduler.cpp</compoundname>
    <includes refid="_w_s_core_bound_queues_scheduler_8h" local="yes">WSCoreBoundQueuesScheduler.h</includes>
    <includes refid="_w_s_core_bound_queue_8h" local="yes">WSCoreBoundQueue.h</includes>
    <includes refid="_shared_scheduler_8h" local="yes">SharedScheduler.h</includes>
    <incdepgraph>
      <node id="19280">
        <label>atomic</label>
      </node>
      <node id="19279">
        <label>AbstractCoreBoundQueue.h</label>
        <link refid="_abstract_core_bound_queue_8h"/>
        <childnode refid="19271" relation="include">
        </childnode>
        <childnode refid="19280" relation="include">
        </childnode>
      </node>
      <node id="19273">
        <label>queue</label>
      </node>
      <node id="19263">
        <label>AbstractCoreBoundQueuesScheduler.h</label>
        <link refid="_abstract_core_bound_queues_scheduler_8h"/>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
        <childnode refid="19280" relation="include">
        </childnode>
      </node>
      <node id="19283">
        <label>SharedScheduler.h</label>
        <link refid="_shared_scheduler_8h"/>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19284" relation="include">
        </childnode>
      </node>
      <node id="19277">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="19278" relation="include">
        </childnode>
        <childnode refid="19266" relation="include">
        </childnode>
      </node>
      <node id="19262">
        <label>WSCoreBoundQueuesScheduler.h</label>
        <link refid="_w_s_core_bound_queues_scheduler_8h"/>
        <childnode refid="19263" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
      </node>
      <node id="19265">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="19266" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19270" relation="include">
        </childnode>
      </node>
      <node id="19284">
        <label>stdexcept</label>
      </node>
      <node id="19270">
        <label>string</label>
      </node>
      <node id="19275">
        <label>unordered_set</label>
      </node>
      <node id="19278">
        <label>hwloc.h</label>
      </node>
      <node id="19269">
        <label>condition_variable</label>
      </node>
      <node id="19266">
        <label>vector</label>
      </node>
      <node id="19271">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19272" relation="include">
        </childnode>
        <childnode refid="19273" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
        <childnode refid="19265" relation="include">
        </childnode>
      </node>
      <node id="19261">
        <label>src/lib/taskscheduler/WSCoreBoundQueuesScheduler.cpp</label>
        <link refid="WSCoreBoundQueuesScheduler.cpp"/>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19281" relation="include">
        </childnode>
        <childnode refid="19283" relation="include">
        </childnode>
      </node>
      <node id="19264">
        <label>AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="19265" relation="include">
        </childnode>
        <childnode refid="19271" relation="include">
        </childnode>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19275" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
        <childnode refid="19277" relation="include">
        </childnode>
      </node>
      <node id="19276">
        <label>iostream</label>
      </node>
      <node id="19282">
        <label>deque</label>
      </node>
      <node id="19267">
        <label>mutex</label>
      </node>
      <node id="19272">
        <label>thread</label>
      </node>
      <node id="19281">
        <label>WSCoreBoundQueue.h</label>
        <link refid="_w_s_core_bound_queue_8h"/>
        <childnode refid="19282" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19279" relation="include">
        </childnode>
      </node>
      <node id="19274">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="19268">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>WSCoreBoundQueuesScheduler.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Apr<sp/>4,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jwust</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_w_s_core_bound_queues_scheduler_8h" kindref="compound">WSCoreBoundQueuesScheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_w_s_core_bound_queue_8h" kindref="compound">WSCoreBoundQueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shared_scheduler_8h" kindref="compound">SharedScheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>register<sp/>Scheduler<sp/>at<sp/>SharedScheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1ab840b3dd4740074d5269e1cacd5791cd" kindref="member">registered</ref><sp/><sp/>=</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>SharedScheduler::registerScheduler&lt;WSCoreBoundQueuesScheduler&gt;(</highlight><highlight class="stringliteral">&quot;WSCoreBoundQueuesScheduler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_w_s_core_bound_queues_scheduler_1ace77f6d186bd53d2cf090fabdf2a6a46" refkind="member"><highlight class="normal"><ref refid="class_w_s_core_bound_queues_scheduler_1ace77f6d186bd53d2cf090fabdf2a6a46" kindref="member">WSCoreBoundQueuesScheduler::WSCoreBoundQueuesScheduler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queues)<sp/>:<sp/><ref refid="class_abstract_core_bound_queues_scheduler" kindref="compound">AbstractCoreBoundQueuesScheduler</ref>(){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>=<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575ceab354aeccc361021b0cd6f83128272195" kindref="member">START_UP</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>_queues<sp/>to<sp/>queues<sp/>after<sp/>new<sp/>queues<sp/>have<sp/>been<sp/>created<sp/>to<sp/>new<sp/>tasks<sp/>to<sp/>be<sp/>assigned<sp/>to<sp/>new<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>_queue<sp/>mutex<sp/>as<sp/>queues<sp/>are<sp/>manipulated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="class_abstract_core_bound_queues_scheduler_1a133386a2bd7b25c4a5e94c8880f0a480" kindref="member">_queuesMutex</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queues<sp/>&lt;=<sp/><ref refid="_hwloc_helper_8cpp_1a5852d7c54d41ff6c71f33e4b89a5f059" kindref="member">getNumberOfCoresOnSystem</ref>())<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>queues;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>.push_back(<ref refid="class_w_s_core_bound_queues_scheduler_1a3bf0335dac5c5d492d62c18d6b73b97d" kindref="member">createTaskQueue</ref>(i));</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref><sp/>=<sp/>queues;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG4CXX_WARN(<ref refid="class_abstract_core_bound_queues_scheduler_1ae1f42638dea16e2bdcc71d41266fb66f" kindref="member">_logger</ref>,<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>queues<sp/>exceeds<sp/>available<sp/>cores;<sp/>set<sp/>it<sp/>to<sp/>max<sp/>available<sp/>cores,<sp/>which<sp/>equals<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(<ref refid="_hwloc_helper_8cpp_1a5852d7c54d41ff6c71f33e4b89a5f059" kindref="member">getNumberOfCoresOnSystem</ref>()));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_hwloc_helper_8cpp_1a5852d7c54d41ff6c71f33e4b89a5f059" kindref="member">getNumberOfCoresOnSystem</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>.push_back(<ref refid="class_w_s_core_bound_queues_scheduler_1a3bf0335dac5c5d492d62c18d6b73b97d" kindref="member">createTaskQueue</ref>(i));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref><sp/>=<sp/><ref refid="_hwloc_helper_8cpp_1a5852d7c54d41ff6c71f33e4b89a5f059" kindref="member">getNumberOfCoresOnSystem</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>=<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575ceaea3b5199c163f0f07b405316ab54a8f1" kindref="member">RUN</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_w_s_core_bound_queues_scheduler_1a5afa3f66f068536bae9a612392fd719b" refkind="member"><highlight class="normal"><ref refid="class_w_s_core_bound_queues_scheduler_1a5afa3f66f068536bae9a612392fd719b" kindref="member">WSCoreBoundQueuesScheduler::~WSCoreBoundQueuesScheduler</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>=<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cea4f8b67680c71fec19412d8ab89ac503a" kindref="member">AbstractCoreBoundQueuesScheduler::TO_STOP</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queue" kindref="compound">task_queue_t</ref><sp/>*queue;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>queue<sp/>=<sp/><sp/><sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>[i];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="class_abstract_core_bound_queue_1a54462c0fff124727a4cabf46bc9bb11f" kindref="member">stopQueue</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>queue;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_w_s_core_bound_queues_scheduler_1ac14bc5a7d46e8aaf387092ca85179f65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractCoreBoundQueue<sp/>*&gt;<sp/>*<ref refid="class_w_s_core_bound_queues_scheduler_1ac14bc5a7d46e8aaf387092ca85179f65" kindref="member">WSCoreBoundQueuesScheduler::getTaskQueues</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>task<sp/>scheduler<sp/>is<sp/>about<sp/>to<sp/>change<sp/>structure<sp/>of<sp/>scheduler<sp/>(change<sp/>number<sp/>of<sp/>queues);<sp/>if<sp/>yes,<sp/>return<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>==<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cead388263b6602dd95e1103f91c31d1ca0" kindref="member">AbstractCoreBoundQueuesScheduler::RESIZING</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>==<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cea4f8b67680c71fec19412d8ab89ac503a" kindref="member">AbstractCoreBoundQueuesScheduler::TO_STOP</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a88f05262e420842518b0ae5517d1dac8" kindref="member">_status</ref><sp/>==<sp/><ref refid="class_abstract_task_scheduler_1a3c169cdc3c29ab03d0c5c41a707575cea5f5af486bf8b0c99d4906d1bf159ff43" kindref="member">AbstractCoreBoundQueuesScheduler::STOPPED</ref>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>const<sp/>reference<sp/>to<sp/>task<sp/>queues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a133386a2bd7b25c4a5e94c8880f0a480" kindref="member">_queuesMutex</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_w_s_core_bound_queues_scheduler_1a644e318c423061251273d7f379a13990" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_s_core_bound_queues_scheduler_1a644e318c423061251273d7f379a13990" kindref="member">WSCoreBoundQueuesScheduler::pushToQueue</ref>(std::shared_ptr&lt;Task&gt;<sp/>task)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core<sp/>=<sp/>task-&gt;getPreferredCore();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(core<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>core<sp/>&lt;<sp/>static_cast&lt;int&gt;(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>task<sp/>to<sp/>queue<sp/>that<sp/>runs<sp/>on<sp/>given<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>[core]-&gt;push(task);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG4CXX_DEBUG(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ae1f42638dea16e2bdcc71d41266fb66f" kindref="member">_logger</ref>,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Task<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)task.get()<sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pushed<sp/>to<sp/>queue<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>core);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(core<sp/>==<sp/><ref refid="class_task_1af0efeb0207f95415ca556e19bc62d60e" kindref="member">Task::NO_PREFERRED_CORE</ref><sp/>||<sp/>core<sp/>&gt;=<sp/>static_cast&lt;int&gt;(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(core<sp/>&lt;<sp/>Task::NO_PREFERRED_CORE<sp/>||<sp/>core<sp/>&gt;=<sp/>static_cast&lt;int&gt;(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tried<sp/>to<sp/>assign<sp/>task<sp/>to<sp/>core<sp/>which<sp/>is<sp/>not<sp/>assigned<sp/>to<sp/>scheduler;<sp/>assigned<sp/>to<sp/>other<sp/>core,<sp/>log<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG4CXX_WARN(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ae1f42638dea16e2bdcc71d41266fb66f" kindref="member">_logger</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>assign<sp/>task<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)task.get()<sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>core<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1aa2f6c380fda0f127ac99017940bef1e9" kindref="member">std::to_string</ref>(core)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>which<sp/>is<sp/>not<sp/>assigned<sp/>to<sp/>scheduler;<sp/>assigned<sp/>it<sp/>to<sp/>next<sp/>available<sp/>core&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>push<sp/>task<sp/>to<sp/>next<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk2(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a133386a2bd7b25c4a5e94c8880f0a480" kindref="member">_queuesMutex</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a451eed981d9b37e521f1f347a4972d53" kindref="member">_taskQueues</ref>[this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a2f49e819a2ef747e55153dca49d2277d" kindref="member">_nextQueue</ref>]-&gt;push(task);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Task<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>task-&gt;vname()<sp/>&lt;&lt;<sp/>&quot;;<sp/>hex<sp/>&quot;<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>&amp;task<sp/>&lt;&lt;<sp/>std::dec<sp/>&lt;&lt;<sp/>&quot;<sp/>pushed<sp/>to<sp/>queue<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;_nextQueue<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//round<sp/>robin<sp/>on<sp/>cores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a2f49e819a2ef747e55153dca49d2277d" kindref="member">_nextQueue</ref><sp/>=<sp/>(this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1a2f49e819a2ef747e55153dca49d2277d" kindref="member">_nextQueue</ref><sp/>+<sp/>1)<sp/>%<sp/>this-&gt;<ref refid="class_abstract_core_bound_queues_scheduler_1ac3aa34b724c695b203456774cd0eac75" kindref="member">_queues</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_w_s_core_bound_queues_scheduler_1a3bf0335dac5c5d492d62c18d6b73b97d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_core_bound_queue" kindref="compound">WSCoreBoundQueuesScheduler::task_queue_t</ref><sp/>*<ref refid="class_w_s_core_bound_queues_scheduler_1a3bf0335dac5c5d492d62c18d6b73b97d" kindref="member">WSCoreBoundQueuesScheduler::createTaskQueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_s_core_bound_queue" kindref="compound">WSCoreBoundQueue</ref>(core,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/taskscheduler/WSCoreBoundQueuesScheduler.cpp"/>
  </compounddef>
</doxygen>
