<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_query_transformation_engine_8h" kind="file">
    <compoundname>QueryTransformationEngine.h</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">json.h</includes>
    <includes local="no">memory</includes>
    <includes refid="_abstract_plan_op_transformation_8h" local="yes">access/system/AbstractPlanOpTransformation.h</includes>
    <includedby refid="_radix_join_transformation_8cpp" local="yes">src/lib/access/radixjoin/RadixJoinTransformation.cpp</includedby>
    <includedby refid="_query_transformation_engine_8cpp" local="yes">src/lib/access/system/QueryTransformationEngine.cpp</includedby>
    <includedby refid="_request_parse_task_8cpp" local="yes">src/lib/access/system/RequestParseTask.cpp</includedby>
    <includedby refid="access_8h" local="no">src/lib/access.h</includedby>
    <incdepgraph>
      <node id="9288">
        <label>atomic</label>
      </node>
      <node id="9280">
        <label>limits</label>
      </node>
      <node id="9265">
        <label>access/system/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9269" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9273" relation="include">
        </childnode>
        <childnode refid="9274" relation="include">
        </childnode>
      </node>
      <node id="9291">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="9296">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="9279">
        <label>cstdint</label>
      </node>
      <node id="9285">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="9280" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9286" relation="include">
        </childnode>
        <childnode refid="9289" relation="include">
        </childnode>
        <childnode refid="9291" relation="include">
        </childnode>
        <childnode refid="9292" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
      </node>
      <node id="9266">
        <label>stdint.h</label>
      </node>
      <node id="9278">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9279" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9280" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
      </node>
      <node id="9289">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="9279" relation="include">
        </childnode>
        <childnode refid="9290" relation="include">
        </childnode>
      </node>
      <node id="9274">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9275" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9276" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
      </node>
      <node id="9271">
        <label>stdexcept</label>
      </node>
      <node id="9259">
        <label>string</label>
      </node>
      <node id="9268">
        <label>map</label>
      </node>
      <node id="9273">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="9266" relation="include">
        </childnode>
      </node>
      <node id="9272">
        <label>ostream</label>
      </node>
      <node id="9261">
        <label>json.h</label>
      </node>
      <node id="9282">
        <label>access/system/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
      </node>
      <node id="9295">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="9276">
        <label>condition_variable</label>
      </node>
      <node id="9260">
        <label>vector</label>
      </node>
      <node id="9269">
        <label>utility</label>
      </node>
      <node id="9290">
        <label>array</label>
      </node>
      <node id="9257">
        <label>sstream</label>
      </node>
      <node id="9283">
        <label>io/TXContext.h</label>
        <link refid="_t_x_context_8h"/>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9284" relation="include">
        </childnode>
      </node>
      <node id="9281">
        <label>access/system/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9275" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9282" relation="include">
        </childnode>
      </node>
      <node id="9284">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9267">
        <label>time.h</label>
      </node>
      <node id="9286">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="9287" relation="include">
        </childnode>
        <childnode refid="9288" relation="include">
        </childnode>
      </node>
      <node id="9258">
        <label>iostream</label>
      </node>
      <node id="9270">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9272" relation="include">
        </childnode>
      </node>
      <node id="9277">
        <label>access/system/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
      </node>
      <node id="9275">
        <label>mutex</label>
      </node>
      <node id="9293">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
      </node>
      <node id="9287">
        <label>thread</label>
      </node>
      <node id="9294">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="9295" relation="include">
        </childnode>
        <childnode refid="9296" relation="include">
        </childnode>
      </node>
      <node id="9264">
        <label>access/system/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9277" relation="include">
        </childnode>
        <childnode refid="9281" relation="include">
        </childnode>
        <childnode refid="9283" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9285" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
      </node>
      <node id="9263">
        <label>access/system/AbstractPlanOpTransformation.h</label>
        <link refid="_abstract_plan_op_transformation_8h"/>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9264" relation="include">
        </childnode>
      </node>
      <node id="9262">
        <label>memory</label>
      </node>
      <node id="9256">
        <label>src/lib/access/system/QueryTransformationEngine.h</label>
        <link refid="QueryTransformationEngine.h"/>
        <childnode refid="9257" relation="include">
        </childnode>
        <childnode refid="9258" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9263" relation="include">
        </childnode>
      </node>
      <node id="9292">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9293" relation="include">
        </childnode>
        <childnode refid="9294" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9307">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="9302">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="9301">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9303" relation="include">
        </childnode>
        <childnode refid="9304" relation="include">
        </childnode>
        <childnode refid="9305" relation="include">
        </childnode>
        <childnode refid="9306" relation="include">
        </childnode>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9308" relation="include">
        </childnode>
        <childnode refid="9309" relation="include">
        </childnode>
      </node>
      <node id="9300">
        <label>src/lib/access/system/RequestParseTask.cpp</label>
        <link refid="_request_parse_task_8cpp"/>
      </node>
      <node id="9305">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="9308">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="9306">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="9303">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="9298">
        <label>src/lib/access/radixjoin/RadixJoinTransformation.cpp</label>
        <link refid="_radix_join_transformation_8cpp"/>
      </node>
      <node id="9304">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="9309">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="9299">
        <label>src/lib/access/system/QueryTransformationEngine.cpp</label>
        <link refid="_query_transformation_engine_8cpp"/>
      </node>
      <node id="9297">
        <label>src/lib/access/system/QueryTransformationEngine.h</label>
        <link refid="QueryTransformationEngine.h"/>
        <childnode refid="9298" relation="include">
        </childnode>
        <childnode refid="9299" relation="include">
        </childnode>
        <childnode refid="9300" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_query_transformation_engine" prot="public">QueryTransformationEngine</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_QUERYTRANSFORMATIONENGINE_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_QUERYTRANSFORMATIONENGINE_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;json.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_plan_op_transformation_8h" kindref="compound">access/system/AbstractPlanOpTransformation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_operator_replacement_Test;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_apply_operator_parallelization_Test;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_append_instances_nodes_Test;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_append_union_node_Test;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_append_merge_node_Test;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">JSONTests_remove_operator_nodes_Test;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_query_transformation_engine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine" kindref="compound">QueryTransformationEngine</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="class_query_transformation_engine_1a0495ccba61f13d86fb37f9d14844115d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1a0495ccba61f13d86fb37f9d14844115d" kindref="member">hyrise::access::JSONTests_operator_replacement_Test</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_query_transformation_engine_1a018ddfb15914c4b1631f810e6dd68f19" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1a018ddfb15914c4b1631f810e6dd68f19" kindref="member">hyrise::access::JSONTests_apply_operator_parallelization_Test</ref>;</highlight></codeline>
<codeline lineno="27" refid="class_query_transformation_engine_1abe471e366f30423da28aff135aac6704" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1abe471e366f30423da28aff135aac6704" kindref="member">hyrise::access::JSONTests_append_instances_nodes_Test</ref>;</highlight></codeline>
<codeline lineno="28" refid="class_query_transformation_engine_1a6ab747778bfd66f50a65e42e4a0c45bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1a6ab747778bfd66f50a65e42e4a0c45bf" kindref="member">hyrise::access::JSONTests_append_union_node_Test</ref>;</highlight></codeline>
<codeline lineno="29" refid="class_query_transformation_engine_1aa640e507ee8f8f8178667c329a50aade" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1aa640e507ee8f8f8178667c329a50aade" kindref="member">hyrise::access::JSONTests_append_merge_node_Test</ref>;</highlight></codeline>
<codeline lineno="30" refid="class_query_transformation_engine_1a4320bc2c488c0c7a80faa9a5c5076fbe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_transformation_engine_1a4320bc2c488c0c7a80faa9a5c5076fbe" kindref="member">hyrise::access::JSONTests_remove_operator_nodes_Test</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>List<sp/>of<sp/>affixes<sp/>for<sp/>IDs<sp/>of<sp/>new<sp/>or<sp/>transformed<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_query_transformation_engine_1a06f93b68c2cf85251845678bba654fb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1a06f93b68c2cf85251845678bba654fb3" kindref="member">parallelInstanceInfix</ref>;</highlight></codeline>
<codeline lineno="34" refid="class_query_transformation_engine_1a997a988e95e26d8430ca529cb8f5b5c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1a997a988e95e26d8430ca529cb8f5b5c7" kindref="member">unionSuffix</ref>;</highlight></codeline>
<codeline lineno="35" refid="class_query_transformation_engine_1ac18716b59ae770aaa55668f099c3522f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1ac18716b59ae770aaa55668f099c3522f" kindref="member">mergeSuffix</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_query_transformation_engine_1a84f51250390a7e2d56f1a22ef38cd8b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>std::string,<sp/>hyrise::access::AbstractPlanOpTransformation<sp/>*<sp/>&gt;<sp/><ref refid="class_query_transformation_engine_1a84f51250390a7e2d56f1a22ef38cd8b6" kindref="member">factory_map_t</ref>;</highlight></codeline>
<codeline lineno="39" refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a84f51250390a7e2d56f1a22ef38cd8b6" kindref="member">factory_map_t</ref><sp/><ref refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" kindref="member">_factory</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_query_transformation_engine_1aad03791eceff8af592eab27a597f8ae0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1aad03791eceff8af592eab27a597f8ae0" kindref="member">QueryTransformationEngine</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Parallelizes<sp/>query&apos;s<sp/>operators,<sp/>if<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a03e1ab21f737505ac6e826935877daaa" kindref="member">parallelizeOperators</ref>(Json::Value<sp/>&amp;query)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Checks<sp/>if<sp/>given<sp/>operator<sp/>of<sp/>given<sp/>configuration<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>executed</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>parallel.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1ae5db298b55fd43698030c957d8ce8406" kindref="member">requestsParallelization</ref>(Json::Value<sp/>&amp;operatorConfiguration)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>The<sp/>operator<sp/>will<sp/>be<sp/>replaced<sp/>by<sp/>its<sp/>parallel<sp/>instances<sp/>in<sp/>the<sp/>json<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a4d40bab395e39758f5ff4348bd90cf1f" kindref="member">applyParallelizationTo</ref>(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Builds<sp/>an<sp/>operators<sp/>parallel<sp/>instances<sp/>to<sp/>arrange<sp/>them<sp/>in<sp/>the<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>*<ref refid="class_query_transformation_engine_1a76b3b66c05eeb29124e80761f8596fb2" kindref="member">buildInstances</ref>(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;unionOperatorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Constructs<sp/>the<sp/>next<sp/>instance&apos;s<sp/>configuration<sp/>for<sp/>parallel<sp/>execution<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>operator<sp/>configuration<sp/>based<sp/>on<sp/>the<sp/>number<sp/>of<sp/>total<sp/>instances.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="class_query_transformation_engine_1abce6ffb7888eb104192130564de24a27" kindref="member">nextInstanceOf</ref>(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>instanceId,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInstances,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfCores)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Constructs<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>union<sp/>operator<sp/>merging<sp/>the<sp/>parallel</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>instances&apos;<sp/>results.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" kindref="member">unionOperator</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Constructs<sp/>the<sp/>configuration<sp/>of<sp/>the<sp/>merge<sp/>operator<sp/>merging<sp/>the<sp/>parallel</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>instances&apos;<sp/>results.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" kindref="member">mergeOperator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Modifies<sp/>the<sp/>query<sp/>plan&apos;s<sp/>edges.<sp/>The<sp/>operator<sp/>to-be-parallelized<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>replaced<sp/>by<sp/>its<sp/>parallel<sp/>instances.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1acebb9b7966c8913305f1d6c3e5b7c530" kindref="member">replaceOperatorWithInstances</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;unionOperatorId,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>For<sp/>all<sp/>edges<sp/>where<sp/>the<sp/>original<sp/>operator<sp/>is<sp/>the<sp/>destination<sp/>node,</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>append<sp/>a<sp/>similar<sp/>edge<sp/>for<sp/>each<sp/>parallel<sp/>instance.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a79a67faa858974209c84c8186c582957" kindref="member">appendInstancesDstNodeEdges</ref>(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>For<sp/>all<sp/>edges<sp/>where<sp/>the<sp/>original<sp/>operator<sp/>is<sp/>the<sp/>source<sp/>node,</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>append<sp/>a<sp/>similar<sp/>edge<sp/>with<sp/>the<sp/>parallelization&apos;s<sp/>final<sp/>union</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>operator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a8dfbe02d285576cda8904a5f62e00b45" kindref="member">appendConsolidateSrcNodeEdges</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;unionOperatorId,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Because<sp/>there<sp/>is<sp/>no<sp/>remove<sp/>method<sp/>on<sp/>a<sp/>Json<sp/>array...</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Removes<sp/>edges<sp/>containing<sp/>the<sp/>original<sp/>operator.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a5fd5db64ce9660c452cbaf49723ccf17" kindref="member">removeOperatorNodes</ref>(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value<sp/>&amp;operatorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Constructs<sp/>the<sp/>edge<sp/>to<sp/>append<sp/>to<sp/>query&apos;s<sp/>edges<sp/>from<sp/>given<sp/>src/dst<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" kindref="member">appendEdge</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;srcId,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;dstId,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Construct<sp/>IDs<sp/>for<sp/>several<sp/>kind<sp/>of<sp/>newly<sp/>inserted<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1a791e37b2cb373e525dcefda555272781" kindref="member">instanceIdFor</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>operatorId,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>instanceId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1a5113a4f3bf7eb359b863bd405fd23ba2" kindref="member">unionIdFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_query_transformation_engine_1a9e700aec56967a01882c64fa0432089b" kindref="member">mergeIdFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128" refid="class_query_transformation_engine_1a9ca846be0ad36bc24524ecd6fef9bb7b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a9ca846be0ad36bc24524ecd6fef9bb7b" kindref="member">~QueryTransformationEngine</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131" refid="class_query_transformation_engine_1aedb873321addbff07bd27581fa663e7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1aedb873321addbff07bd27581fa663e7c" kindref="member">registerTransformation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1a104a9e682591cf75fdbb2504a6e91ec4" kindref="member">QueryTransformationEngine::getInstance</ref>()-&gt;<ref refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" kindref="member">_factory</ref>[T::name()]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="137" refid="class_query_transformation_engine_1a97e6160b73114e2121af097c4bd379c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a97e6160b73114e2121af097c4bd379c3" kindref="member">registerPlanOperation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1a104a9e682591cf75fdbb2504a6e91ec4" kindref="member">QueryTransformationEngine::getInstance</ref>()-&gt;<ref refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" kindref="member">_factory</ref>[name]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Main<sp/>method.<sp/>Transforms<sp/>a<sp/>query<sp/>based<sp/>on<sp/>its<sp/>operators&apos;<sp/>configurations.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>resulting<sp/>query<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>directly<sp/>parsable/executable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>Json::Value<sp/>&amp;<ref refid="class_query_transformation_engine_1a408b272bba88580a0d4235626add1a99" kindref="member">transform</ref>(Json::Value<sp/>&amp;query);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_query_transformation_engine_1a104a9e682591cf75fdbb2504a6e91ec4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine" kindref="compound">QueryTransformationEngine</ref><sp/>*<ref refid="class_query_transformation_engine_1a104a9e682591cf75fdbb2504a6e91ec4" kindref="member">getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine" kindref="compound">QueryTransformationEngine</ref><sp/>*p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1aad03791eceff8af592eab27a597f8ae0" kindref="member">QueryTransformationEngine</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_QUERYTRANSFORMATIONENGINE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/access/system/QueryTransformationEngine.h"/>
  </compounddef>
</doxygen>
