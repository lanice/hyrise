<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="layouter_2base_8h" kind="file">
    <compoundname>base.h</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="matrix_8h" local="yes">matrix.h</includes>
    <includes refid="layout__utils_8h" local="yes">layout_utils.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">list</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="base_8cpp" local="yes">src/lib/layouter/base.cpp</includedby>
    <includedby refid="incremental_8cpp" local="yes">src/lib/layouter/incremental.cpp</includedby>
    <includedby refid="incremental_8h" local="yes">src/lib/layouter/incremental.h</includedby>
    <incdepgraph>
      <node id="10308">
        <label>list</label>
      </node>
      <node id="10301">
        <label>assert.h</label>
      </node>
      <node id="10302">
        <label>stdlib.h</label>
      </node>
      <node id="10299">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="10309">
        <label>string</label>
      </node>
      <node id="10298">
        <label>src/lib/layouter/base.h</label>
        <link refid="layouter/base.h"/>
        <childnode refid="10299" relation="include">
        </childnode>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10306" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10308" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
      </node>
      <node id="10305">
        <label>vector</label>
      </node>
      <node id="10304">
        <label>sstream</label>
      </node>
      <node id="10303">
        <label>iostream</label>
      </node>
      <node id="10311">
        <label>unordered_map</label>
      </node>
      <node id="10300">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
      </node>
      <node id="10307">
        <label>set</label>
      </node>
      <node id="10306">
        <label>layout_utils.h</label>
        <link refid="layout__utils_8h"/>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
      </node>
      <node id="10310">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10324">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="10319">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="10318">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10320" relation="include">
        </childnode>
        <childnode refid="10321" relation="include">
        </childnode>
        <childnode refid="10322" relation="include">
        </childnode>
        <childnode refid="10323" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10322">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="10325">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="10312">
        <label>src/lib/layouter/base.h</label>
        <link refid="layouter/base.h"/>
        <childnode refid="10313" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
        <childnode refid="10315" relation="include">
        </childnode>
      </node>
      <node id="10323">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="10317">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="10320">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="10316">
        <label>src/lib/access/Layouter.h</label>
        <link refid="_layouter_8h"/>
        <childnode refid="10317" relation="include">
        </childnode>
        <childnode refid="10318" relation="include">
        </childnode>
      </node>
      <node id="10313">
        <label>src/lib/layouter/base.cpp</label>
        <link refid="base_8cpp"/>
      </node>
      <node id="10315">
        <label>src/lib/layouter/incremental.h</label>
        <link refid="incremental_8h"/>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
      </node>
      <node id="10314">
        <label>src/lib/layouter/incremental.cpp</label>
        <link refid="incremental_8cpp"/>
      </node>
      <node id="10321">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="10326">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlayouter_1_1_schema" prot="public">layouter::Schema</innerclass>
    <innerclass refid="classlayouter_1_1_query" prot="public">layouter::Query</innerclass>
    <innerclass refid="classlayouter_1_1_layout" prot="public">layouter::Layout</innerclass>
    <innerclass refid="classlayouter_1_1_result" prot="public">layouter::Result</innerclass>
    <innerclass refid="classlayouter_1_1_base_layouter" prot="public">layouter::BaseLayouter</innerclass>
    <innerclass refid="classlayouter_1_1_candidate_layouter" prot="public">layouter::CandidateLayouter</innerclass>
    <innerclass refid="classlayouter_1_1_fast_candidate_layouter" prot="public">layouter::FastCandidateLayouter</innerclass>
    <innerclass refid="classlayouter_1_1_divide_and_conquer_layouter" prot="public">layouter::DivideAndConquerLayouter</innerclass>
    <innernamespace refid="namespacelayouter">layouter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_LAYOUTER_BASE_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_LAYOUTER_BASE_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8h" kindref="compound">matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layout__utils_8h" kindref="compound">layout_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacelayouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">layouter<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_query" kindref="compound">Query</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>A<sp/>Schema<sp/>is<sp/>a<sp/>definition<sp/>of<sp/>attributes<sp/>and<sp/>queries,<sp/>for<sp/>readability</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>the<sp/>schema<sp/>carries<sp/>the<sp/>attribute<sp/>names</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classlayouter_1_1_schema" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="classlayouter_1_1_schema_1a480175a2e9d71585de8c006f00a913ce" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlayouter_1_1_schema_1a480175a2e9d71585de8c006f00a913ce" kindref="member">attnames</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classlayouter_1_1_schema_1a2aea30a3e87f6045a38fcfcc8720952a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Query<sp/>*&gt;<sp/><ref refid="classlayouter_1_1_schema_1a2aea30a3e87f6045a38fcfcc8720952a" kindref="member">queries</ref>;</highlight></codeline>
<codeline lineno="33" refid="classlayouter_1_1_schema_1a42edf8cfb82aecc5827980be5d5a5205" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1a42edf8cfb82aecc5827980be5d5a5205" kindref="member">nbAttributes</ref>;</highlight></codeline>
<codeline lineno="34" refid="classlayouter_1_1_schema_1aa8ed5bd128984e76303d6230f1c9b5b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1aa8ed5bd128984e76303d6230f1c9b5b6" kindref="member">nbTuples</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classlayouter_1_1_schema_1a22777663c2ab937a63349ecbbdf46260" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_schema_1a22777663c2ab937a63349ecbbdf46260" kindref="member">attributes</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlayouter_1_1_schema_1a9d95e96cb60f0b08de67421e34a7d09d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema_1a9d95e96cb60f0b08de67421e34a7d09d" kindref="member">Schema</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema_1a9d95e96cb60f0b08de67421e34a7d09d" kindref="member">Schema</ref>(std::vector&lt;unsigned&gt;<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbA,<sp/>std::vector&lt;std::string&gt;<sp/>an);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1af0354e88215259aa28303d91e7b0589c" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query" kindref="compound">Query</ref><sp/>*q);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1a4a313ee32d41840051f9f6990d29322d" kindref="member">removeLastQuery</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classlayouter_1_1_schema_1a3e70daefd9a90b4d7acead64da2a07d5" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlayouter_1_1_schema_1a3e70daefd9a90b4d7acead64da2a07d5" kindref="member">getAttributeNames</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1a480175a2e9d71585de8c006f00a913ce" kindref="member">attnames</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1a8335127a929e2d8b829e09948a93fed7" kindref="member">costForSubset</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>t,<sp/>std::string<sp/>costModel)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/><ref refid="classlayouter_1_1_schema_1a0a38653ba81f5236afc104be027a2d84" kindref="member">baseCopy</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classlayouter_1_1_schema_1a27e747af18fe3ce12cc01dbd9b63db41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_schema_1a27e747af18fe3ce12cc01dbd9b63db41" kindref="member">print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;Schema:<sp/>attrs:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlayouter_1_1_schema_1a42edf8cfb82aecc5827980be5d5a5205" kindref="member">nbAttributes</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>queries:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlayouter_1_1_schema_1a2aea30a3e87f6045a38fcfcc8720952a" kindref="member">queries</ref>.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>The<sp/>Query<sp/>actually<sp/>defines<sp/>an<sp/>operator<sp/>access<sp/>on<sp/>a<sp/>given<sp/>schema</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classlayouter_1_1_query" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_query" kindref="compound">Query</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maps<sp/>to<sp/>the<sp/>different<sp/>query<sp/>types,<sp/>full<sp/>projection,<sp/>out<sp/>of<sp/>order,<sp/>etc..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classlayouter_1_1_query_1af3fb0c0303409f690638e91124ef23ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlayouter_1_1_layouter_configuration_1ad72467c5f13875107a7397ce19ec1bfe" kindref="member">LayouterConfiguration::access_type_t</ref><sp/><ref refid="classlayouter_1_1_query_1af3fb0c0303409f690638e91124ef23ae" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attribute<sp/>of<sp/>the<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classlayouter_1_1_query_1a65bede58b78d50e778068c0b195b882b" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_query_1a65bede58b78d50e778068c0b195b882b" kindref="member">queryAttributes</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Selectivity<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classlayouter_1_1_query_1ab64816e62ed87fe91a3d80f98d081530" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1ab64816e62ed87fe91a3d80f98d081530" kindref="member">parameter</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Weight<sp/>of<sp/>the<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classlayouter_1_1_query_1a75760ace5a0e3fb875e88c9fc0dae107" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a75760ace5a0e3fb875e88c9fc0dae107" kindref="member">weight</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constant<sp/>std::string<sp/>value<sp/>for<sp/>the<sp/>cost<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classlayouter_1_1_query_1ae700a3b03cf2810885defd2c78cc75b2" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlayouter_1_1_query_1ae700a3b03cf2810885defd2c78cc75b2" kindref="member">_costModel</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>to<sp/>the<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classlayouter_1_1_query_1a16c0e7dbed0b855753f915e830220a81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/><ref refid="classlayouter_1_1_query_1a16c0e7dbed0b855753f915e830220a81" kindref="member">_schema</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>log<sp/>access<sp/>to<sp/>the<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classlayouter_1_1_query_1a8342b13f2b04c033f3a4216be524bd59" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_query_1a8342b13f2b04c033f3a4216be524bd59" kindref="member">_attributeRefSet</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classlayouter_1_1_query_1a83332d4a1fd8518b5916e782932a1ff7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_query_1a83332d4a1fd8518b5916e782932a1ff7" kindref="member">_container</ref>;</highlight></codeline>
<codeline lineno="91" refid="classlayouter_1_1_query_1a8a36c96ebc908bb4de5cf4074b32a43c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_query_1a8a36c96ebc908bb4de5cf4074b32a43c" kindref="member">_attUnion</ref>;</highlight></codeline>
<codeline lineno="92" refid="classlayouter_1_1_query_1a10467f00da907d39da7c9210f5992c8a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="classlayouter_1_1_query_1a10467f00da907d39da7c9210f5992c8a" kindref="member">_attsOffset</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classlayouter_1_1_query_1a423e048c521d9379857b33ca67fe5665" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a423e048c521d9379857b33ca67fe5665" kindref="member">_containerWidth</ref>;</highlight></codeline>
<codeline lineno="95" refid="classlayouter_1_1_query_1a251b3e67cc9d261e1c4749f657058380" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a251b3e67cc9d261e1c4749f657058380" kindref="member">_previousLine</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_query_1abc74eb9424436429a91121abe72cf7e3" kindref="member">Query</ref>(<ref refid="structlayouter_1_1_layouter_configuration_1ad72467c5f13875107a7397ce19ec1bfe" kindref="member">LayouterConfiguration::access_type_t</ref><sp/><ref refid="classlayouter_1_1_query_1af3fb0c0303409f690638e91124ef23ae" kindref="member">type</ref>,<sp/>std::vector&lt;unsigned&gt;<sp/>qA,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1ab64816e62ed87fe91a3d80f98d081530" kindref="member">parameter</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a75760ace5a0e3fb875e88c9fc0dae107" kindref="member">weight</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1af8ac325b62c74e4c4bc310cb00cb5985" kindref="member">getContainerWidth</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a20ea2b17fdf3ca350038580af0bddded" kindref="member">getAttUnion</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1aabd3f9690a2b7c1178ab3c8d4c3b3484" kindref="member">containerCost</ref>(std::vector&lt;unsigned&gt;<sp/>container,<sp/><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>s,<sp/>std::string<sp/>costModel);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a20d2c5b6cd69e5c1dc75b528a885cf9c" kindref="member">hyriseCost</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a7e04f02df68aa0751e1b3f29910370a8" kindref="member">hyriseProjection</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a63db713eac5f05ec1a0dae4231ae6d26" kindref="member">hyrisePartialProjection</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>po,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>pw);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1aae5f37fa198fc9fc5690c6fa953d3aa1" kindref="member">hyriseEquivalentProjection</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1a30ff88dcf7d37c365428d0c59f47ca87" kindref="member">hyriseOOO</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_query_1afb330985b1bc9fedb9abca3ad714b354" kindref="member">hyriseSingleOOO</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>po,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pw);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classlayouter_1_1_layout" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116" refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">internal_layout_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a6664f721daa75463ded6548182b191c5" kindref="member">Layout</ref>(<ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">internal_layout_t</ref><sp/>l);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout_1a6664f721daa75463ded6548182b191c5" kindref="member">Layout</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1ad4a744f4467b5f1b457fc51f47a10f78" kindref="member">add</ref>(std::vector&lt;unsigned&gt;<sp/>subset);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a8aa1a21d48a26adb0e1b90baece66434" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>&amp;l)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a4052f97bc91290f85b6696f48ee45fb6" kindref="member">removeLast</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classlayouter_1_1_layout_1a71d0c662e84b74630e78fcfd7a2f4bf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a71d0c662e84b74630e78fcfd7a2f4bf6" kindref="member">containerCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" kindref="member">_layout</ref>.size();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classlayouter_1_1_layout_1a7a9f702577704d43df12dbc6cde37ae4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a7a9f702577704d43df12dbc6cde37ae4" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8h_1ade2593c9a1f0314beb0796a5b32a8d70" kindref="member">sum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>t:<sp/><ref refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" kindref="member">_layout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>t.size();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="layout__utils_8h_1ade2593c9a1f0314beb0796a5b32a8d70" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classlayouter_1_1_layout_1a7f2f095c25094ec06069eb97122d7a03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a7f2f095c25094ec06069eb97122d7a03" kindref="member">canAdd</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>&amp;subset)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tmp:<sp/><ref refid="classlayouter_1_1_layout_1a2b23139b02922fdf9a0aae685cd7eb7b" kindref="member">_cached_layout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>is<sp/>included<sp/>in<sp/>the<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>i:<sp/>subset)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.count(i)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(tmp.end()<sp/>!=<sp/>find_first_of(tmp.begin(),<sp/>tmp.end(),<sp/>subset.begin(),<sp/>subset.end()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classlayouter_1_1_layout_1a9aad205a2404da9c5070760aad8d32c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a9aad205a2404da9c5070760aad8d32c7" kindref="member">print</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tmp:<sp/><ref refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" kindref="member">_layout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>i:<sp/>tmp)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classlayouter_1_1_layout_1a1072a36ac9df7b58746bde578da18713" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_layout_1a1072a36ac9df7b58746bde578da18713" kindref="member">raw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" kindref="member">_layout</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_layout_1aa32ee62c1d4a1c4518f97336c5a697d1" kindref="member">_layout</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>based<sp/>layout<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classlayouter_1_1_layout_1a36ab0e8e1d62353a8d6acf32fa6e03dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::set&lt;unsigned&gt;<sp/>&gt;<sp/><ref refid="classlayouter_1_1_layout_1a36ab0e8e1d62353a8d6acf32fa6e03dd" kindref="member">_set_based_layout_t</ref>;</highlight></codeline>
<codeline lineno="174" refid="classlayouter_1_1_layout_1a2b23139b02922fdf9a0aae685cd7eb7b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout_1a36ab0e8e1d62353a8d6acf32fa6e03dd" kindref="member">_set_based_layout_t</ref><sp/><ref refid="classlayouter_1_1_layout_1a2b23139b02922fdf9a0aae685cd7eb7b" kindref="member">_cached_layout</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classlayouter_1_1_result" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>{</highlight></codeline>
<codeline lineno="180" refid="classlayouter_1_1_result_1a8b4a2a1dffb1af162f63046bf444be91" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlayouter_1_1_result_1a8b4a2a1dffb1af162f63046bf444be91" kindref="member">_names</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classlayouter_1_1_result_1ab87c970ea77a33f924db11f4b3a84ea9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/><ref refid="classlayouter_1_1_result_1ab87c970ea77a33f924db11f4b3a84ea9" kindref="member">layout</ref>;</highlight></codeline>
<codeline lineno="185" refid="classlayouter_1_1_result_1a86cc3b6d894483710b6ebeed89851bc6" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classlayouter_1_1_result_1a86cc3b6d894483710b6ebeed89851bc6" kindref="member">cost</ref>;</highlight></codeline>
<codeline lineno="186" refid="classlayouter_1_1_result_1a7371067b303ede998a30a1b5d539013c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1a7371067b303ede998a30a1b5d539013c" kindref="member">totalCost</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result_1a7ec1236bbdb2e5be11d5a3a5a762f994" kindref="member">Result</ref>(<ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>&amp;l,<sp/>std::vector&lt;double&gt;<sp/>c);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classlayouter_1_1_result_1a7ec1236bbdb2e5be11d5a3a5a762f994" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result_1a7ec1236bbdb2e5be11d5a3a5a762f994" kindref="member">Result</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1a5b0e0f86e8794e690cea8f808d7e2ca6" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>&amp;r)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1ae10bbdd07f0f95863fe105fc012c3e81" kindref="member">layoutEquals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>&amp;r)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classlayouter_1_1_result_1a1a46b08ad2c4de3a82ebda7fc990816e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1a1a46b08ad2c4de3a82ebda7fc990816e" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1a7371067b303ede998a30a1b5d539013c" kindref="member">totalCost</ref><sp/>&lt;<sp/>other.<ref refid="classlayouter_1_1_result_1a7371067b303ede998a30a1b5d539013c" kindref="member">totalCost</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1a0c1ce166c80cc4b41da8e0a7857019b3" kindref="member">print</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classlayouter_1_1_result_1af6bd1645fe2fbabb3b48f512bdfaebba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_result_1af6bd1645fe2fbabb3b48f512bdfaebba" kindref="member">setNames</ref>(std::vector&lt;std::string&gt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlayouter_1_1_result_1a8b4a2a1dffb1af162f63046bf444be91" kindref="member">_names</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlayouter_1_1_result_1a8ae2954aaff8258c4993365ff0692200" kindref="member">output</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>Base<sp/>class<sp/>for<sp/>layouting,<sp/>this<sp/>class<sp/>can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>first<sp/>step</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/>for<sp/>column<sp/>and<sp/>row<sp/>layouting.</highlight></codeline>
<codeline lineno="214"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classlayouter_1_1_base_layouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_base_layouter" kindref="compound">BaseLayouter</ref><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classlayouter_1_1_base_layouter_1ad52e710aa81331ff2c1a2caddde0f2de" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1ad52e710aa81331ff2c1a2caddde0f2de" kindref="member">subsets</ref>;</highlight></codeline>
<codeline lineno="220" refid="classlayouter_1_1_base_layouter_1ab092b7f07c99e88e6b7d9689caef70fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1ab092b7f07c99e88e6b7d9689caef70fe" kindref="member">nbLayouts</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classlayouter_1_1_base_layouter_1a0655d7dff96b8eff715a053b1e46737b" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Result&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1a0655d7dff96b8eff715a053b1e46737b" kindref="member">results</ref>;</highlight></codeline>
<codeline lineno="223" refid="classlayouter_1_1_base_layouter_1add31da0cb128c19ccd33d08b2b876a07" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1add31da0cb128c19ccd33d08b2b876a07" kindref="member">schema</ref>;</highlight></codeline>
<codeline lineno="224" refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" kindref="member">costModel</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_base_layouter_1ab4d68f4aa3fbaa8e01a1c53121158874" kindref="member">BaseLayouter</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classlayouter_1_1_base_layouter_1a646f4edc71e82e76e41604da77248ea2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a646f4edc71e82e76e41604da77248ea2" kindref="member">~BaseLayouter</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>people<sp/>call<sp/>it<sp/>brute<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a9971511224c3c5c152f31bfc0daeff43" kindref="member">layout</ref>(<ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>s,<sp/>std::string<sp/><ref refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" kindref="member">costModel</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1acca0ce7d35a66394254e27a5f28e1787" kindref="member">getCost</ref>(<ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>l);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1abff4bb07aa7d440fd584f12c2f0099c2" kindref="member">getNewCostForBestLayout</ref>(std::string<sp/>newCostModel);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1a51af2b313475ef25d5ceed137b72cdb5" kindref="member">getAttributeNames</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>std::vector&lt;Result&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1a0db2c2bb60319c1670e78f5879127fec" kindref="member">getNBestResults</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1a9419bfcfa6a9429f58b7aacc881470c6" kindref="member">getBestResult</ref>(std::string<sp/>newCostModel<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1ada6abee7e1e05668f188f0366657dbea" kindref="member">getResult</ref>(std::string<sp/>newCostModel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classlayouter_1_1_base_layouter_1a6e76630eaf8939a9365cc8a795e41e73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a6e76630eaf8939a9365cc8a795e41e73" kindref="member">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a0655d7dff96b8eff715a053b1e46737b" kindref="member">results</ref>.size();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1ab740de467fd38450c920877b05e20dfb" kindref="member">findEqualLayout</ref>(std::string<sp/>newCostModel,<sp/><ref refid="classlayouter_1_1_result" kindref="compound">Result</ref><sp/>other);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a3a68ce4cc4c40dff36c65bd83eb218ef" kindref="member">generateSubSets</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1a11820adc0ef25896a3ffca6b904296cc" kindref="member">externalGenerateSubSetsK</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nbAtts);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a014d0a4cb191c1c6354e12ef974a9018" kindref="member">generateSubSetsK</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nbAtts);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1ac2efd16b7897f7bbe7f50458003f19e1" kindref="member">generateSet</ref>(std::vector&lt;subset_t&gt;<sp/>&amp;ctx,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>position,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nextInt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>N);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1aa7efefed6cf84ffb1dae1cb4eb783a18" kindref="member">iterateThroughLayouts</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a4e8799c8c0368bd7b34813ddb52505da" kindref="member">generateLayouts</ref>(<ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>l,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iter);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a6c1996c2ed452c0f8ea3bd11db07771b" kindref="member">tryToAddSubset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_layout" kindref="compound">Layout</ref><sp/>&amp;l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>&amp;subset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>cost<sp/>for<sp/>column<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a45906ffddd07523044763e595a55478c" kindref="member">getColumnCost</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>cost<sp/>for<sp/>row<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1ac2db931313133cefbd1102ed0d5be068" kindref="member">getRowCost</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>New<sp/>and<sp/>faster<sp/>iteration<sp/>method<sp/>that<sp/>will<sp/>yield<sp/>significant</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>performance<sp/>benefits.<sp/><sp/>Basically<sp/>it<sp/>reduces<sp/>the<sp/>problem<sp/>space<sp/>of</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>iterating<sp/>on<sp/>all<sp/>possible<sp/>combinations<sp/>for<sp/>all<sp/>different<sp/>set<sp/>sizes</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>defining<sp/>the<sp/>best<sp/>possible<sp/>abortion<sp/>criteria<sp/>so<sp/>that<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>remove<sp/>lots<sp/>of<sp/>possibilities.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>n<sp/>The<sp/>current<sp/>depth<sp/>of<sp/>the<sp/>recursion</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>The<sp/>rest<sp/>list<sp/>of<sp/>all<sp/>possible<sp/>subsets<sp/>that<sp/>should<sp/>be<sp/>combined</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>current_size<sp/>The<sp/>current<sp/>size<sp/>of<sp/>subsets</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>dest_size<sp/>The<sp/>total<sp/>number<sp/>of<sp/>subsets<sp/>that<sp/>can<sp/>be<sp/>combined</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>max_attr<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>attributes</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>\param<sp/>curr_attr<sp/>The<sp/>current<sp/>number<sp/>of<sp/>attributes</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>\return<sp/>A<sp/>list<sp/>of<sp/>combinations</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;subset_t&gt;<sp/>&gt;<sp/><ref refid="classlayouter_1_1_base_layouter_1a007c85e2e986eab1f9372d45a4aaca8b" kindref="member">iterateThroughLayoutSubsetsFast</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/>std::vector&lt;subset_t&gt;<sp/>list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_attr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>curr_attr);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a5525bc6bcd2c7c69e56c83d2dc87c7cd" kindref="member">checkLowerBound</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>input,<sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">Layout::internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1ad52e710aa81331ff2c1a2caddde0f2de" kindref="member">subsets</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter_1a060ca333d617512dad105ed8b8ac31aa" kindref="member">iterateLayoutSubsets</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>input,<sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">Layout::internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1ad52e710aa81331ff2c1a2caddde0f2de" kindref="member">subsets</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">Layout::internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_base_layouter_1a50096c37d22f587066425a8b52dacee2" kindref="member">eliminateInvalidSubsets</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>reference,<sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">Layout::internal_layout_t</ref><sp/>input);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/>Candidate<sp/>Layouter<sp/>is<sp/>the<sp/>general<sp/>optimal<sp/>layouter<sp/>that<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/>iterate<sp/>over<sp/>the<sp/>complete<sp/>result<sp/>set<sp/>but<sp/>rather<sp/>optimizes<sp/>the</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/>partitions<sp/>to<sp/>check.</highlight></codeline>
<codeline lineno="308"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="classlayouter_1_1_candidate_layouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_candidate_layouter" kindref="compound">CandidateLayouter</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_base_layouter" kindref="compound">BaseLayouter</ref><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classlayouter_1_1_candidate_layouter_1acc320f5cf0b1c9f41fee1e0e66ca8349" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::set&lt;unsigned&gt;<sp/>&gt;<sp/><ref refid="classlayouter_1_1_candidate_layouter_1acc320f5cf0b1c9f41fee1e0e66ca8349" kindref="member">_candidateList</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_candidate_layouter_1a7764edaec8599996af030193e9006e3e" kindref="member">candidateMergePath</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>initial,<sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>rest,<sp/>std::vector&lt;subset_t&gt;<sp/>&amp;mapping,<sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/>&amp;_cache);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_candidate_layouter_1a26f4565f706b8b97e54c270d8006fcd1" kindref="member">CandidateLayouter</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classlayouter_1_1_candidate_layouter_1a297d998841bb020a0eba6b4bf4ca98d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter_1a297d998841bb020a0eba6b4bf4ca98d1" kindref="member">~CandidateLayouter</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter_1af28114f3cd74d47b40ecdd0f06aadc15" kindref="member">layout</ref>(<ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>s,<sp/>std::string<sp/><ref refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" kindref="member">costModel</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter_1ab59af9130dfba12e39f36a1d68c2717c" kindref="member">generateCandidateList</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_candidate_layouter_1a467445f4ad85a20c8e62bfd7bfb2f2f2" kindref="member">externalCombineCandidates</ref>(std::vector&lt;std::set&lt;<sp/>unsigned&gt;<sp/>&gt;<sp/>candidateList);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter_1ab751daba06fbc2c442ea3e650388cf71" kindref="member">combineCandidates</ref>();</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/>New<sp/>Fast<sp/>Layouter<sp/>based<sp/>on<sp/>monothonic<sp/>properties<sp/>of<sp/>the<sp/>cost</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/>functions</highlight></codeline>
<codeline lineno="335"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classlayouter_1_1_fast_candidate_layouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_fast_candidate_layouter" kindref="compound">FastCandidateLayouter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter" kindref="compound">CandidateLayouter</ref><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classlayouter_1_1_fast_candidate_layouter_1adaaab1442715c71b2c00a0df4c21a346" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_layout_1a42a9858dbe687a701d19de4b592ef06b" kindref="member">Layout::internal_layout_t</ref><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1adaaab1442715c71b2c00a0df4c21a346" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="340" refid="classlayouter_1_1_fast_candidate_layouter_1ae33d4a01d27cdbf29a863b5dc1677140" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;subset_t&gt;<sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1ae33d4a01d27cdbf29a863b5dc1677140" kindref="member">_mapping</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1abc054187fcf33e1ed14c419cfb8a2302" kindref="member">costFor</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>first);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1abc054187fcf33e1ed14c419cfb8a2302" kindref="member">costFor</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>first,<sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>second);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1a64bbf994af3892530cd2d964bec03b66" kindref="member">generateResults</ref>(<ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>initial,<sp/><ref refid="namespacelayouter_1a9779582085930cc6fb80f4f2b27dfd9e" kindref="member">subset_t</ref><sp/>other);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classlayouter_1_1_fast_candidate_layouter_1a7da0506030d911cb052b58cd37239374" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1a7da0506030d911cb052b58cd37239374" kindref="member">FastCandidateLayouter</ref>():<sp/><ref refid="classlayouter_1_1_candidate_layouter" kindref="compound">CandidateLayouter</ref>()</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_fast_candidate_layouter_1aecab3aa454871a104221e53428433b74" kindref="member">layout</ref>(<ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>s,<sp/>std::string<sp/><ref refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" kindref="member">costModel</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>detected<sp/>primary<sp/>partitions<sp/>build<sp/>an<sp/>affinity</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>matrix<sp/>and<sp/>from<sp/>the<sp/>resulting<sp/>graph<sp/>perfrom<sp/>graph<sp/>partitioning.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classlayouter_1_1_divide_and_conquer_layouter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlayouter_1_1_divide_and_conquer_layouter" kindref="compound">DivideAndConquerLayouter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_candidate_layouter" kindref="compound">CandidateLayouter</ref><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;set_subset_t&gt;<sp/>&gt;<sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a08d8edff7952c22c65281d271137b581" kindref="member">partitionGraph</ref>(<ref refid="class_matrix" kindref="compound">Matrix&lt;int&gt;</ref><sp/>m);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>Based<sp/>on<sp/>the<sp/>given<sp/>subsets<sp/>create<sp/>an<sp/>affinity<sp/>matrix</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>representing<sp/>the<sp/>count<sp/>of<sp/>co<sp/>accessed<sp/>attributes<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/>workload</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;int&gt;</ref><sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a375e91a1216c374c34ca6d195cc5d921" kindref="member">createAffinityMatrix</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a5b219150452034db8e83e4e2176e7e82" kindref="member">DivideAndConquerLayouter</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classlayouter_1_1_divide_and_conquer_layouter_1a39d24c3bc706815c1b9b81b6d25a1786" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a39d24c3bc706815c1b9b81b6d25a1786" kindref="member">~DivideAndConquerLayouter</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a8977ced6f6b9cec2ce32bc155fdd8e77" kindref="member">layout</ref>(<ref refid="classlayouter_1_1_schema" kindref="compound">Schema</ref><sp/>s,<sp/>std::string<sp/><ref refid="classlayouter_1_1_base_layouter_1af8584fae815274d94e7c86766abb8b01" kindref="member">costModel</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classlayouter_1_1_divide_and_conquer_layouter_1a1e6be75adc37970062e3a82c723c3e36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlayouter_1_1_divide_and_conquer_layouter_1a1e6be75adc37970062e3a82c723c3e36" kindref="member">numCuts</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_LAYOUTER_BASE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/layouter/base.h"/>
  </compounddef>
</doxygen>
