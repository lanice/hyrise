<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="json__converters_8cpp" kind="file">
    <compoundname>json_converters.cpp</compoundname>
    <includes refid="json__converters_8h" local="yes">json_converters.h</includes>
    <includes refid="storage__types_8h" local="no">storage/storage_types.h</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="4809">
        <label>atomic</label>
      </node>
      <node id="4802">
        <label>limits</label>
      </node>
      <node id="4819">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="4813">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4817" relation="include">
        </childnode>
        <childnode refid="4818" relation="include">
        </childnode>
      </node>
      <node id="4820">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="4800">
        <label>cstdint</label>
      </node>
      <node id="4818">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
      </node>
      <node id="4815">
        <label>stdint.h</label>
      </node>
      <node id="4806">
        <label>stdexcept</label>
      </node>
      <node id="4801">
        <label>string</label>
      </node>
      <node id="4807">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="4808" relation="include">
        </childnode>
        <childnode refid="4809" relation="include">
        </childnode>
      </node>
      <node id="4816">
        <label>ostream</label>
      </node>
      <node id="4821">
        <label>json.h</label>
      </node>
      <node id="4797">
        <label>src/lib/access/json_converters.cpp</label>
        <link refid="json_converters.cpp"/>
        <childnode refid="4798" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4806" relation="include">
        </childnode>
      </node>
      <node id="4814">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="4804" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4806" relation="include">
        </childnode>
        <childnode refid="4815" relation="include">
        </childnode>
        <childnode refid="4816" relation="include">
        </childnode>
      </node>
      <node id="4804">
        <label>vector</label>
      </node>
      <node id="4810">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="4800" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
      </node>
      <node id="4811">
        <label>array</label>
      </node>
      <node id="4817">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="4804" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4803" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
      </node>
      <node id="4812">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="4808">
        <label>thread</label>
      </node>
      <node id="4799">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4800" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4802" relation="include">
        </childnode>
        <childnode refid="4803" relation="include">
        </childnode>
        <childnode refid="4804" relation="include">
        </childnode>
      </node>
      <node id="4805">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="4802" relation="include">
        </childnode>
        <childnode refid="4803" relation="include">
        </childnode>
        <childnode refid="4806" relation="include">
        </childnode>
        <childnode refid="4804" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4799" relation="include">
        </childnode>
        <childnode refid="4807" relation="include">
        </childnode>
        <childnode refid="4810" relation="include">
        </childnode>
        <childnode refid="4812" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
      </node>
      <node id="4798">
        <label>json_converters.h</label>
        <link refid="json__converters_8h"/>
        <childnode refid="4799" relation="include">
        </childnode>
        <childnode refid="4805" relation="include">
        </childnode>
        <childnode refid="4821" relation="include">
        </childnode>
      </node>
      <node id="4803">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="json__converters_8cpp_1af4c4a8d8228b660dfb1f7a68f3217e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string json_converter::convert&lt; std::string &gt;</definition>
        <argsstring>(Json::Value v)</argsstring>
        <name>json_converter::convert&lt; std::string &gt;</name>
        <param>
          <type>Json::Value</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/access/json_converters.cpp" line="29" bodyfile="/home/vagrant/lanice/src/lib/access/json_converters.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json__converters_8h" kindref="compound">json_converters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8" refid="structjson__converter_1a5ed8d0a7c5556f8bb9543ec69f59ed28" refkind="member"><highlight class="normal">T<sp/><ref refid="structjson__converter_1a34b81917a8da5e8b021c645a6b93fb5d" kindref="member">json_converter::convert</ref>(Json::Value<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;DataType<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="13" refid="structjson__converter_1a59b2f63290a44c71dbdab0cf54c75822" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>json_converter::convert&lt;int&gt;(Json::Value<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.asInt();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="18" refid="structjson__converter_1aefb54de312834851e17a0c66a1f74cd3" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1a72c5f9ba0685142ffc747d0a586a5d8a" kindref="member">hyrise_int_t</ref><sp/>json_converter::convert&lt;hyrise_int_t&gt;(Json::Value<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.asInt64();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="24" refid="structjson__converter_1aa0468be2450ff056efb7247cb7959ca7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>json_converter::convert&lt;float&gt;(Json::Value<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.asDouble();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="29" refid="json__converters_8cpp_1af4c4a8d8228b660dfb1f7a68f3217e72" refkind="member"><highlight class="normal">std::string<sp/>json_converter::convert&lt;std::string&gt;(Json::Value<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v.asString();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/access/json_converters.cpp"/>
  </compounddef>
</doxygen>
