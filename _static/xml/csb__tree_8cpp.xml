<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="csb__tree_8cpp" kind="file">
    <compoundname>csb_tree.cpp</compoundname>
    <includes refid="csb__tree_8h" local="yes">csb_tree.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="15453">
        <label>list</label>
      </node>
      <node id="15456">
        <label>assert.h</label>
      </node>
      <node id="15457">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="15449">
        <label>src/lib/storage/csb_tree.cpp</label>
        <link refid="csb_tree.cpp"/>
        <childnode refid="15450" relation="include">
        </childnode>
        <childnode refid="15456" relation="include">
        </childnode>
        <childnode refid="15452" relation="include">
        </childnode>
      </node>
      <node id="15455">
        <label>string.h</label>
      </node>
      <node id="15451">
        <label>vector</label>
      </node>
      <node id="15452">
        <label>iostream</label>
      </node>
      <node id="15454">
        <label>memory</label>
      </node>
      <node id="15450">
        <label>csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="15451" relation="include">
        </childnode>
        <childnode refid="15452" relation="include">
        </childnode>
        <childnode refid="15453" relation="include">
        </childnode>
        <childnode refid="15454" relation="include">
        </childnode>
        <childnode refid="15455" relation="include">
        </childnode>
        <childnode refid="15456" relation="include">
        </childnode>
        <childnode refid="15457" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" prot="public" static="no">
        <name>nullptr</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/csb_tree.cpp" line="7" column="9" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/storage/csb_tree.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="csb__tree_8cpp_1ad9759419059c4c673f863c4943aa1411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ___free</definition>
        <argsstring>(CSBNodeUI *p)</argsstring>
        <name>___free</name>
        <param>
          <type><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBNodeUI</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/csb_tree.cpp" line="51" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/storage/csb_tree.cpp" bodystart="51" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="csb__tree_8h" kindref="compound">csb_tree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>nullptr</highlight></codeline>
<codeline lineno="7" refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>nullptr<sp/>0</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">hyrise::index;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CSBNodeUI::___num_free<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CSBNodeUI::___num_alloc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abf948febb32c105aa0ba5f306a0c7e1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abf948febb32c105aa0ba5f306a0c7e1f" kindref="member">CSBNodeUI::print</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;InternalNode:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(i))-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abf948febb32c105aa0ba5f306a0c7e1f" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(i)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abf948febb32c105aa0ba5f306a0c7e1f" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="csb__tree_8cpp_1ad9759419059c4c673f863c4943aa1411" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csb__tree_8cpp_1ad9759419059c4c673f863c4943aa1411" kindref="member">___free</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBNodeUI</ref><sp/>*p)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>if<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(p))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>on<sp/>the<sp/>bottom<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(p-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>))<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>++CSBNodeUI::___num_free;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//free(p-&gt;first_child);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>all<sp/>lower<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>p-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8cpp_1ad9759419059c4c673f863c4943aa1411" kindref="member">___free</ref>(p-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>++CSBNodeUI::___num_free;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//free(p-&gt;first_child);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a87c806770d82979fe079d7c52040b7d7" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a87c806770d82979fe079d7c52040b7d7" kindref="member">CSBNodeUI::~CSBNodeUI</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;~CSBNodeUI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8cpp_1ad9759419059c4c673f863c4943aa1411" kindref="member">___free</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1afdb60af62aabac6388901b79de6d4bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">CSBNodeUI::addChild</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(index,<sp/>e);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>leafnode<sp/>is<sp/>inserted<sp/>into<sp/>the<sp/>internal<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>know<sp/>that<sp/>no<sp/>more<sp/>data<sp/>will<sp/>be<sp/>allocated<sp/>below<sp/>thos<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">CSBNodeUI::setChild</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index,<sp/>e,<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*l,<sp/>*r;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;index<sp/>==<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>==<sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;index<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>num_keys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>!=<sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;index<sp/>==<sp/>num_keys&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>==<sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">CSBNodeUI::push_back</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>,<sp/>e);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>an<sp/>internal<sp/>node<sp/>is<sp/>set,<sp/>we<sp/>have<sp/>to<sp/>copy<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>children<sp/>of<sp/>the<sp/>parameter<sp/>node<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ad5f6935d72bbd97f8c618026193c7bbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">CSBNodeUI::setChild</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index,<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>assert(!<sp/><ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(e));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>value<sp/>from<sp/>the<sp/>node<sp/>but<sp/>than<sp/>explicitely<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>memcpy(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index,<sp/>e,<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>index)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>=<sp/>e-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a6ae2f0d13ed5909dbab62b10c2a36b2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">CSBNodeUI::push_back</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copys<sp/>the<sp/>memory<sp/>for<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>,<sp/>e);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>))<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*l,<sp/>*r;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBNodeUI</ref><sp/>*tmp<sp/>=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)<sp/>tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abd7211d8c391ca7c43e2880836a19bf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abd7211d8c391ca7c43e2880836a19bf0" kindref="member">CSBNodeUI::insert_for_key</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a281e8242601816919ad0a17b91f76e65" kindref="member">key_type</ref><sp/>k,<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(k);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Find<sp/>the<sp/>insertion<sp/>point<sp/>for<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>move<sp/>all<sp/>elements<sp/>one<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>insert<sp/>the<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*tmp<sp/>=<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determines<sp/>the<sp/>insertion<sp/>point<sp/>for<sp/>the<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a281e8242601816919ad0a17b91f76e65" kindref="member">key_type</ref><sp/>insertion_point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[insertion_point]<sp/>&lt;<sp/>k<sp/><sp/>&amp;&amp;<sp/>insertion_point<sp/>&lt;<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>++insertion_point;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(insertion_point);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>i<sp/>&gt;<sp/>insertion_point;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i]<sp/>=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>++<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insertion_point<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[insertion_point]<sp/>=<sp/><sp/>tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>&lt;<sp/>k<sp/>?<sp/>k<sp/>:<sp/>tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[insertion_point]<sp/>=<sp/><sp/>k;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>used<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>i<sp/>&gt;<sp/>insertion_point;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(i,<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>i<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(insertion_point<sp/>+<sp/>(tmp-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>&lt;<sp/>k<sp/>?<sp/>1<sp/>:<sp/>0),<sp/>e);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a0f2f4db1cfd8e286ea17e4f8c0df57b0" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a0f2f4db1cfd8e286ea17e4f8c0df57b0" kindref="member">CSBNodeUI::CSBNodeUI</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_memory):<sp/>num_keys(0),<sp/>first_child(0)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;CSBNodeUI<sp/>CTOR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>correct<sp/>memory<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(posix_memalign((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>&amp;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>,<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>,<sp/>(<ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref><sp/>+<sp/>1)<sp/>*<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::bad_alloc();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>memset(<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>,<sp/>0,<sp/>(<ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref><sp/>+<sp/>1)<sp/>*<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>++___num_alloc;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a15931ae36be24e6656c46e5bf10c8b16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a15931ae36be24e6656c46e5bf10c8b16" kindref="member">CSBNodeUI::init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor<sp/>for<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a468b8386fae625e3361c81a8472e68fe" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a468b8386fae625e3361c81a8472e68fe" kindref="member">CSBTree::CSBTree</ref>():<sp/><ref refid="namespaceut_1aa1bc633f5abd3833ba737260860f0594" kindref="member">root</ref>(0),<sp/>_num_values(0),<sp/>_num_leafs(0),<sp/>_num_internals(0),<sp/>_begin(0)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>CSBNodeUI::___num_alloc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>CSBNodeUI::___num_free<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classhyrise_1_1index_1_1_c_s_b_tree_1aab0420a0111ddf618929e468c4135ad8" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aab0420a0111ddf618929e468c4135ad8" kindref="member">CSBTree::~CSBTree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;~CSBTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>))<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBLeafNodeUI</ref><sp/>*)<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>fix<sp/>leaking<sp/>leafs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>find<sp/>an<sp/>actual<sp/>leaf<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>_node_id<sp/>struct<sp/>which<sp/>contains<sp/>a<sp/>link</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>parent,<sp/>the<sp/>level<sp/>and<sp/>the<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a04056bfe88c521b3636ecc6364bb4b40" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">CSBTree::_node_id</ref><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a04056bfe88c521b3636ecc6364bb4b40" kindref="member">CSBTree::find_leaf</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>withPath)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>u<sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i,<sp/>level;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>path<sp/>for<sp/>all<sp/>parent<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>std::list&lt;CSBNodeUI<sp/>*&gt;<sp/>*path<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withPath)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>path<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::list&lt;CSBNodeUI<sp/>*&gt;();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">_node_id</ref><sp/>r<sp/>=<sp/><sp/>{<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>,<sp/>0,<sp/>0,<sp/>path};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(u))<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>the<sp/>correct<sp/>pointer<sp/>in<sp/>u<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>u-&gt;num_keys)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;=<sp/>u-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>parent<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>path<sp/>to<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(withPath)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path-&gt;push_front(parent);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>++level;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>u-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">_node_id</ref><sp/>result<sp/>=<sp/>{parent,<sp/>level,<sp/>i,<sp/>path};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>public<sp/>find<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49f78da26a85fcbbe01afd329bf76d27" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i" kindref="compound">CSBTree::pair_ptr</ref><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49f78da26a85fcbbe01afd329bf76d27" kindref="member">CSBTree::find</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>ln;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>the<sp/>leaf<sp/>node<sp/>that<sp/>should<sp/>contain<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">_node_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a04056bfe88c521b3636ecc6364bb4b40" kindref="member">find_leaf</ref>(k);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>ln<sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)(<ref refid="csb__tree_8h_1ae18654403bb30506d655e6be452b07a3" kindref="member">IsLeaf</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.node)<sp/>?<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.node<sp/><sp/>:<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.node-&gt;first_child<sp/>+<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.offset);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ln<sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ln-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ln-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>==<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ln-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Moep<sp/>assertion<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a97901c86d27ca43efe9197869f87d8a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a97901c86d27ca43efe9197869f87d8a8" kindref="member">CSBTree::insert</ref>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k,<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a5b9ddb9ae7fc95ce8b7a9863a50d0783" kindref="member">CSBTree::value_type</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(k);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>key<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49f78da26a85fcbbe01afd329bf76d27" kindref="member">find</ref>(k)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>tree<sp/>is<sp/>blank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>insert<sp/>the<sp/>leaf<sp/>node,<sp/>but<sp/>make<sp/>sure,<sp/>we<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>from<sp/>the<sp/>right<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>n<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aed1694f5dcf03057e7ec36a224b9dca1" kindref="member">leaf_node</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0]<sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aff3e00db7d735adf2afe42f6f25ba81d" kindref="member">pair_type</ref>(k,<sp/>v);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aeb2caa72c8f8692d47ff2aeebab4ebb0" kindref="member">internal_node_ptr</ref>)<sp/>n;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a70884127d5f1d85e145d5ab68244e3b3" kindref="member">_num_leafs</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a4212ab4c368f1d66744b744d51a39a4c" kindref="member">_num_values</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7baa3b165ef9469ac50f10a359e7b28f" kindref="member">_begin</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>parent<sp/>node<sp/>of<sp/>the<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>insert<sp/>to<sp/>find<sp/>it<sp/>with<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">_node_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a04056bfe88c521b3636ecc6364bb4b40" kindref="member">find_leaf</ref>(k,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>leaf<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>:<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref>)<sp/><ref refid="csb__tree_8h_1a17b597a7bff3c281a1a04d40a52aeebc" kindref="member">CONVERT_LEAF</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1aefb1510614bcbdcfbd5825541537fe40" kindref="member">number_leaf_values</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Basic<sp/>Insert:<sp/>num_keys<sp/>&lt;<sp/>number_leaf_values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>into<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e265adb14a5466be73d3beff082580b" kindref="member">insert_into_leaf</ref>(leaf,<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>the<sp/>splitting<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a3c612c9ef0c5b944c2814373b597311b" kindref="member">insert_into_leaf_after_splitting</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.path,<sp/>leaf,<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a4212ab4c368f1d66744b744d51a39a4c" kindref="member">_num_values</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.path;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/>Modifies<sp/>the<sp/>input<sp/>leaf<sp/>and<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="421"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49d0cc3d192adab76ee0a7daeb23769b" refkind="member"><highlight class="normal"><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBTree::leaf_node_ptr</ref><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49d0cc3d192adab76ee0a7daeb23769b" kindref="member">CSBTree::split_leaf_node</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBTree::leaf_node_ptr</ref><sp/>leaf,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a5b9ddb9ae7fc95ce8b7a9863a50d0783" kindref="member">CSBTree::value_type</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Alloc<sp/>temp<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i" kindref="compound">pair_type</ref><sp/>tmp[<ref refid="namespacehyrise_1_1index_1aefb1510614bcbdcfbd5825541537fe40" kindref="member">number_leaf_values</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cut_point<sp/>=<sp/><ref refid="csb__tree_8h_1a89152f60167db9fd68b4ca504da6e757" kindref="member">CUT</ref>(leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>insertion_point,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>insertion<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>insertion_point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[insertion_point].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>&lt;<sp/>k<sp/>&amp;&amp;<sp/>insertion_point<sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1aefb1510614bcbdcfbd5825541537fe40" kindref="member">number_leaf_values</ref>)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>++insertion_point;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>old<sp/>values<sp/>+<sp/>the<sp/>inserted<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref>;<sp/>++i,<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>insertion_point)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp[j]<sp/>=<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i];</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>tmp[insertion_point]<sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aff3e00db7d735adf2afe42f6f25ba81d" kindref="member">pair_type</ref>(k,<sp/>v);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>leaf<sp/>node<sp/>and<sp/>copy<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aed1694f5dcf03057e7ec36a224b9dca1" kindref="member">leaf_node</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a70884127d5f1d85e145d5ab68244e3b3" kindref="member">_num_leafs</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>old<sp/>leafs<sp/>need<sp/>to<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cut_point;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i]<sp/>=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>new<sp/>leaf<sp/>must<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>cut_point;<sp/>i<sp/>&lt;<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i<sp/>-<sp/>cut_point]<sp/>=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Modify<sp/>the<sp/>number<sp/>of<sp/>keys<sp/>for<sp/>the<sp/>input<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>=<sp/>cut_point;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a3c612c9ef0c5b944c2814373b597311b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a3c612c9ef0c5b944c2814373b597311b" kindref="member">CSBTree::insert_into_leaf_after_splitting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1add11d81ceb555c3b73218b6d7040fc53" kindref="member">CSBTree::_node_path_ptr</ref><sp/>path,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBTree::leaf_node_ptr</ref><sp/>leaf,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a5b9ddb9ae7fc95ce8b7a9863a50d0783" kindref="member">CSBTree::value_type</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Have<sp/>to<sp/>split<sp/>for<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(k);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Leaf<sp/>is<sp/>the<sp/>leaf<sp/>we<sp/>need<sp/>to<sp/>split,<sp/>while<sp/>path<sp/>keeps<sp/>track<sp/>of<sp/>the<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>new_leaf<sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a49d0cc3d192adab76ee0a7daeb23769b" kindref="member">split_leaf_node</ref>(leaf,<sp/>k,<sp/>v);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>assert(leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>&lt;<sp/>100);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>assert(new_leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>&lt;<sp/>100);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Create<sp/>new<sp/>root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a71eb82ecde21b8f03cb9f85c54194382" kindref="member">internal_node</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad975d9bba7a2bc251b406a49e9eab711" kindref="member">_num_internals</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>both<sp/>childs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(0,<sp/>leaf);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7baa3b165ef9469ac50f10a359e7b28f" kindref="member">_begin</ref><sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(0);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(new_leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref>-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(1,<sp/>new_leaf);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>leaf;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>parent<sp/>=<sp/>path-&gt;front();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1af6551f0b4c3964c3128f808e7bf987c7" kindref="member">DEBUG_PRINT</ref>(leaf);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1af6551f0b4c3964c3128f808e7bf987c7" kindref="member">DEBUG_PRINT</ref>(new_leaf);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Splitted<sp/>leaf,<sp/>parent<sp/>ok&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>new<sp/>key<sp/>must<sp/>be<sp/>added<sp/>into<sp/>the<sp/>parent<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>right<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abd7211d8c391ca7c43e2880836a19bf0" kindref="member">insert_for_key</ref>(new_leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>,<sp/>new_leaf);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Splitted<sp/>leaf,<sp/>parent<sp/>full&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>parent<sp/>has<sp/>not<sp/>enough<sp/>space<sp/>for<sp/>our<sp/>leaf,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>parent<sp/>has<sp/>to<sp/>be<sp/>split<sp/>and<sp/>pushed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" kindref="member">insert_into_parent_after_splitting</ref>(path,<sp/>new_leaf,<sp/>new_leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>delete<sp/>leaf<sp/>because<sp/>it<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>real<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>new_leaf;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa9436fe39ee218d41bcf08d3390b70c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" kindref="member">CSBTree::insert_into_parent_after_splitting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1add11d81ceb555c3b73218b6d7040fc53" kindref="member">CSBTree::_node_path_ptr</ref><sp/>path,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBTree::leaf_node_ptr</ref><sp/>first_child,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;With<sp/>Leaf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(k);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>path<sp/>and<sp/>reduce<sp/>by<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>node_to_split<sp/>=<sp/>path-&gt;front();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>path-&gt;pop_front();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>point<sp/>to<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cut_point<sp/>=<sp/><ref refid="csb__tree_8h_1a89152f60167db9fd68b4ca504da6e757" kindref="member">CUT</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>new_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a71eb82ecde21b8f03cb9f85c54194382" kindref="member">internal_node</ref>();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad975d9bba7a2bc251b406a49e9eab711" kindref="member">_num_internals</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>a<sp/>next<sp/>step<sp/>the<sp/>keys<sp/>have<sp/>to<sp/>be<sp/>copied<sp/>from<sp/>left<sp/>ot<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>cut_point;<sp/>i<sp/>&lt;<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(i<sp/>-<sp/>cut_point,<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref>)<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(i));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i]);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unset<sp/>the<sp/>old<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(i),<sp/>0,<sp/><ref refid="namespacehyrise_1_1index_1ad1b92efdd34c4db3dd1c208189d8ab2c" kindref="member">cache_line_size</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>child<sp/>from<sp/>the<sp/>previous<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>,<sp/>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref>)<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>key<sp/>amount<sp/>for<sp/>node<sp/>to<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>=<sp/>cut_point<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>have<sp/>to<sp/>check<sp/>where<sp/>the<sp/>new<sp/>first_child<sp/>has<sp/>to<sp/>be<sp/>inserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">key_type</ref><sp/>pivot;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>node_to_split-&gt;keys[node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>])<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abd7211d8c391ca7c43e2880836a19bf0" kindref="member">insert_for_key</ref>(first_child-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>,<sp/>first_child);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>pivot<sp/>=<sp/>((<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)(new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>))-&gt;entries[0].key;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1abd7211d8c391ca7c43e2880836a19bf0" kindref="member">insert_for_key</ref>(first_child-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[0].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>,<sp/>first_child);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>pivot<sp/>=<sp/>((<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)(new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>))-&gt;entries[0].key;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>push<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Create<sp/>new<sp/>root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(pivot);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>Root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>new_root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a71eb82ecde21b8f03cb9f85c54194382" kindref="member">internal_node</ref>();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad975d9bba7a2bc251b406a49e9eab711" kindref="member">_num_internals</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(0,<sp/>node_to_split);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[0]<sp/>=<sp/>pivot;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1acd942ae6b897d11710a438e0c0f5aeaa" kindref="member">setChild</ref>(1,<sp/>new_node);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>l<sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)(new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(0)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref><sp/>+<sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(0)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>r<sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)(new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(1)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0d6515ffa7b097a96a8734d9966b99ff" kindref="member">next</ref><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1aba6669ea5eb8017627ecbab8a1c7a9c7" kindref="member">prev</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7baa3b165ef9469ac50f10a359e7b28f" kindref="member">_begin</ref><sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)<sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(0)-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1aa6d630b8f0b34abbce8eb927aaa1c64a" kindref="member">first_child</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>new<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>=<sp/>new_root;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>new_node;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node_to_split;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Insert<sp/>into<sp/>parent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>parent<sp/>=<sp/>path-&gt;front();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;parent<sp/>is<sp/>fine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(pivot);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">push_back</ref>(new_node);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Parent<sp/>is<sp/>full,<sp/>split<sp/>internal<sp/>requested&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(pivot);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" kindref="member">insert_into_parent_after_splitting</ref>(path,<sp/>new_node,<sp/>pivot);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>new_node;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" kindref="member">CSBTree::insert_into_parent_after_splitting</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1add11d81ceb555c3b73218b6d7040fc53" kindref="member">CSBTree::_node_path_ptr</ref><sp/>path,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">CSBTree::internal_node_ptr</ref><sp/>first_child,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1a2dfcbe187cfa7e80896d4deb863d2220" kindref="member">DEBUG_FUN</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;With<sp/>Internal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>path<sp/>and<sp/>reduce<sp/>by<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>node_to_split<sp/>=<sp/>path-&gt;front();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>path-&gt;pop_front();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>point<sp/>to<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cut_point<sp/>=<sp/><ref refid="csb__tree_8h_1a89152f60167db9fd68b4ca504da6e757" kindref="member">CUT</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>new_node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a71eb82ecde21b8f03cb9f85c54194382" kindref="member">internal_node</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad975d9bba7a2bc251b406a49e9eab711" kindref="member">_num_internals</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>a<sp/>next<sp/>step<sp/>the<sp/>keys<sp/>have<sp/>to<sp/>be<sp/>copied<sp/>from<sp/>left<sp/>ot<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>cut_point;<sp/>i<sp/>&lt;<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(i<sp/>-<sp/>cut_point,<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(i));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[i]);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>child<sp/>from<sp/>the<sp/>previous<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ab0750a69f4f20d7feaa44bb6fecb2201" kindref="member">addChild</ref>(new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>,<sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1affe581ae20b99f4b684d8ad047d2994e" kindref="member">lookup</ref>(node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref>));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>key<sp/>and<sp/>the<sp/>corresponding<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(k);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">push_back</ref>(first_child);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>key<sp/>amount<sp/>for<sp/>node<sp/>to<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>node_to_split-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>=<sp/>cut_point;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PROB<sp/>LEAK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//delete<sp/>first_child;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">key_type</ref><sp/>pivot<sp/>=<sp/>new_node-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a8d0ef0c08b4b70a8a1d391f435ba2218" kindref="member">keys</ref>[0];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>push<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path-&gt;size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Create<sp/>new<sp/>root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>Root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>new_root<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a71eb82ecde21b8f03cb9f85c54194382" kindref="member">internal_node</ref>();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad975d9bba7a2bc251b406a49e9eab711" kindref="member">_num_internals</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">push_back</ref>(node_to_split);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(pivot);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>new_root-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">push_back</ref>(new_node);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>new<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e7970737876b0adcd96c1acc6ad77ac" kindref="member">root</ref><sp/>=<sp/>new_root;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;Insert<sp/>into<sp/>parent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i" kindref="compound">internal_node_ptr</ref><sp/>parent<sp/>=<sp/>path-&gt;front();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a569a442ad5227e84e4d9652bf3d40da5" kindref="member">num_keys</ref><sp/>&lt;<sp/><ref refid="namespacehyrise_1_1index_1acd8c45650f994d5cbd31636cc1a4b497" kindref="member">number_possible_keys</ref>)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csb__tree_8h_1aa46006d6606f3f94029fff98cc0ba94a" kindref="member">DEBUG_MSG</ref>(</highlight><highlight class="stringliteral">&quot;parent<sp/>is<sp/>fine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1a023d60c50e1eeebbd8f97af736fcfb31" kindref="member">addKey</ref>(pivot);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_node_u_i_1ae51e37fae4c5d53aa9805f8c92d6dc78" kindref="member">push_back</ref>(new_node);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ad43c2ae9efb20b26f480522689d20c73" kindref="member">insert_into_parent_after_splitting</ref>(path,<sp/>new_node,<sp/>pivot);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>new_node;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/>Inserts<sp/>the<sp/>key<sp/>and<sp/>value<sp/>into<sp/>the<sp/>leaf<sp/>with<sp/>any<sp/>extras</highlight></codeline>
<codeline lineno="724"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e265adb14a5466be73d3beff082580b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a7e265adb14a5466be73d3beff082580b" kindref="member">CSBTree::insert_into_leaf</ref>(<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">CSBTree::leaf_node_ptr</ref><sp/>leaf,<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aa064822470f2784a31add51a5465874d" kindref="member">CSBTree::key_type</ref><sp/>k,<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a5b9ddb9ae7fc95ce8b7a9863a50d0783" kindref="member">CSBTree::value_type</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>insertion_point,<sp/>i;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>insertion_point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(insertion_point<sp/>&lt;<sp/>leaf-&gt;num_keys<sp/>&amp;&amp;<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[insertion_point].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>&lt;<sp/>k)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>++insertion_point;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref>;<sp/>i<sp/>&gt;<sp/>insertion_point;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>=<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i<sp/>-<sp/>1].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a317a7aca20b0c7e508e40ce7aac5d5f2" kindref="member">value</ref><sp/>=<sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i<sp/>-<sp/>1].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a317a7aca20b0c7e508e40ce7aac5d5f2" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a0df34f644afebd6a0ba5ef2e38adb316" kindref="member">num_keys</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[insertion_point].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a16c21e7ae80e3a590969790fd7333016" kindref="member">key</ref><sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>leaf-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[insertion_point].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a317a7aca20b0c7e508e40ce7aac5d5f2" kindref="member">value</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="classhyrise_1_1index_1_1_c_s_b_tree_1ac4769482397896d738e7e8e44ab7eab5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1ac4769482397896d738e7e8e44ab7eab5" kindref="member">CSBTree::print</ref>(std::ostream<sp/><sp/>&amp;w)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>w<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_tree_1_1__node__id" kindref="compound">_node_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a04056bfe88c521b3636ecc6364bb4b40" kindref="member">find_leaf</ref>(0);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i" kindref="compound">leaf_node_ptr</ref><sp/>l<sp/>=<sp/>(<ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1aec7cad42ad09b81f939c956582652305" kindref="member">leaf_node_ptr</ref>)<sp/><ref refid="csb__tree_8h_1a17b597a7bff3c281a1a04d40a52aeebc" kindref="member">CONVERT_LEAF</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(l<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/>&quot;</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/>std::dec;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>l-&gt;num_keys;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>l-&gt;<ref refid="structhyrise_1_1index_1_1_c_s_b_leaf_node_u_i_1a297fe5351a0a6ec941c1110010d23c57" kindref="member">entries</ref>[i].<ref refid="structhyrise_1_1index_1_1_c_s_b_pair_u_i_1a317a7aca20b0c7e508e40ce7aac5d5f2" kindref="member">value</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/>l-&gt;next;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>w<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="classhyrise_1_1index_1_1_c_s_b_tree_1a97fde271f44d00d1a3765bf697ef5f50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a97fde271f44d00d1a3765bf697ef5f50" kindref="member">CSBTree::num_values</ref>()<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1index_1_1_c_s_b_tree_1a4212ab4c368f1d66744b744d51a39a4c" kindref="member">_num_values</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/storage/csb_tree.cpp"/>
  </compounddef>
</doxygen>
