<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_table_8cpp" kind="file">
    <compoundname>Table.cpp</compoundname>
    <includes refid="_table_8h" local="yes">storage/Table.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cmath</includes>
    <includes refid="_attribute_vector_factory_8h" local="yes">storage/AttributeVectorFactory.h</includes>
    <includes refid="_value_id_map_8hpp" local="yes">storage/ValueIdMap.hpp</includes>
    <incdepgraph>
      <node id="17586">
        <label>atomic</label>
      </node>
      <node id="17577">
        <label>limits</label>
      </node>
      <node id="17593">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="17590">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="17579" relation="include">
        </childnode>
        <childnode refid="17591" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
      </node>
      <node id="17611">
        <label>assert.h</label>
      </node>
      <node id="17594">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="17576">
        <label>cstdint</label>
      </node>
      <node id="17592">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="17593" relation="include">
        </childnode>
        <childnode refid="17594" relation="include">
        </childnode>
      </node>
      <node id="17605">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="17606" relation="include">
        </childnode>
        <childnode refid="17576" relation="include">
        </childnode>
      </node>
      <node id="17595">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17596" relation="include">
        </childnode>
      </node>
      <node id="17581">
        <label>stdint.h</label>
      </node>
      <node id="17612">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="17613" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17614" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17615" relation="include">
        </childnode>
        <childnode refid="17579" relation="include">
        </childnode>
        <childnode refid="17590" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
      </node>
      <node id="17602">
        <label>cmath</label>
      </node>
      <node id="17608">
        <label>cassert</label>
      </node>
      <node id="17580">
        <label>stdexcept</label>
      </node>
      <node id="17571">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17575" relation="include">
        </childnode>
        <childnode refid="17578" relation="include">
        </childnode>
        <childnode refid="17583" relation="include">
        </childnode>
        <childnode refid="17591" relation="include">
        </childnode>
        <childnode refid="17595" relation="include">
        </childnode>
        <childnode refid="17598" relation="include">
        </childnode>
      </node>
      <node id="17598">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17595" relation="include">
        </childnode>
        <childnode refid="17599" relation="include">
        </childnode>
        <childnode refid="17607" relation="include">
        </childnode>
      </node>
      <node id="17572">
        <label>string</label>
      </node>
      <node id="17614">
        <label>map</label>
      </node>
      <node id="17599">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="17600" relation="include">
        </childnode>
        <childnode refid="17601" relation="include">
        </childnode>
        <childnode refid="17602" relation="include">
        </childnode>
        <childnode refid="17586" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17603" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17604" relation="include">
        </childnode>
        <childnode refid="17605" relation="include">
        </childnode>
        <childnode refid="17595" relation="include">
        </childnode>
      </node>
      <node id="17610">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="17611" relation="include">
        </childnode>
        <childnode refid="17606" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17590" relation="include">
        </childnode>
        <childnode refid="17593" relation="include">
        </childnode>
        <childnode refid="17592" relation="include">
        </childnode>
        <childnode refid="17579" relation="include">
        </childnode>
      </node>
      <node id="17584">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="17585" relation="include">
        </childnode>
        <childnode refid="17586" relation="include">
        </childnode>
      </node>
      <node id="17613">
        <label>exception</label>
      </node>
      <node id="17582">
        <label>ostream</label>
      </node>
      <node id="17570">
        <label>src/lib/storage/Table.cpp</label>
        <link refid="Table.cpp"/>
        <childnode refid="17571" relation="include">
        </childnode>
        <childnode refid="17608" relation="include">
        </childnode>
        <childnode refid="17602" relation="include">
        </childnode>
        <childnode refid="17598" relation="include">
        </childnode>
        <childnode refid="17609" relation="include">
        </childnode>
      </node>
      <node id="17615">
        <label>limits.h</label>
      </node>
      <node id="17579">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17581" relation="include">
        </childnode>
        <childnode refid="17582" relation="include">
        </childnode>
      </node>
      <node id="17573">
        <label>vector</label>
      </node>
      <node id="17587">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17588" relation="include">
        </childnode>
      </node>
      <node id="17588">
        <label>array</label>
      </node>
      <node id="17604">
        <label>sstream</label>
      </node>
      <node id="17609">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="17610" relation="include">
        </childnode>
        <childnode refid="17612" relation="include">
        </childnode>
      </node>
      <node id="17591">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17579" relation="include">
        </childnode>
      </node>
      <node id="17600">
        <label>cerrno</label>
      </node>
      <node id="17606">
        <label>iostream</label>
      </node>
      <node id="17597">
        <label>cstddef</label>
      </node>
      <node id="17589">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="17603">
        <label>mutex</label>
      </node>
      <node id="17578">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="17579" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
      </node>
      <node id="17596">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
        <childnode refid="17597" relation="include">
        </childnode>
      </node>
      <node id="17585">
        <label>thread</label>
      </node>
      <node id="17607">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="17608" relation="include">
        </childnode>
        <childnode refid="17602" relation="include">
        </childnode>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17601" relation="include">
        </childnode>
        <childnode refid="17603" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17605" relation="include">
        </childnode>
        <childnode refid="17595" relation="include">
        </childnode>
      </node>
      <node id="17575">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="17576" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
      </node>
      <node id="17583">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="17577" relation="include">
        </childnode>
        <childnode refid="17574" relation="include">
        </childnode>
        <childnode refid="17580" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17575" relation="include">
        </childnode>
        <childnode refid="17584" relation="include">
        </childnode>
        <childnode refid="17587" relation="include">
        </childnode>
        <childnode refid="17589" relation="include">
        </childnode>
        <childnode refid="17590" relation="include">
        </childnode>
        <childnode refid="17579" relation="include">
        </childnode>
      </node>
      <node id="17601">
        <label>cstring</label>
      </node>
      <node id="17574">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_table_8h" kindref="compound">storage/Table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_attribute_vector_factory_8h" kindref="compound">storage/AttributeVectorFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_value_id_map_8hpp" kindref="compound">storage/ValueIdMap.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_table_1af3e19afbe12592b74542d415b7f6e147" refkind="member"><highlight class="normal"><ref refid="class_table_1af3e19afbe12592b74542d415b7f6e147" kindref="member">Table::Table</ref>(</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/>*m,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>std::vector&lt;SharedDictionary&gt;<sp/>*d,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sorted,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>_metadata(m-&gt;size()),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>_dictionaries(m-&gt;size()),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>width(m-&gt;size()),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>_compressed(compressed)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ownership<sp/>change<sp/>for<sp/>meta<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref>(*m-&gt;at(i));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>pass<sp/>dictionaries,<sp/>reuses<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(d-&gt;begin(),<sp/>d-&gt;end(),<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>.begin());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otheriwse<sp/>create<sp/>new<sp/>dictionaries<sp/>based<sp/>on<sp/>the<sp/>met<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>.resize(width);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>create<sp/>dictionaries<sp/>if<sp/>they<sp/>can<sp/>be<sp/>used,<sp/>sorted<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>empty<sp/>tables<sp/>is<sp/>not<sp/>useful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sorted)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[i]<sp/>=<sp/><ref refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" kindref="member">AbstractDictionary::dictionaryWithType</ref><sp/>&lt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_dictionary_factory" kindref="compound">DictionaryFactory&lt;OrderIndifferentDictionary&gt;</ref><sp/>&gt;<sp/>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>[i]-&gt;getType(),<sp/>initial_size);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sorted)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref><sp/>=<sp/>AttributeVectorFactory::getAttributeVector&lt;value_id_t&gt;(<ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>,<sp/>initial_size);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>bits(<ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>.size(),<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits[i]<sp/>=<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[i]-&gt;<ref refid="class_table_1a4f91a50448df40f79c8077378b06ac6e" kindref="member">size</ref>()<sp/>==<sp/>1<sp/>?<sp/>1<sp/>:<sp/>ceil(log(<ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[i]-&gt;<ref refid="class_table_1a4f91a50448df40f79c8077378b06ac6e" kindref="member">size</ref>())<sp/>/<sp/>log(2.0));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref><sp/>=<sp/>AttributeVectorFactory::getAttributeVector2&lt;value_id_t&gt;(<ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>,<sp/>initial_size,<sp/>compressed,<sp/>bits);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_table_1ac8659d11a2cf7d0662311b7e0067b4a9" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_table_1ac8659d11a2cf7d0662311b7e0067b4a9" kindref="member">Table::copy_structure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuse_dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reuse_dict)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>dictionaries<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(field));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_table_1a19611a08af12ca41ae65c5d7ed7f1317" kindref="member">dictionaryAt</ref>(field));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_table_1a4a09938a2928bb5765700bcb2fd98d8f" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(i));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_table_1a19611a08af12ca41ae65c5d7ed7f1317" kindref="member">dictionaryAt</ref>(i));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><sp/>std::make_shared&lt;Table&gt;(&amp;<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>,<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>,<sp/>initial_size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>compressed);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_table_1ab65a5c456748e558a4066992fa055f84" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_table_1ab65a5c456748e558a4066992fa055f84" kindref="member">Table::copy_structure_modifiable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(field));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" kindref="member">AbstractDictionary::dictionaryWithType</ref>&lt;<ref refid="struct_dictionary_factory" kindref="compound">DictionaryFactory&lt;OrderIndifferentDictionary&gt;</ref><sp/>&gt;(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(field)-&gt;getType()));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_table_1a4a09938a2928bb5765700bcb2fd98d8f" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(i));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" kindref="member">AbstractDictionary::dictionaryWithType</ref>&lt;<ref refid="struct_dictionary_factory" kindref="compound">DictionaryFactory&lt;OrderIndifferentDictionary&gt;</ref><sp/>&gt;(<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">metadataAt</ref>(i)-&gt;getType()));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::make_shared&lt;Table&gt;(&amp;<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>,<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>,<sp/>initial_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="class_table_1aa13816dae934f8101d3acc4f2a6d52d3" kindref="member">_compressed</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_table_1a9a559f2e7beb37b511ee9f88873164f8" refkind="member"><highlight class="normal"><ref refid="class_table_1a9a559f2e7beb37b511ee9f88873164f8" kindref="member">Table::~Table</ref>()<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>m:<sp/><ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_table_1a4f91a50448df40f79c8077378b06ac6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_table_1a4f91a50448df40f79c8077378b06ac6e" kindref="member">Table::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;size();</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_table_1a4a09938a2928bb5765700bcb2fd98d8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_table_1a4a09938a2928bb5765700bcb2fd98d8f" kindref="member">Table::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_table_1af101f8e71447639c3ab7833a13886ab9" refkind="member"><highlight class="normal"><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_table_1af101f8e71447639c3ab7833a13886ab9" kindref="member">Table::getValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>assert(column<sp/>&lt;<sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;get(column,<sp/>row);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>valueId.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valueId;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_table_1af7ee2349ecdb06c7b0d26ce8a6d0bc5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_table_1af7ee2349ecdb06c7b0d26ce8a6d0bc5c" kindref="member">Table::setValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>assert(column<sp/>&lt;<sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;set(column,<sp/>row,<sp/>valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_table_1a41968edd4b3878f6fb899efc6ec61d22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_table_1a41968edd4b3878f6fb899efc6ec61d22" kindref="member">Table::reserve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nr_of_values)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr_of_values<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;reserve(nr_of_values);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_table_1a2a48728158c6b6ecb0bcae58be4895c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_table_1a2a48728158c6b6ecb0bcae58be4895c2" kindref="member">Table::resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;resize(rows);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_table_1a73cdae68558b55149d278b49a34b99c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*<ref refid="class_table_1a73cdae68558b55149d278b49a34b99c3" kindref="member">Table::metadataAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>.at(column);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_table_1a19611a08af12ca41ae65c5d7ed7f1317" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_table_1a19611a08af12ca41ae65c5d7ed7f1317" kindref="member">Table::dictionaryAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[column];</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_table_1a4aee66485c27b931387601b18d53a5d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_table_1a4aee66485c27b931387601b18d53a5d9" kindref="member">Table::dictionaryByTableId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[column];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_table_1a0c60535f5231afeef6066fc74df32e1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_table_1a0c60535f5231afeef6066fc74df32e1e" kindref="member">Table::setDictionaryAt</ref>(<ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>the<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[column]<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[column]-&gt;<ref refid="class_table_1a4f91a50448df40f79c8077378b06ac6e" kindref="member">size</ref>()<sp/>!=<sp/>dict-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rewrite<sp/>the<sp/>doc<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;rewriteColumn(column,<sp/>dict-&gt;size()<sp/>==<sp/>1<sp/>?<sp/>1<sp/>:<sp/>ceil(log(dict-&gt;size())<sp/>/<sp/>log(2)));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[column]<sp/>=<sp/>dict;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_table_1ac0f70171f03d81c2eb1ae18497e15bac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_table_1ac0f70171f03d81c2eb1ae18497e15bac" kindref="member">Table::setAttributes</ref>(<ref refid="class_table_1a6c0360848d539fb4c4eb78e08c261fe8" kindref="member">SharedAttributeVector</ref><sp/>doc)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref><sp/>=<sp/>doc;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_table_1abac05af8a4b561c460b82c6562c5f458" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_table_1abac05af8a4b561c460b82c6562c5f458" kindref="member">Table::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_table<sp/>=<sp/>std::make_shared&lt;table_type&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;(<ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>.begin(),<sp/><ref refid="class_table_1a7bb1126eda583a961d96c9068eb39b49" kindref="member">_metadata</ref>.end()));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>new_table-&gt;width<sp/>=<sp/><ref refid="class_table_1abde7f89bc1bd5e141ffa1b3814ae8031" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="class_table_1a6c0360848d539fb4c4eb78e08c261fe8" kindref="member">SharedAttributeVector</ref><sp/>new_tuples<sp/>=<sp/><ref refid="class_table_1a7e46936441a3164733d0f3fefb593d4e" kindref="member">tuples</ref>-&gt;copy();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>new_table-&gt;setAttributes(new_tuples);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dictIndex<sp/>=<sp/>0;<sp/>dictIndex<sp/>&lt;<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>.size();<sp/>++dictIndex)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_dict<sp/>=<sp/><ref refid="class_table_1a24fae698a1f1a38a4cf904164512b4e6" kindref="member">_dictionaries</ref>[dictIndex]-&gt;copy();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>new_table-&gt;setDictionaryAt(new_dict,<sp/>dictIndex);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_table;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/storage/Table.cpp"/>
  </compounddef>
</doxygen>
