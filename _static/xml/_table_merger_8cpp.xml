<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_table_merger_8cpp" kind="file">
    <compoundname>TableMerger.cpp</compoundname>
    <includes refid="_table_merger_8h" local="yes">storage/TableMerger.h</includes>
    <includes local="no">cassert</includes>
    <includes refid="_abstract_merger_8h" local="yes">storage/AbstractMerger.h</includes>
    <incdepgraph>
      <node id="18117">
        <label>atomic</label>
      </node>
      <node id="18121">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="18122" relation="include">
        </childnode>
        <childnode refid="18125" relation="include">
        </childnode>
        <childnode refid="18126" relation="include">
        </childnode>
      </node>
      <node id="18132">
        <label>functional</label>
      </node>
      <node id="18111">
        <label>limits</label>
      </node>
      <node id="18115">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="18116" relation="include">
        </childnode>
        <childnode refid="18117" relation="include">
        </childnode>
      </node>
      <node id="18134">
        <label>iterator</label>
      </node>
      <node id="18128">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="18109">
        <label>cstdint</label>
      </node>
      <node id="18123">
        <label>stdint.h</label>
      </node>
      <node id="18138">
        <label>cassert</label>
      </node>
      <node id="18114">
        <label>stdexcept</label>
      </node>
      <node id="18133">
        <label>numeric</label>
      </node>
      <node id="18118">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="18109" relation="include">
        </childnode>
        <childnode refid="18119" relation="include">
        </childnode>
      </node>
      <node id="18110">
        <label>string</label>
      </node>
      <node id="18124">
        <label>ostream</label>
      </node>
      <node id="18130">
        <label>helper/vector_helpers.h</label>
        <link refid="vector__helpers_8h"/>
        <childnode refid="18131" relation="include">
        </childnode>
        <childnode refid="18132" relation="include">
        </childnode>
        <childnode refid="18133" relation="include">
        </childnode>
        <childnode refid="18134" relation="include">
        </childnode>
      </node>
      <node id="18105">
        <label>src/lib/storage/TableMerger.cpp</label>
        <link refid="TableMerger.cpp"/>
        <childnode refid="18106" relation="include">
        </childnode>
        <childnode refid="18138" relation="include">
        </childnode>
        <childnode refid="18135" relation="include">
        </childnode>
      </node>
      <node id="18122">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18110" relation="include">
        </childnode>
        <childnode refid="18114" relation="include">
        </childnode>
        <childnode refid="18123" relation="include">
        </childnode>
        <childnode refid="18124" relation="include">
        </childnode>
      </node>
      <node id="18126">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="18127" relation="include">
        </childnode>
        <childnode refid="18128" relation="include">
        </childnode>
      </node>
      <node id="18137">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="18112" relation="include">
        </childnode>
        <childnode refid="18136" relation="include">
        </childnode>
      </node>
      <node id="18127">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="18107">
        <label>vector</label>
      </node>
      <node id="18135">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18136" relation="include">
        </childnode>
        <childnode refid="18108" relation="include">
        </childnode>
        <childnode refid="18113" relation="include">
        </childnode>
        <childnode refid="18137" relation="include">
        </childnode>
      </node>
      <node id="18119">
        <label>array</label>
      </node>
      <node id="18106">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18108" relation="include">
        </childnode>
        <childnode refid="18113" relation="include">
        </childnode>
        <childnode refid="18129" relation="include">
        </childnode>
        <childnode refid="18135" relation="include">
        </childnode>
      </node>
      <node id="18136">
        <label>unordered_map</label>
      </node>
      <node id="18120">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="18125">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18110" relation="include">
        </childnode>
        <childnode refid="18112" relation="include">
        </childnode>
        <childnode refid="18122" relation="include">
        </childnode>
      </node>
      <node id="18113">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="18111" relation="include">
        </childnode>
        <childnode refid="18112" relation="include">
        </childnode>
        <childnode refid="18114" relation="include">
        </childnode>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18110" relation="include">
        </childnode>
        <childnode refid="18108" relation="include">
        </childnode>
        <childnode refid="18115" relation="include">
        </childnode>
        <childnode refid="18118" relation="include">
        </childnode>
        <childnode refid="18120" relation="include">
        </childnode>
        <childnode refid="18121" relation="include">
        </childnode>
        <childnode refid="18122" relation="include">
        </childnode>
      </node>
      <node id="18116">
        <label>thread</label>
      </node>
      <node id="18108">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="18109" relation="include">
        </childnode>
        <childnode refid="18110" relation="include">
        </childnode>
        <childnode refid="18111" relation="include">
        </childnode>
        <childnode refid="18112" relation="include">
        </childnode>
        <childnode refid="18107" relation="include">
        </childnode>
      </node>
      <node id="18129">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="18107" relation="include">
        </childnode>
        <childnode refid="18113" relation="include">
        </childnode>
        <childnode refid="18130" relation="include">
        </childnode>
      </node>
      <node id="18131">
        <label>algorithm</label>
      </node>
      <node id="18112">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_table_merger_8cpp_1ab23c7a3995c659b2685f3622b2b8ac2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref></type>
        <definition>hyrise::storage::column_mapping_t identityMap</definition>
        <argsstring>(hyrise::storage::atable_ptr_t input)</argsstring>
        <name>identityMap</name>
        <param>
          <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/captain/HPI/aepic/hyrise/src/lib/storage/TableMerger.cpp" line="8" bodyfile="/home/captain/HPI/aepic/hyrise/src/lib/storage/TableMerger.cpp" bodystart="8" bodyend="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_table_merger_8h" kindref="compound">storage/TableMerger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_merger_8h" kindref="compound">storage/AbstractMerger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_table_merger_8cpp_1ab23c7a3995c659b2685f3622b2b8ac2b" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref><sp/><ref refid="_table_merger_8cpp_1ab23c7a3995c659b2685f3622b2b8ac2b" kindref="member">identityMap</ref>(<ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref><sp/>map;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index<sp/>=<sp/>0;<sp/>column_index<sp/>&lt;<sp/>input-&gt;columnCount();<sp/>++column_index)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>map[column_index]<sp/>=<sp/>column_index;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_table_merger_1afa9b232a14cf7fc1c7165a61884d8b85" refkind="member"><highlight class="normal">std::vector&lt;hyrise::storage::atable_ptr_t&gt;<sp/><ref refid="class_table_merger_1afa9b232a14cf7fc1c7165a61884d8b85" kindref="member">TableMerger::mergeToTable</ref>(<ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>dest,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useValid,<sp/>std::vector&lt;bool&gt;<sp/>valid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>valid<sp/>vector<sp/>has<sp/>the<sp/>right<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>assert(!useValid<sp/>||<sp/>(useValid<sp/>&amp;&amp;<sp/>valid.size()<sp/>==<sp/><ref refid="namespacehyrise_1_1functional_1aa5a5d6518ef70d11b4f8a77ee8c6b767" kindref="member">hyrise::functional::sum</ref>(input_tables,<sp/>0ul,<sp/>[](<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>t){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;size();<sp/>})));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>two<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tables.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>TableMerger<sp/>with<sp/>a<sp/>less<sp/>than<sp/>two<sp/>tables<sp/>to<sp/>merge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="struct__merge__tables" kindref="compound">merge_tables</ref><sp/>tables<sp/>=<sp/><ref refid="class_table_merger_1a07d915d4223c35d036a5a9170da6aea3" kindref="member">_strategy</ref>-&gt;<ref refid="class_abstract_merge_strategy_1a63dd7bc8200700bfaf225f2227ea7d63" kindref="member">determineTablesToMerge</ref>(input_tables);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>assert(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>.size()<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>modifiable<sp/>output<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>std::vector&lt;hyrise::storage::atable_ptr_t&gt;<sp/>result;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tab<sp/>:<sp/>tables.<ref refid="struct__merge__tables_1ada66d92608732d97997acdff133bfede" kindref="member">tables_not_to_merge</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(std::const_pointer_cast&lt;AbstractTable&gt;(tab));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mapping<sp/>=<sp/><ref refid="namespacehyrise_1_1storage_1a37de91e69704c722e194d76a8f4a9c1c" kindref="member">hyrise::storage::calculateMapping</ref>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>.front(),<sp/>dest);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newSize<sp/>=<sp/><ref refid="class_table_merger_1a07d915d4223c35d036a5a9170da6aea3" kindref="member">_strategy</ref>-&gt;<ref refid="class_abstract_merge_strategy_1a158f095d78cdcf77fb8fec05cd54a5b0" kindref="member">calculateNewSize</ref>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>,<sp/>useValid,<sp/>valid);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_merger_1af8e332ea3c6869e055689edfddb236c2" kindref="member">_merger</ref>-&gt;<ref refid="class_abstract_merger_1a901419482656102f08251b8d62fff1dc" kindref="member">mergeValues</ref>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>,<sp/>dest,<sp/>mapping,<sp/>newSize,<sp/>useValid,<sp/>valid);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>result<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(dest);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_table_merger_1ad3d10cb9a6054d043be5261c313cb3ce" refkind="member"><highlight class="normal">std::vector&lt;hyrise::storage::atable_ptr_t<sp/>&gt;<sp/><ref refid="class_table_merger_1ad3d10cb9a6054d043be5261c313cb3ce" kindref="member">TableMerger::merge</ref>(std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useValid,<sp/>std::vector&lt;bool&gt;<sp/>valid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>merged_table;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>valid<sp/>vector<sp/>has<sp/>the<sp/>right<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>assert(!useValid<sp/>||<sp/>(useValid<sp/>&amp;&amp;<sp/>valid.size()<sp/>==<sp/><ref refid="namespacehyrise_1_1functional_1aa5a5d6518ef70d11b4f8a77ee8c6b767" kindref="member">hyrise::functional::sum</ref>(input_tables,<sp/>0ul,<sp/>[](<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>t){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;size();<sp/>})));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>least<sp/>two<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tables.size()<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>TableMerger<sp/>with<sp/>a<sp/>less<sp/>than<sp/>two<sp/>tables<sp/>to<sp/>merge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="struct__merge__tables" kindref="compound">merge_tables</ref><sp/>tables<sp/>=<sp/><ref refid="class_table_merger_1a07d915d4223c35d036a5a9170da6aea3" kindref="member">_strategy</ref>-&gt;<ref refid="class_abstract_merge_strategy_1a63dd7bc8200700bfaf225f2227ea7d63" kindref="member">determineTablesToMerge</ref>(input_tables);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>assert(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>.size()<sp/>!=<sp/>1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>modifiable<sp/>output<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::vector&lt;hyrise::storage::atable_ptr_t&gt;<sp/>result;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tab<sp/>:<sp/>tables.<ref refid="struct__merge__tables_1ada66d92608732d97997acdff133bfede" kindref="member">tables_not_to_merge</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(std::const_pointer_cast&lt;AbstractTable&gt;(tab));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>.size()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>new<sp/>size<sp/>-<sp/>insert<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/><ref refid="class_table_merger_1a07d915d4223c35d036a5a9170da6aea3" kindref="member">_strategy</ref>-&gt;<ref refid="class_abstract_merge_strategy_1a158f095d78cdcf77fb8fec05cd54a5b0" kindref="member">calculateNewSize</ref>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>,<sp/>useValid,<sp/>valid);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>merged_table<sp/>=<sp/>input_tables[0]-&gt;copy_structure(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*fields*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*reuse<sp/>dict*/</highlight><highlight class="normal">,<sp/>new_size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*with<sp/>containers*/</highlight><highlight class="normal">,<sp/><ref refid="class_table_merger_1af0ba9aa3f661c811ff6d6d1576b1af1a" kindref="member">_compress</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_table_merger_1af8e332ea3c6869e055689edfddb236c2" kindref="member">_merger</ref>-&gt;<ref refid="class_abstract_merger_1a901419482656102f08251b8d62fff1dc" kindref="member">mergeValues</ref>(tables.<ref refid="struct__merge__tables_1ad2243f6368a5bc5a4e37b7f6b5e12cc0" kindref="member">tables_to_merge</ref>,<sp/>merged_table,<sp/><ref refid="_table_merger_8cpp_1ab23c7a3995c659b2685f3622b2b8ac2b" kindref="member">identityMap</ref>(merged_table),<sp/>new_size,<sp/>useValid,<sp/>valid);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>result<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(merged_table);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_table_merger_1acb1eadc74fc4941685ca982bd0001f0a" refkind="member"><highlight class="normal"><ref refid="class_table_merger" kindref="compound">TableMerger</ref><sp/>*<ref refid="class_table_merger_1acb1eadc74fc4941685ca982bd0001f0a" kindref="member">TableMerger::copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_table_merger_1afe9281253ca60a061bc11486f563b545" kindref="member">TableMerger</ref>(<ref refid="class_table_merger_1a07d915d4223c35d036a5a9170da6aea3" kindref="member">_strategy</ref>-&gt;<ref refid="class_abstract_merge_strategy_1ad7ba6bba2799af11ed26358fa28779ab" kindref="member">copy</ref>(),<sp/><ref refid="class_table_merger_1af8e332ea3c6869e055689edfddb236c2" kindref="member">_merger</ref>-&gt;<ref refid="class_abstract_merger_1a534ea287ca2792195c450ca6b2542bf9" kindref="member">copy</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/storage/TableMerger.cpp"/>
  </compounddef>
</doxygen>
