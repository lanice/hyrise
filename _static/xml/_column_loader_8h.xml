<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_column_loader_8h" kind="file">
    <compoundname>ColumnLoader.h</compoundname>
    <includes refid="_abstract_table_8h" local="yes">storage/AbstractTable.h</includes>
    <includedby refid="_m_pass_c_s_v_loader_8cpp" local="yes">src/lib/io/MPassCSVLoader.cpp</includedby>
    <incdepgraph>
      <node id="11701">
        <label>atomic</label>
      </node>
      <node id="11705">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="11706" relation="include">
        </childnode>
        <childnode refid="11709" relation="include">
        </childnode>
        <childnode refid="11710" relation="include">
        </childnode>
      </node>
      <node id="11692">
        <label>limits</label>
      </node>
      <node id="11699">
        <label>helper/locking.h</label>
        <link refid="locking_8h"/>
        <childnode refid="11700" relation="include">
        </childnode>
        <childnode refid="11701" relation="include">
        </childnode>
      </node>
      <node id="11712">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="11698">
        <label>cstdint</label>
      </node>
      <node id="11707">
        <label>stdint.h</label>
      </node>
      <node id="11694">
        <label>stdexcept</label>
      </node>
      <node id="11702">
        <label>helper/unique_id.h</label>
        <link refid="unique__id_8h"/>
        <childnode refid="11698" relation="include">
        </childnode>
        <childnode refid="11703" relation="include">
        </childnode>
      </node>
      <node id="11696">
        <label>string</label>
      </node>
      <node id="11708">
        <label>ostream</label>
      </node>
      <node id="11690">
        <label>src/lib/io/ColumnLoader.h</label>
        <link refid="ColumnLoader.h"/>
        <childnode refid="11691" relation="include">
        </childnode>
      </node>
      <node id="11706">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="11695" relation="include">
        </childnode>
        <childnode refid="11696" relation="include">
        </childnode>
        <childnode refid="11694" relation="include">
        </childnode>
        <childnode refid="11707" relation="include">
        </childnode>
        <childnode refid="11708" relation="include">
        </childnode>
      </node>
      <node id="11710">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="11711" relation="include">
        </childnode>
        <childnode refid="11712" relation="include">
        </childnode>
      </node>
      <node id="11711">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="11695">
        <label>vector</label>
      </node>
      <node id="11703">
        <label>array</label>
      </node>
      <node id="11704">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="11709">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="11695" relation="include">
        </childnode>
        <childnode refid="11696" relation="include">
        </childnode>
        <childnode refid="11693" relation="include">
        </childnode>
        <childnode refid="11706" relation="include">
        </childnode>
      </node>
      <node id="11691">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="11692" relation="include">
        </childnode>
        <childnode refid="11693" relation="include">
        </childnode>
        <childnode refid="11694" relation="include">
        </childnode>
        <childnode refid="11695" relation="include">
        </childnode>
        <childnode refid="11696" relation="include">
        </childnode>
        <childnode refid="11697" relation="include">
        </childnode>
        <childnode refid="11699" relation="include">
        </childnode>
        <childnode refid="11702" relation="include">
        </childnode>
        <childnode refid="11704" relation="include">
        </childnode>
        <childnode refid="11705" relation="include">
        </childnode>
        <childnode refid="11706" relation="include">
        </childnode>
      </node>
      <node id="11700">
        <label>thread</label>
      </node>
      <node id="11697">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="11698" relation="include">
        </childnode>
        <childnode refid="11696" relation="include">
        </childnode>
        <childnode refid="11692" relation="include">
        </childnode>
        <childnode refid="11693" relation="include">
        </childnode>
        <childnode refid="11695" relation="include">
        </childnode>
      </node>
      <node id="11693">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11713">
        <label>src/lib/io/ColumnLoader.h</label>
        <link refid="ColumnLoader.h"/>
        <childnode refid="11714" relation="include">
        </childnode>
      </node>
      <node id="11714">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_abstract_column_loader" prot="public">AbstractColumnLoader</innerclass>
    <innerclass refid="class_column_loader" prot="public">ColumnLoader</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_IO_COLUMNLOADER_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_IO_COLUMNLOADER_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_abstract_column_loader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_abstract_column_loader" kindref="compound">AbstractColumnLoader</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="class_abstract_column_loader_1a730d8989c1c3386122f89edef66b803a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_abstract_column_loader_1a730d8989c1c3386122f89edef66b803a" kindref="member">~AbstractColumnLoader</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="13" refid="class_column_loader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_column_loader" kindref="compound">ColumnLoader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_abstract_column_loader" kindref="compound">AbstractColumnLoader</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/><sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="class_column_loader_1a1f22656b9cad47a20a54ee7e11c299e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_column_loader_1a1f22656b9cad47a20a54ee7e11c299e1" kindref="member">ColumnLoader</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>.reserve(size);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_column_loader_1a48f852e781d1aa80c67f068c4585fa2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_column_loader_1a48f852e781d1aa80c67f068c4585fa2b" kindref="member">~ColumnLoader</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_column_loader_1a037cba30c3ea1312264353a5791d3ff7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_column_loader_1a037cba30c3ea1312264353a5791d3ff7" kindref="member">push_back</ref>(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>.push_back(value);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_column_loader_1a36f11d0353c403d269a37468e11ac096" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_column_loader_1a36f11d0353c403d269a37468e11ac096" kindref="member">write_to_table</ref>(<ref refid="class_abstract_table" kindref="compound">AbstractTable</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref><sp/>*dict<sp/>=<sp/>(<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref><sp/>*)table-&gt;<ref refid="class_abstract_table_1ad20e4bbda0d8f1d257cbb62f4c0be91c" kindref="member">dictionaryAt</ref>(column);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict-&gt;<ref refid="class_base_dictionary_1a3c7dd2234656fbda5531fa9de29ffc81" kindref="member">isOrdered</ref>())<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>sorted<sp/>list<sp/>for<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>*vec_sorted<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;(<ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>.begin(),<sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>.end());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sort(vec_sorted-&gt;begin(),<sp/>vec_sorted-&gt;end());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>last_value<sp/>=<sp/>vec_sorted-&gt;at(0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;<ref refid="class_base_dictionary_1a6dc6677f03d2432c0d00d7bcf9d3b58d" kindref="member">addValue</ref>(last_value);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value:<sp/>*vec_sorted)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>last_value)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;<ref refid="class_base_dictionary_1a6dc6677f03d2432c0d00d7bcf9d3b58d" kindref="member">addValue</ref>(value);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value:<sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="class_abstract_table_1a2be48affbc5a0060e2d17128be9e91b9" kindref="member">setValueId</ref>(column,<sp/>row++,<sp/>table-&gt;<ref refid="class_abstract_table_1a21786cf05c9871539e32e583b1e717c4" kindref="member">getValueIdForValue</ref>&lt;T&gt;(column,<sp/>value));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>vec_sorted;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value:<sp/><ref refid="class_column_loader_1adaf817df2d70919dc94d28beb168732f" kindref="member">_values</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="class_abstract_table_1a0aa362f5b907b4d79c2fb43889a8970b" kindref="member">setValue</ref>&lt;T&gt;(column,<sp/>row++,<sp/>value);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_IO_COLUMNLOADER_H_</highlight></codeline>
    </programlisting>
    <location file="/home/captain/HPI/aepic/hyrise/src/lib/io/ColumnLoader.h"/>
  </compounddef>
</doxygen>
