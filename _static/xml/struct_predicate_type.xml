<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="struct_predicate_type" kind="struct" prot="public">
    <compoundname>PredicateType</compoundname>
    <includes refid="expression__types_8h" local="no">expression_types.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" prot="public" static="no">
        <name>type</name>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aecbf999dec18480f89ed3e7b8f33f746" prot="public">
          <name>EqualsExpression</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a8c0dfd582c27af2f6c00b1cc30e1723b" prot="public">
          <name>LessThanExpression</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a17020976118c2cc2127d0c60d6e17468" prot="public">
          <name>GreaterThanExpression</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a72d9c49e33f267f776f86271c8cef637" prot="public">
          <name>BetweenExpression</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ac2077bbe0198712a2bbfa7f02f041e56" prot="public">
          <name>CompoundExpression</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a7536be078490f330cb5e61dd057417b3" prot="public">
          <name>NegateExpression</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a60bdbd1b416610a640dfffe9919aca6c" prot="public">
          <name>AND</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a3ff86da6498bd889c76820144ecfd860" prot="public">
          <name>OR</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a40c0fea54ab0a7158cb810684feb1170" prot="public">
          <name>NOT</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aac2c8f67acde5a3c0af73c254dfd6744" prot="public">
          <name>EqualsExpressionRaw</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aa73eaedb5aedf02d4d84010651b32eb1" prot="public">
          <name>LessThanExpressionRaw</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a48d9b027ddc83f042229dccfc2ad8f03" prot="public">
          <name>GreaterThanExpressionRaw</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ae6b4899469126b734579c7d3073f1596" prot="public">
          <name>EqualsExpressionValue</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a666ecff5c2bf54dc5663302137090fab" prot="public">
          <name>GreaterThanExpressionValue</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a4ab3d07c49bc4a9299720615b1bb6c3c" prot="public">
          <name>LessThanExpressionValue</name>
          <initializer>= 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ae9bae8f4842c9c33b711d2d5f1af54a4" prot="public">
          <name>GreaterThanEqualsExpressionValue</name>
          <initializer>= 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ab9c4c3c614968b4b8d420f141dce4c99" prot="public">
          <name>LessThanEqualsExpressionValue</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lanice/develop/epic/hyrise/src/lib/access/expressions/expression_types.h" line="13" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/expressions/expression_types.h" bodystart="13" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2973">
        <label>PredicateType</label>
        <link refid="struct_predicate_type"/>
      </node>
    </collaborationgraph>
    <location file="/home/lanice/develop/epic/hyrise/src/lib/access/expressions/expression_types.h" line="12" column="1" bodyfile="/home/lanice/develop/epic/hyrise/src/lib/access/expressions/expression_types.h" bodystart="12" bodyend="33"/>
    <listofallmembers>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a60bdbd1b416610a640dfffe9919aca6c" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>AND</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a72d9c49e33f267f776f86271c8cef637" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>BetweenExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ac2077bbe0198712a2bbfa7f02f041e56" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>CompoundExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aecbf999dec18480f89ed3e7b8f33f746" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>EqualsExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aac2c8f67acde5a3c0af73c254dfd6744" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>EqualsExpressionRaw</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ae6b4899469126b734579c7d3073f1596" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>EqualsExpressionValue</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ae9bae8f4842c9c33b711d2d5f1af54a4" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>GreaterThanEqualsExpressionValue</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a17020976118c2cc2127d0c60d6e17468" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>GreaterThanExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a48d9b027ddc83f042229dccfc2ad8f03" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>GreaterThanExpressionRaw</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a666ecff5c2bf54dc5663302137090fab" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>GreaterThanExpressionValue</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4ab9c4c3c614968b4b8d420f141dce4c99" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>LessThanEqualsExpressionValue</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a8c0dfd582c27af2f6c00b1cc30e1723b" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>LessThanExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4aa73eaedb5aedf02d4d84010651b32eb1" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>LessThanExpressionRaw</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a4ab3d07c49bc4a9299720615b1bb6c3c" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>LessThanExpressionValue</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a7536be078490f330cb5e61dd057417b3" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>NegateExpression</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a40c0fea54ab0a7158cb810684feb1170" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>NOT</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4a3ff86da6498bd889c76820144ecfd860" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>OR</name></member>
      <member refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" prot="public" virt="non-virtual"><scope>PredicateType</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
