<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_generic_c_s_v_8cpp" kind="file">
    <compoundname>GenericCSV.cpp</compoundname>
    <includes refid="_generic_c_s_v_8h" local="yes">io/GenericCSV.h</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">istream</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">memory</includes>
    <includes local="no">string.h</includes>
    <includes local="no">libcsv/csv.h</includes>
    <incdepgraph>
      <node id="11829">
        <label>stdint.h</label>
      </node>
      <node id="11824">
        <label>stdexcept</label>
      </node>
      <node id="11825">
        <label>string</label>
      </node>
      <node id="11835">
        <label>fstream</label>
      </node>
      <node id="11830">
        <label>ostream</label>
      </node>
      <node id="11827">
        <label>libcsv/csv.h</label>
      </node>
      <node id="11821">
        <label>src/lib/io/GenericCSV.cpp</label>
        <link refid="GenericCSV.cpp"/>
        <childnode refid="11822" relation="include">
        </childnode>
        <childnode refid="11832" relation="include">
        </childnode>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11834" relation="include">
        </childnode>
        <childnode refid="11835" relation="include">
        </childnode>
        <childnode refid="11836" relation="include">
        </childnode>
        <childnode refid="11837" relation="include">
        </childnode>
        <childnode refid="11824" relation="include">
        </childnode>
        <childnode refid="11838" relation="include">
        </childnode>
        <childnode refid="11839" relation="include">
        </childnode>
        <childnode refid="11827" relation="include">
        </childnode>
      </node>
      <node id="11839">
        <label>string.h</label>
      </node>
      <node id="11832">
        <label>cstdio</label>
      </node>
      <node id="11828">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="11826" relation="include">
        </childnode>
        <childnode refid="11825" relation="include">
        </childnode>
        <childnode refid="11824" relation="include">
        </childnode>
        <childnode refid="11829" relation="include">
        </childnode>
        <childnode refid="11830" relation="include">
        </childnode>
      </node>
      <node id="11826">
        <label>vector</label>
      </node>
      <node id="11823">
        <label>iosfwd</label>
      </node>
      <node id="11833">
        <label>cstdlib</label>
      </node>
      <node id="11836">
        <label>iostream</label>
      </node>
      <node id="11822">
        <label>io/GenericCSV.h</label>
        <link refid="_generic_c_s_v_8h"/>
        <childnode refid="11823" relation="include">
        </childnode>
        <childnode refid="11824" relation="include">
        </childnode>
        <childnode refid="11825" relation="include">
        </childnode>
        <childnode refid="11826" relation="include">
        </childnode>
        <childnode refid="11827" relation="include">
        </childnode>
        <childnode refid="11828" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
      </node>
      <node id="11834">
        <label>cstring</label>
      </node>
      <node id="11838">
        <label>memory</label>
      </node>
      <node id="11837">
        <label>istream</label>
      </node>
      <node id="11831">
        <label>parameters.inc</label>
        <link refid="parameters_8inc"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecsv">csv</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="_generic_c_s_v_8cpp_1af05f06282ebab6532624b75e66326cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>param_member_impl</definition>
        <argsstring>(csv::params, unsigned char, Delimiter)</argsstring>
        <name>param_member_impl</name>
        <param>
          <type><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref></type>
        </param>
        <param>
          <type>unsigned</type>
          <declname>char</declname>
        </param>
        <param>
          <type>Delimiter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/GenericCSV.cpp" line="17"/>
      </memberdef>
      <memberdef kind="function" id="_generic_c_s_v_8cpp_1a9b017e5bd55f6ff41d7ac847f009690f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>param_member_impl</definition>
        <argsstring>(csv::params, ssize_t, LineStart)</argsstring>
        <name>param_member_impl</name>
        <param>
          <type><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref></type>
        </param>
        <param>
          <type>ssize_t</type>
        </param>
        <param>
          <type>LineStart</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/GenericCSV.cpp" line="18"/>
      </memberdef>
      <memberdef kind="function" id="_generic_c_s_v_8cpp_1a52d8d1304e612d05f0f4329eb01c1cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>param_member_impl</definition>
        <argsstring>(csv::params, ssize_t, LineCount)</argsstring>
        <name>param_member_impl</name>
        <param>
          <type><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref></type>
        </param>
        <param>
          <type>ssize_t</type>
        </param>
        <param>
          <type>LineCount</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/lanice/src/lib/io/GenericCSV.cpp" line="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_generic_c_s_v_8h" kindref="compound">io/GenericCSV.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;istream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libcsv/csv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="_c_s_v_loader_8h_1a7dd726b83c37b5eb2e3fa5fba8e27c9d" kindref="member">param_member_impl</ref>(<ref refid="classcsv_1_1params" kindref="compound">csv::params</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/>Delimiter);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="_c_s_v_loader_8h_1a7dd726b83c37b5eb2e3fa5fba8e27c9d" kindref="member">param_member_impl</ref>(<ref refid="classcsv_1_1params" kindref="compound">csv::params</ref>,<sp/>ssize_t,<sp/>LineStart);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="_c_s_v_loader_8h_1a7dd726b83c37b5eb2e3fa5fba8e27c9d" kindref="member">param_member_impl</ref>(<ref refid="classcsv_1_1params" kindref="compound">csv::params</ref>,<sp/>ssize_t,<sp/>LineCount);<sp/></highlight><highlight class="comment">//<sp/>-1<sp/>means<sp/>unlimited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacecsv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">csv<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacecsv_1a1b60ce1b9cb769dde90f99f26b414b7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecsv_1a1b60ce1b9cb769dde90f99f26b414b7e" kindref="member">genericLineBasedParsing</ref>(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istream<sp/>&amp;file,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1a6b25624417bf944a4ddba487c2dc9492" kindref="member">field_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a70877182245a5a09a3f0f9f200a52dfd" kindref="member">cb_per_field</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1af8aabd2a8735efe3f4cd927604f27ea3" kindref="member">line_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a0dd4fdff4b4448198fd5f7ee03e13e4b" kindref="member">cb_per_line</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref><sp/>&amp;<ref refid="classcsv_1_1params" kindref="compound">params</ref>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">csv_parser<sp/>parser;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!csv_init(&amp;parser,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_set_opts(&amp;parser,<sp/>CSV_APPEND_NULL);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_set_delim(&amp;parser,<sp/>params.<ref refid="classcsv_1_1params_1a1c5b40ae727c01df69264338b99c2b5e" kindref="member">getDelimiter</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_start<sp/>=<sp/>params.<ref refid="classcsv_1_1params_1a32ecc7afbb0dd496aa0e3d6009f69efb" kindref="member">getLineStart</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_start<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line_start<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(file,<sp/>line);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--line_start;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(file,<sp/>line))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++lineCount;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line.append(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csv_parse(&amp;parser,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.c_str(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.size(),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_s_v_loader_8cpp_1a70877182245a5a09a3f0f9f200a52dfd" kindref="member">cb_per_field</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_s_v_loader_8cpp_1a0dd4fdff4b4448198fd5f7ee03e13e4b" kindref="member">cb_per_line</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data)<sp/>!=<sp/>line.size())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1_parser_error" kindref="compound">ParserError</ref>(csv_strerror(csv_error(&amp;parser)));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="classcsv_1_1params_1ad6c6243a6fb03938ac8865c67e96e457" kindref="member">getLineCount</ref>()<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>lineCount<sp/>&gt;=<sp/>params.<ref refid="classcsv_1_1params_1ad6c6243a6fb03938ac8865c67e96e457" kindref="member">getLineCount</ref>())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.bad())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_fini(&amp;parser,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_field,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_line,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>csv_free(&amp;parser);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespacecsv_1aeb9d9a0e22254edc217927ca7105c8c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecsv_1aeb9d9a0e22254edc217927ca7105c8c1" kindref="member">genericParse</ref>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::istream<sp/>&amp;file,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filename,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1a6b25624417bf944a4ddba487c2dc9492" kindref="member">field_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a70877182245a5a09a3f0f9f200a52dfd" kindref="member">cb_per_field</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1af8aabd2a8735efe3f4cd927604f27ea3" kindref="member">line_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a0dd4fdff4b4448198fd5f7ee03e13e4b" kindref="member">cb_per_line</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref><sp/>&amp;<ref refid="classcsv_1_1params" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;std::FILE,<sp/>int<sp/>(*)(std::FILE<sp/>*)&gt;<sp/>unique_file_ptr;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>unique_file_ptr<sp/>file(fopen(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">),<sp/>fclose);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1_parser_error" kindref="compound">ParserError</ref>(std::string(</highlight><highlight class="stringliteral">&quot;File<sp/>Opening<sp/>Failed&quot;</highlight><highlight class="normal">)<sp/>+<sp/><sp/>std::strerror(errno));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">csv_parser<sp/>parser;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!csv_init(&amp;parser,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_set_opts(&amp;parser,<sp/>CSV_APPEND_NULL);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_set_delim(&amp;parser,<sp/>params.<ref refid="classcsv_1_1params_1a1c5b40ae727c01df69264338b99c2b5e" kindref="member">getDelimiter</ref>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_start<sp/>=<sp/>params.<ref refid="classcsv_1_1params_1a32ecc7afbb0dd496aa0e3d6009f69efb" kindref="member">getLineStart</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_start<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>fgetc(file.get());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>c==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>--line_start;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c!=<sp/>EOF<sp/><sp/>&amp;&amp;<sp/>line_start<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1GB<sp/>Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block_size;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getenv(</highlight><highlight class="stringliteral">&quot;HYRISE_LOAD_BLOCK_SIZE&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_size<sp/>=<sp/>strtoul(getenv(</highlight><highlight class="stringliteral">&quot;HYRISE_LOAD_BLOCK_SIZE&quot;</highlight><highlight class="normal">),<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_size<sp/>=<sp/>1024<sp/>*<sp/>1024;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>readBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rdbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>calloc(block_size,<sp/>1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>file<sp/>until<sp/>we<sp/>cannot<sp/>extract<sp/>more<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readBytes<sp/>=<sp/>fread(rdbuf,<sp/>1,<sp/>block_size,<sp/>file.get());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csv_parse(&amp;parser,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdbuf,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readBytes,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_field,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_line,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data)<sp/>!=<sp/>(size_t)<sp/>readBytes)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(rdbuf);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1_parser_error" kindref="compound">ParserError</ref>(csv_strerror(csv_error(&amp;parser)));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(readBytes<sp/>==<sp/>block_size);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ferror(file.get()))<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(rdbuf);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1_parser_error" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_fini(&amp;parser,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_field,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_per_line,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>free(rdbuf);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>csv_free(&amp;parser);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="namespacecsv_1a6c5ac30992d9c7a987031b51b7e5fa93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecsv_1a6c5ac30992d9c7a987031b51b7e5fa93" kindref="member">genericParseFile</ref>(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1a6b25624417bf944a4ddba487c2dc9492" kindref="member">field_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a70877182245a5a09a3f0f9f200a52dfd" kindref="member">cb_per_field</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_generic_c_s_v_8h_1af8aabd2a8735efe3f4cd927604f27ea3" kindref="member">line_cb_t</ref><sp/><ref refid="_c_s_v_loader_8cpp_1a0dd4fdff4b4448198fd5f7ee03e13e4b" kindref="member">cb_per_line</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1params" kindref="compound">csv::params</ref><sp/>&amp;<ref refid="classcsv_1_1params" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(params.<ref refid="classcsv_1_1params_1ad6c6243a6fb03938ac8865c67e96e457" kindref="member">getLineCount</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(filename.c_str(),<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>file.bad())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1_parser_error" kindref="compound">ParserError</ref>(</highlight><highlight class="stringliteral">&quot;CSV<sp/>file<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecsv_1a1b60ce1b9cb769dde90f99f26b414b7e" kindref="member">genericLineBasedParsing</ref>(file,<sp/>cb_per_field,<sp/>cb_per_line,<sp/>data,<sp/>params);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="namespacecsv_1aeb9d9a0e22254edc217927ca7105c8c1" kindref="member">genericParse</ref>(filename,<sp/>cb_per_field,<sp/>cb_per_line,<sp/>data,<sp/>params);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="namespacecsv_1a00703627cf8844e5526335abdd7265a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecsv_1a00703627cf8844e5526335abdd7265a5" kindref="member">vector_cb_per_field</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>field_length,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcsv_1_1vector__cb__data" kindref="compound">vector_cb_data</ref><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>std::string<sp/>content(field_buffer,<sp/>field_length);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>data-&gt;<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>[data-&gt;<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>.size()<sp/>-<sp/>1].push_back(content);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="namespacecsv_1a68c444aa9e87b449b8da8fa2642b12cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecsv_1a68c444aa9e87b449b8da8fa2642b12cd" kindref="member">vector_cb_per_line</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>separator,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcsv_1_1vector__cb__data" kindref="compound">vector_cb_data</ref><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>data-&gt;<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>.resize(data-&gt;<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>.size()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="namespacecsv_1ab2ac4dd30e7d8265bea78f8c4b463666" refkind="member"><highlight class="normal">std::vector&lt;<sp/>line_t&gt;<sp/><ref refid="namespacecsv_1ab2ac4dd30e7d8265bea78f8c4b463666" kindref="member">parse_stream</ref>(std::istream<sp/>&amp;stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1params" kindref="compound">params</ref><sp/>&amp;<ref refid="classcsv_1_1params" kindref="compound">params</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="structcsv_1_1vector__cb__data" kindref="compound">vector_cb_data</ref><sp/>data;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="namespacecsv_1a1b60ce1b9cb769dde90f99f26b414b7e" kindref="member">genericLineBasedParsing</ref>(stream,<sp/>(<ref refid="_generic_c_s_v_8h_1a6b25624417bf944a4ddba487c2dc9492" kindref="member">field_cb_t</ref>)<sp/><ref refid="namespacecsv_1a00703627cf8844e5526335abdd7265a5" kindref="member">vector_cb_per_field</ref>,<sp/>(<ref refid="_generic_c_s_v_8h_1af8aabd2a8735efe3f4cd927604f27ea3" kindref="member">line_cb_t</ref>)<sp/><ref refid="namespacecsv_1a68c444aa9e87b449b8da8fa2642b12cd" kindref="member">vector_cb_per_line</ref>,<sp/>&amp;data,<sp/>params);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespacecsv_1a145f4469b34c5cc8d59f6ca118ed91dd" refkind="member"><highlight class="normal">std::vector&lt;<sp/>line_t<sp/>&gt;<sp/><ref refid="namespacecsv_1a145f4469b34c5cc8d59f6ca118ed91dd" kindref="member">parse_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcsv_1_1params" kindref="compound">params</ref><sp/>&amp;<ref refid="classcsv_1_1params" kindref="compound">params</ref>)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="structcsv_1_1vector__cb__data" kindref="compound">vector_cb_data</ref><sp/>data;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="namespacecsv_1a6c5ac30992d9c7a987031b51b7e5fa93" kindref="member">genericParseFile</ref>(filename,<sp/>(<ref refid="_generic_c_s_v_8h_1a6b25624417bf944a4ddba487c2dc9492" kindref="member">field_cb_t</ref>)<sp/><ref refid="namespacecsv_1a00703627cf8844e5526335abdd7265a5" kindref="member">vector_cb_per_field</ref>,<sp/>(<ref refid="_generic_c_s_v_8h_1af8aabd2a8735efe3f4cd927604f27ea3" kindref="member">line_cb_t</ref>)<sp/><ref refid="namespacecsv_1a68c444aa9e87b449b8da8fa2642b12cd" kindref="member">vector_cb_per_line</ref>,<sp/>&amp;data,<sp/>params);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.<ref refid="structcsv_1_1vector__cb__data_1ad9aa5f5b8d50a900adaf7ab80a6c0f10" kindref="member">lines</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/io/GenericCSV.cpp"/>
  </compounddef>
</doxygen>
