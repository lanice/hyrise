<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_expression_registration_8h" kind="file">
    <compoundname>ExpressionRegistration.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="yes">json.h</includes>
    <includes refid="types_8h" local="yes">helper/types.h</includes>
    <includes refid="make__unique_8h" local="yes">helper/make_unique.h</includes>
    <includes refid="noncopyable_8h" local="yes">helper/noncopyable.h</includes>
    <includes refid="_abstract_expression_8h" local="yes">access/expressions/AbstractExpression.h</includes>
    <includedby refid="_example_expression_8cpp" local="yes">src/lib/access/expressions/ExampleExpression.cpp</includedby>
    <includedby refid="_expression_registration_8cpp" local="yes">src/lib/access/expressions/ExpressionRegistration.cpp</includedby>
    <includedby refid="_generic_expressions_8cpp" local="yes">src/lib/access/expressions/GenericExpressions.cpp</includedby>
    <includedby refid="_table_scan_8cpp" local="yes">src/lib/access/TableScan.cpp</includedby>
    <incdepgraph>
      <node id="2908">
        <label>limits</label>
      </node>
      <node id="2913">
        <label>helper/noncopyable.h</label>
        <link refid="noncopyable_8h"/>
      </node>
      <node id="2907">
        <label>cstdint</label>
      </node>
      <node id="2904">
        <label>string</label>
      </node>
      <node id="2903">
        <label>map</label>
      </node>
      <node id="2905">
        <label>json.h</label>
      </node>
      <node id="2909">
        <label>vector</label>
      </node>
      <node id="2912">
        <label>utility</label>
      </node>
      <node id="2910">
        <label>helper/make_unique.h</label>
        <link refid="make__unique_8h"/>
        <childnode refid="2902" relation="include">
        </childnode>
        <childnode refid="2911" relation="include">
        </childnode>
        <childnode refid="2912" relation="include">
        </childnode>
      </node>
      <node id="2914">
        <label>access/expressions/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="2909" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
      </node>
      <node id="2911">
        <label>type_traits</label>
      </node>
      <node id="2906">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="2907" relation="include">
        </childnode>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2908" relation="include">
        </childnode>
        <childnode refid="2902" relation="include">
        </childnode>
        <childnode refid="2909" relation="include">
        </childnode>
      </node>
      <node id="2902">
        <label>memory</label>
      </node>
      <node id="2901">
        <label>src/lib/access/expressions/ExpressionRegistration.h</label>
        <link refid="ExpressionRegistration.h"/>
        <childnode refid="2902" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2905" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
        <childnode refid="2910" relation="include">
        </childnode>
        <childnode refid="2913" relation="include">
        </childnode>
        <childnode refid="2914" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2919">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="2916">
        <label>src/lib/access/expressions/ExampleExpression.cpp</label>
        <link refid="_example_expression_8cpp"/>
      </node>
      <node id="2917">
        <label>src/lib/access/expressions/ExpressionRegistration.cpp</label>
        <link refid="_expression_registration_8cpp"/>
      </node>
      <node id="2918">
        <label>src/lib/access/expressions/GenericExpressions.cpp</label>
        <link refid="_generic_expressions_8cpp"/>
      </node>
      <node id="2915">
        <label>src/lib/access/expressions/ExpressionRegistration.h</label>
        <link refid="ExpressionRegistration.h"/>
        <childnode refid="2916" relation="include">
        </childnode>
        <childnode refid="2917" relation="include">
        </childnode>
        <childnode refid="2918" relation="include">
        </childnode>
        <childnode refid="2919" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhyrise_1_1access_1_1_abstract_expression_factory" prot="public">hyrise::access::AbstractExpressionFactory</innerclass>
    <innerclass refid="classhyrise_1_1access_1_1_expression_factory" prot="public">hyrise::access::ExpressionFactory</innerclass>
    <innerclass refid="classhyrise_1_1access_1_1_expressions" prot="public">hyrise::access::Expressions</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_EXPRESSIONREGISTRATION_H_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_EXPRESSIONREGISTRATION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;json.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="make__unique_8h" kindref="compound">helper/make_unique.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="noncopyable_8h" kindref="compound">helper/noncopyable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_expression_8h" kindref="compound">access/expressions/AbstractExpression.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classhyrise_1_1access_1_1_abstract_expression_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_abstract_expression_factory" kindref="compound">AbstractExpressionFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="classhyrise_1_1access_1_1_abstract_expression_factory_1adeaf852568f6452303b09398b08e8613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_abstract_expression_factory_1adeaf852568f6452303b09398b08e8613" kindref="member">~AbstractExpressionFactory</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1af41209551d197107c71e3be44cb01982" kindref="member">expression_uptr_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_abstract_expression_factory_1a8bae79b6c445be5f668cefbeccd64de4" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value&amp;<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacehyrise_1_1access_1a9af43b459123c32272f960bdc16ee2ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;AbstractExpressionFactory&gt;<sp/><ref refid="namespacehyrise_1_1access_1a9af43b459123c32272f960bdc16ee2ca" kindref="member">expression_factory_ptr_t</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="26" refid="classhyrise_1_1access_1_1_expression_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_expression_factory" kindref="compound">ExpressionFactory</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_abstract_expression_factory" kindref="compound">AbstractExpressionFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="classhyrise_1_1access_1_1_expression_factory_1aa96a01e901f10f40c34875a27836d02c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1af41209551d197107c71e3be44cb01982" kindref="member">expression_uptr_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_expression_factory_1aa96a01e901f10f40c34875a27836d02c" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Expression::parse(value);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classhyrise_1_1access_1_1_expressions" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_expressions" kindref="compound" tooltip="Expression registration facility for custom expressions.">Expressions</ref><sp/>:<sp/><ref refid="classnoncopyable" kindref="compound" tooltip="Non-copyable baseclass, use to protect your class from copying.">noncopyable</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_expressions" kindref="compound" tooltip="Expression registration facility for custom expressions.">Expressions</ref>&amp;<sp/><ref refid="classhyrise_1_1access_1_1_expressions_1aae83c7f66d54561a1a10e3cdf8a3a62d" kindref="member">getInstance</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="39" refid="classhyrise_1_1access_1_1_expressions_1ac60b6296d132db01e27e9c5eb3cfb71f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1ac60b6296d132db01e27e9c5eb3cfb71f" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>callsign)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1aae83c7f66d54561a1a10e3cdf8a3a62d" kindref="member">getInstance</ref>().<ref refid="classhyrise_1_1access_1_1_expressions_1a7cd01dba35bf521dbdc1cf71e07e218c" kindref="member">addRegistration</ref>(callsign,<sp/><ref refid="make__unique_8h_1a0829a5e90a24afd12645b3d48cd08913" kindref="member">make_unique</ref>&lt;<ref refid="classhyrise_1_1access_1_1_expression_factory" kindref="compound">ExpressionFactory&lt;Expression&gt;</ref>&gt;());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classhyrise_1_1access_1_1_expressions_1a27320a0d1dcc2dca7fc3c88302e1c7e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1access_1af41209551d197107c71e3be44cb01982" kindref="member">expression_uptr_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1a27320a0d1dcc2dca7fc3c88302e1c7e5" kindref="member">parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>callsign,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1aae83c7f66d54561a1a10e3cdf8a3a62d" kindref="member">getInstance</ref>().<ref refid="classhyrise_1_1access_1_1_expressions_1a4f7b93e0af87c46a3daef0914ccc2128" kindref="member">createRegistered</ref>(callsign,<sp/>value);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="classhyrise_1_1access_1_1_expressions_1a5ce1f6c094af44e7d896b2d21ed133da" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>expression_factory_ptr_t&gt;<sp/><ref refid="classhyrise_1_1access_1_1_expressions_1a5ce1f6c094af44e7d896b2d21ed133da" kindref="member">_registrations</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1a7cd01dba35bf521dbdc1cf71e07e218c" kindref="member">addRegistration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>callsign,<sp/><ref refid="namespacehyrise_1_1access_1a9af43b459123c32272f960bdc16ee2ca" kindref="member">expression_factory_ptr_t</ref><sp/>ptr);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1access_1af41209551d197107c71e3be44cb01982" kindref="member">expression_uptr_t</ref><sp/><ref refid="classhyrise_1_1access_1_1_expressions_1a4f7b93e0af87c46a3daef0914ccc2128" kindref="member">createRegistered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>callsign,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value&amp;<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/lanice/src/lib/access/expressions/ExpressionRegistration.h"/>
  </compounddef>
</doxygen>
